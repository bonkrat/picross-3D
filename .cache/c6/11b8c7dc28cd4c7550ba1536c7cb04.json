{"id":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","dependencies":[{"name":"/Users/ross/Projects/picross-2/package.json","includedInParent":true,"mtime":1594439479060},{"name":"/Users/ross/Projects/picross-2/node_modules/troika-worker-utils/package.json","includedInParent":true,"mtime":1594331649814}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.troika_worker_utils = {}));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * Lightweight thenable implementation that is entirely self-contained within a single\n   * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n   *\n   * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n   * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n   *\n   * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n   * have the same constructor signature and does not expose a `catch` method or the static\n   * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n   * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n   * in a native-or-polyfilled Promise first.\n   *\n   * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n   * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n   * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n   * implementation I've found. And also, exercises like this are challenging and fun.)\n   */\n  function BespokeThenable() {\n    var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n    var queue = [];\n    var value;\n    var scheduled = 0;\n    var completeCalled = 0;\n\n    function then(onResolve, onReject) {\n      var nextThenable = BespokeThenable();\n\n      function handleNext() {\n        var cb = state > 0 ? onResolve : onReject;\n        if (isFn(cb)) {\n          try {\n            var result = cb(value);\n            if (result === nextThenable) {\n              recursiveError();\n            }\n            var resultThen = getThenableThen(result);\n            if (resultThen) {\n              resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n            } else {\n              nextThenable.resolve(result);\n            }\n          } catch (err) {\n            nextThenable.reject(err);\n          }\n        } else {\n          nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n        }\n      }\n\n      queue.push(handleNext);\n      if (state) {\n        scheduleQueueFlush();\n      }\n      return nextThenable\n    }\n\n    var resolve = oneTime(function (val) {\n      if (!completeCalled) {\n        complete(1, val);\n      }\n    });\n\n    var reject = oneTime(function (reason) {\n      if (!completeCalled) {\n        complete(-1, reason);\n      }\n    });\n\n    function complete(st, val) {\n      completeCalled++;\n      var ignoreThrow = 0;\n      try {\n        if (val === thenableObj) {\n          recursiveError();\n        }\n        var valThen = st > 0 && getThenableThen(val);\n        if (valThen) {\n          valThen.call(val, oneTime(function (v) {\n            ignoreThrow++;\n            complete(1, v);\n          }), oneTime(function (v) {\n            ignoreThrow++;\n            complete(-1, v);\n          }));\n        } else {\n          state = st;\n          value = val;\n          scheduleQueueFlush();\n        }\n      } catch(e) {\n        if (!state && !ignoreThrow) {\n          complete(-1, e);\n        }\n      }\n    }\n\n    function scheduleQueueFlush() {\n      if (!scheduled) {\n        setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n        scheduled = 1;\n      }\n    }\n\n    function flushQueue() {\n      var q = queue;\n      scheduled = 0;\n      queue = [];\n      q.forEach(callIt);\n    }\n\n    function callIt(fn) {\n      fn();\n    }\n\n    function getThenableThen(val) {\n      var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n      return isFn(valThen) && valThen\n    }\n\n    function oneTime(fn) {\n      var called = 0;\n      return function() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        if (!called++) {\n          fn.apply(this, args);\n        }\n      }\n    }\n\n    function recursiveError() {\n      throw new TypeError('Chaining cycle detected')\n    }\n\n    var isFn = function (v) { return typeof v === 'function'; };\n\n    var thenableObj = {\n      then: then,\n      resolve: resolve,\n      reject: reject\n    };\n    return thenableObj\n  }\n\n\n  /**\n   * Thenable implementation that uses a native Promise under the covers. This implementation\n   * is preferred if Promise is available, for better performance and dev tools integration.\n   * @constructor\n   */\n  function NativePromiseThenable() {\n    var resolve, reject;\n    var promise = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      then: promise.then.bind(promise),\n      resolve: resolve,\n      reject: reject\n    }\n  }\n\n  /**\n   * Promise.all() impl:\n   */\n  BespokeThenable.all = NativePromiseThenable.all = function(items) {\n    var resultCount = 0;\n    var results = [];\n    var out = DefaultThenable();\n    if (items.length === 0) {\n      out.resolve([]);\n    } else {\n      items.forEach(function (item, i) {\n        var itemThenable = DefaultThenable();\n        itemThenable.resolve(item);\n        itemThenable.then(function (res) {\n          resultCount++;\n          results[i] = res;\n          if (resultCount === items.length) {\n            out.resolve(results);\n          }\n        }, out.reject);\n      });\n    }\n    return out\n  };\n\n\n  /**\n   * Choose the best Thenable implementation and export it as the default.\n   */\n  var DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n  /**\n   * Main content for the worker that handles the loading and execution of\n   * modules within it.\n   */\n  function workerBootstrap() {\n    var modules = Object.create(null);\n\n    // Handle messages for registering a module\n    function registerModule(ref, callback) {\n      var id = ref.id;\n      var name = ref.name;\n      var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n      var init = ref.init; if ( init === void 0 ) init = function(){};\n      var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n      // Only register once\n      if (modules[id]) { return }\n\n      try {\n        // If any dependencies are modules, ensure they're registered and grab their value\n        dependencies = dependencies.map(function (dep) {\n          if (dep && dep.isWorkerModule) {\n            registerModule(dep, function (depResult) {\n              if (depResult instanceof Error) { throw depResult }\n            });\n            dep = modules[dep.id].value;\n          }\n          return dep\n        });\n\n        // Rehydrate functions\n        init = rehydrate((\"<\" + name + \">.init\"), init);\n        if (getTransferables) {\n          getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n        }\n\n        // Initialize the module and store its value\n        var value = null;\n        if (typeof init === 'function') {\n          value = init.apply(void 0, dependencies);\n        } else {\n          console.error('worker module init function failed to rehydrate');\n        }\n        modules[id] = {\n          id: id,\n          value: value,\n          getTransferables: getTransferables\n        };\n        callback(value);\n      } catch(err) {\n        if (!(err && err.noLog)) {\n          console.error(err);\n        }\n        callback(err);\n      }\n    }\n\n    // Handle messages for calling a registered module's result function\n    function callModule(ref, callback) {\n      var ref$1;\n\n      var id = ref.id;\n      var args = ref.args;\n      if (!modules[id] || typeof modules[id].value !== 'function') {\n        callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n      }\n      try {\n        var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n        if (result && typeof result.then === 'function') {\n          result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n        } else {\n          handleResult(result);\n        }\n      } catch(err) {\n        callback(err);\n      }\n      function handleResult(result) {\n        try {\n          var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n          if (!tx || !Array.isArray(tx) || !tx.length) {\n            tx = undefined; //postMessage is very picky about not passing null or empty transferables\n          }\n          callback(result, tx);\n        } catch(err) {\n          console.error(err);\n          callback(err);\n        }\n      }\n    }\n\n    function rehydrate(name, str) {\n      var result = void 0;\n      self.troikaDefine = function (r) { return result = r; };\n      var url = URL.createObjectURL(\n        new Blob(\n          [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n          {type: 'application/javascript'}\n        )\n      );\n      try {\n        importScripts(url);\n      } catch(err) {\n        console.error(err);\n      }\n      URL.revokeObjectURL(url);\n      delete self.troikaDefine;\n      return result\n    }\n\n    // Handler for all messages within the worker\n    self.addEventListener('message', function (e) {\n      var ref = e.data;\n      var messageId = ref.messageId;\n      var action = ref.action;\n      var data = ref.data;\n      try {\n        // Module registration\n        if (action === 'registerModule') {\n          registerModule(data, function (result) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: {isCallable: typeof result === 'function'}\n              });\n            }\n          });\n        }\n        // Invocation\n        if (action === 'callModule') {\n          callModule(data, function (result, transferables) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: result\n              }, transferables || undefined);\n            }\n          });\n        }\n      } catch(err) {\n        postMessage({\n          messageId: messageId,\n          success: false,\n          error: err.stack\n        });\n      }\n    });\n  }\n\n  /**\n   * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n   * thread, for when the execution environment doesn't support web workers or they\n   * are disallowed due to e.g. CSP security restrictions.\n   */\n  function defineMainThreadModule(options) {\n    var moduleFunc = function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return moduleFunc._getInitResult().then(function (initResult) {\n        if (typeof initResult === 'function') {\n          return initResult.apply(void 0, args)\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    };\n    moduleFunc._getInitResult = function() {\n      // We can ignore getTransferables in main thread. TODO workerId?\n      var dependencies = options.dependencies;\n      var init = options.init;\n\n      // Resolve dependencies\n      dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n      ) : [];\n\n      // Invoke init with the resolved dependencies\n      var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n        return init.apply(null, deps)\n      });\n\n      // Cache the resolved promise for subsequent calls\n      moduleFunc._getInitResult = function () { return initThenable; };\n\n      return initThenable\n    };\n    return moduleFunc\n  }\n\n  var supportsWorkers = function () {\n    var supported = false;\n\n    // Only attempt worker initialization in browsers; elsewhere it would just be\n    // noise e.g. loading into a Node environment for SSR.\n    if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n      try {\n        // TODO additional checks for things like importScripts within the worker?\n        //  Would need to be an async check.\n        var worker = new Worker(\n          URL.createObjectURL(\n            new Blob([''], { type: 'application/javascript' })\n          )\n        );\n        worker.terminate();\n        supported = true;\n      } catch (err) {\n        console.warn((\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\"));\n      }\n    }\n\n    // Cached result\n    supportsWorkers = function () { return supported; };\n    return supported\n  };\n\n  var _workerModuleId = 0;\n  var _messageId = 0;\n  var _allowInitAsString = false;\n  var workers = Object.create(null);\n  var openRequests = Object.create(null);\n  openRequests._count = 0;\n\n\n  /**\n   * Define a module of code that will be executed with a web worker. This provides a simple\n   * interface for moving chunks of logic off the main thread, and managing their dependencies\n   * among one another.\n   *\n   * @param {object} options\n   * @param {function} options.init - The main function that initializes the module. This will be run\n   *        within the worker, and will be passed the resolved dependencies as arguments. Its\n   *        return value becomes the module's content, which can then be used by other modules\n   *        that depend on it. This function can perform any logic using those dependencies, but\n   *        must not depend on anything from its parent closures.\n   * @param {array} [options.dependencies] - Provides any dependencies required by the init function:\n   *        - Primitives like strings, numbers, booleans\n   *        - Raw functions; these will be stringified and rehydrated within the worker so they\n   *          must not depend on anything from their parent closures\n   *        - Other worker modules; these will be resolved within the worker, and therefore modules\n   *          that provide functions can be called without having to cross the worker/main thread\n   *          boundary.\n   * @param {function} [options.getTransferables] - An optional function that will be run in the worker\n   *        just before posting the response value from a module call back to the main thread.\n   *        It will be passed that response value, and if it returns an array then that will be\n   *        used as the \"transferables\" parameter to `postMessage`. Use this if there are values\n   *        in the response that can/should be transfered rather than cloned.\n   * @param {string} [options.name] - A descriptive name for this module; this can be useful for\n   *        debugging but is not currently used for anything else.\n   * @param {string} [options.workerId] - By default all modules will run in the same dedicated worker,\n   *        but if you want to use multiple workers you can pass a `workerId` to indicate a specific\n   *        worker to spawn. Note that each worker is completely standalone and no data or state will\n   *        be shared between them. If a worker module is used as a dependency by worker modules\n   *        using different `workerId`s, then that dependency will be re-registered in each worker.\n   * @return {function(...[*]): {then}}\n   */\n  function defineWorkerModule(options) {\n    if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n      throw new Error('requires `options.init` function')\n    }\n    var dependencies = options.dependencies;\n    var init = options.init;\n    var getTransferables = options.getTransferables;\n    var workerId = options.workerId;\n\n    if (!supportsWorkers()) {\n      return defineMainThreadModule(options)\n    }\n\n    if (workerId == null) {\n      workerId = '#default';\n    }\n    var id = \"workerModule\" + (++_workerModuleId);\n    var name = options.name || id;\n    var registrationThenable = null;\n\n    dependencies = dependencies && dependencies.map(function (dep) {\n      // Wrap raw functions as worker modules with no dependencies\n      if (typeof dep === 'function' && !dep.workerModuleData) {\n        _allowInitAsString = true;\n        dep = defineWorkerModule({\n          workerId: workerId,\n          name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n          init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n        });\n        _allowInitAsString = false;\n      }\n      // Grab postable data for worker modules\n      if (dep && dep.workerModuleData) {\n        dep = dep.workerModuleData;\n      }\n      return dep\n    });\n\n    function moduleFunc() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Register this module if needed\n      if (!registrationThenable) {\n        registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      }\n\n      // Invoke the module, returning a thenable\n      return registrationThenable.then(function (ref) {\n        var isCallable = ref.isCallable;\n\n        if (isCallable) {\n          return callWorker(workerId,'callModule', {id: id, args: args})\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    }\n    moduleFunc.workerModuleData = {\n      isWorkerModule: true,\n      id: id,\n      name: name,\n      dependencies: dependencies,\n      init: stringifyFunction(init),\n      getTransferables: getTransferables && stringifyFunction(getTransferables)\n    };\n    return moduleFunc\n  }\n\n  /**\n   * Stringifies a function into a form that can be deserialized in the worker\n   * @param fn\n   */\n  function stringifyFunction(fn) {\n    var str = fn.toString();\n    // If it was defined in object method/property format, it needs to be modified\n    if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n      str = 'function ' + str;\n    }\n    return str\n  }\n\n\n  function getWorker(workerId) {\n    var worker = workers[workerId];\n    if (!worker) {\n      // Bootstrap the worker's content\n      var bootstrap = stringifyFunction(workerBootstrap);\n\n      // Create the worker from the bootstrap function content\n      worker = workers[workerId] = new Worker(\n        URL.createObjectURL(\n          new Blob(\n            [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n            {type: 'application/javascript'}\n          )\n        )\n      );\n\n      // Single handler for response messages from the worker\n      worker.onmessage = function (e) {\n        var response = e.data;\n        var msgId = response.messageId;\n        var callback = openRequests[msgId];\n        if (!callback) {\n          throw new Error('WorkerModule response with empty or unknown messageId')\n        }\n        delete openRequests[msgId];\n        openRequests.count--;\n        callback(response);\n      };\n    }\n    return worker\n  }\n\n  // Issue a call to the worker with a callback to handle the response\n  function callWorker(workerId, action, data) {\n    var thenable = DefaultThenable();\n    var messageId = ++_messageId;\n    openRequests[messageId] = function (response) {\n      if (response.success) {\n        thenable.resolve(response.result);\n      } else {\n        thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n      }\n    };\n    openRequests._count++;\n    if (openRequests.count > 1000) { //detect leaks\n      console.warn('Large number of open WorkerModule requests, some may not be returning');\n    }\n    getWorker(workerId).postMessage({\n      messageId: messageId,\n      action: action,\n      data: data\n    });\n    return thenable\n  }\n\n  /**\n   * Just the {@link Thenable} function wrapped as a worker module. If another worker\n   * module needs Thenable as a dependency, it's better to pass this module rather than\n   * the raw function in its `dependencies` array so it only gets registered once.\n   */\n  var ThenableWorkerModule = defineWorkerModule({\n    name: 'Thenable',\n    dependencies: [DefaultThenable],\n    init: function(Thenable) {\n      return Thenable\n    }\n  });\n\n  exports.Thenable = DefaultThenable;\n  exports.ThenableWorkerModule = ThenableWorkerModule;\n  exports.defineWorkerModule = defineWorkerModule;\n  exports.stringifyFunction = stringifyFunction;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}}],"sources":{"node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.troika_worker_utils = {}));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * Lightweight thenable implementation that is entirely self-contained within a single\n   * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n   *\n   * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n   * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n   *\n   * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n   * have the same constructor signature and does not expose a `catch` method or the static\n   * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n   * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n   * in a native-or-polyfilled Promise first.\n   *\n   * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n   * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n   * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n   * implementation I've found. And also, exercises like this are challenging and fun.)\n   */\n  function BespokeThenable() {\n    var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n    var queue = [];\n    var value;\n    var scheduled = 0;\n    var completeCalled = 0;\n\n    function then(onResolve, onReject) {\n      var nextThenable = BespokeThenable();\n\n      function handleNext() {\n        var cb = state > 0 ? onResolve : onReject;\n        if (isFn(cb)) {\n          try {\n            var result = cb(value);\n            if (result === nextThenable) {\n              recursiveError();\n            }\n            var resultThen = getThenableThen(result);\n            if (resultThen) {\n              resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n            } else {\n              nextThenable.resolve(result);\n            }\n          } catch (err) {\n            nextThenable.reject(err);\n          }\n        } else {\n          nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n        }\n      }\n\n      queue.push(handleNext);\n      if (state) {\n        scheduleQueueFlush();\n      }\n      return nextThenable\n    }\n\n    var resolve = oneTime(function (val) {\n      if (!completeCalled) {\n        complete(1, val);\n      }\n    });\n\n    var reject = oneTime(function (reason) {\n      if (!completeCalled) {\n        complete(-1, reason);\n      }\n    });\n\n    function complete(st, val) {\n      completeCalled++;\n      var ignoreThrow = 0;\n      try {\n        if (val === thenableObj) {\n          recursiveError();\n        }\n        var valThen = st > 0 && getThenableThen(val);\n        if (valThen) {\n          valThen.call(val, oneTime(function (v) {\n            ignoreThrow++;\n            complete(1, v);\n          }), oneTime(function (v) {\n            ignoreThrow++;\n            complete(-1, v);\n          }));\n        } else {\n          state = st;\n          value = val;\n          scheduleQueueFlush();\n        }\n      } catch(e) {\n        if (!state && !ignoreThrow) {\n          complete(-1, e);\n        }\n      }\n    }\n\n    function scheduleQueueFlush() {\n      if (!scheduled) {\n        setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n        scheduled = 1;\n      }\n    }\n\n    function flushQueue() {\n      var q = queue;\n      scheduled = 0;\n      queue = [];\n      q.forEach(callIt);\n    }\n\n    function callIt(fn) {\n      fn();\n    }\n\n    function getThenableThen(val) {\n      var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n      return isFn(valThen) && valThen\n    }\n\n    function oneTime(fn) {\n      var called = 0;\n      return function() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        if (!called++) {\n          fn.apply(this, args);\n        }\n      }\n    }\n\n    function recursiveError() {\n      throw new TypeError('Chaining cycle detected')\n    }\n\n    var isFn = function (v) { return typeof v === 'function'; };\n\n    var thenableObj = {\n      then: then,\n      resolve: resolve,\n      reject: reject\n    };\n    return thenableObj\n  }\n\n\n  /**\n   * Thenable implementation that uses a native Promise under the covers. This implementation\n   * is preferred if Promise is available, for better performance and dev tools integration.\n   * @constructor\n   */\n  function NativePromiseThenable() {\n    var resolve, reject;\n    var promise = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      then: promise.then.bind(promise),\n      resolve: resolve,\n      reject: reject\n    }\n  }\n\n  /**\n   * Promise.all() impl:\n   */\n  BespokeThenable.all = NativePromiseThenable.all = function(items) {\n    var resultCount = 0;\n    var results = [];\n    var out = DefaultThenable();\n    if (items.length === 0) {\n      out.resolve([]);\n    } else {\n      items.forEach(function (item, i) {\n        var itemThenable = DefaultThenable();\n        itemThenable.resolve(item);\n        itemThenable.then(function (res) {\n          resultCount++;\n          results[i] = res;\n          if (resultCount === items.length) {\n            out.resolve(results);\n          }\n        }, out.reject);\n      });\n    }\n    return out\n  };\n\n\n  /**\n   * Choose the best Thenable implementation and export it as the default.\n   */\n  var DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n  /**\n   * Main content for the worker that handles the loading and execution of\n   * modules within it.\n   */\n  function workerBootstrap() {\n    var modules = Object.create(null);\n\n    // Handle messages for registering a module\n    function registerModule(ref, callback) {\n      var id = ref.id;\n      var name = ref.name;\n      var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n      var init = ref.init; if ( init === void 0 ) init = function(){};\n      var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n      // Only register once\n      if (modules[id]) { return }\n\n      try {\n        // If any dependencies are modules, ensure they're registered and grab their value\n        dependencies = dependencies.map(function (dep) {\n          if (dep && dep.isWorkerModule) {\n            registerModule(dep, function (depResult) {\n              if (depResult instanceof Error) { throw depResult }\n            });\n            dep = modules[dep.id].value;\n          }\n          return dep\n        });\n\n        // Rehydrate functions\n        init = rehydrate((\"<\" + name + \">.init\"), init);\n        if (getTransferables) {\n          getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n        }\n\n        // Initialize the module and store its value\n        var value = null;\n        if (typeof init === 'function') {\n          value = init.apply(void 0, dependencies);\n        } else {\n          console.error('worker module init function failed to rehydrate');\n        }\n        modules[id] = {\n          id: id,\n          value: value,\n          getTransferables: getTransferables\n        };\n        callback(value);\n      } catch(err) {\n        if (!(err && err.noLog)) {\n          console.error(err);\n        }\n        callback(err);\n      }\n    }\n\n    // Handle messages for calling a registered module's result function\n    function callModule(ref, callback) {\n      var ref$1;\n\n      var id = ref.id;\n      var args = ref.args;\n      if (!modules[id] || typeof modules[id].value !== 'function') {\n        callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n      }\n      try {\n        var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n        if (result && typeof result.then === 'function') {\n          result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n        } else {\n          handleResult(result);\n        }\n      } catch(err) {\n        callback(err);\n      }\n      function handleResult(result) {\n        try {\n          var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n          if (!tx || !Array.isArray(tx) || !tx.length) {\n            tx = undefined; //postMessage is very picky about not passing null or empty transferables\n          }\n          callback(result, tx);\n        } catch(err) {\n          console.error(err);\n          callback(err);\n        }\n      }\n    }\n\n    function rehydrate(name, str) {\n      var result = void 0;\n      self.troikaDefine = function (r) { return result = r; };\n      var url = URL.createObjectURL(\n        new Blob(\n          [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n          {type: 'application/javascript'}\n        )\n      );\n      try {\n        importScripts(url);\n      } catch(err) {\n        console.error(err);\n      }\n      URL.revokeObjectURL(url);\n      delete self.troikaDefine;\n      return result\n    }\n\n    // Handler for all messages within the worker\n    self.addEventListener('message', function (e) {\n      var ref = e.data;\n      var messageId = ref.messageId;\n      var action = ref.action;\n      var data = ref.data;\n      try {\n        // Module registration\n        if (action === 'registerModule') {\n          registerModule(data, function (result) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: {isCallable: typeof result === 'function'}\n              });\n            }\n          });\n        }\n        // Invocation\n        if (action === 'callModule') {\n          callModule(data, function (result, transferables) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: result\n              }, transferables || undefined);\n            }\n          });\n        }\n      } catch(err) {\n        postMessage({\n          messageId: messageId,\n          success: false,\n          error: err.stack\n        });\n      }\n    });\n  }\n\n  /**\n   * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n   * thread, for when the execution environment doesn't support web workers or they\n   * are disallowed due to e.g. CSP security restrictions.\n   */\n  function defineMainThreadModule(options) {\n    var moduleFunc = function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return moduleFunc._getInitResult().then(function (initResult) {\n        if (typeof initResult === 'function') {\n          return initResult.apply(void 0, args)\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    };\n    moduleFunc._getInitResult = function() {\n      // We can ignore getTransferables in main thread. TODO workerId?\n      var dependencies = options.dependencies;\n      var init = options.init;\n\n      // Resolve dependencies\n      dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n      ) : [];\n\n      // Invoke init with the resolved dependencies\n      var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n        return init.apply(null, deps)\n      });\n\n      // Cache the resolved promise for subsequent calls\n      moduleFunc._getInitResult = function () { return initThenable; };\n\n      return initThenable\n    };\n    return moduleFunc\n  }\n\n  var supportsWorkers = function () {\n    var supported = false;\n\n    // Only attempt worker initialization in browsers; elsewhere it would just be\n    // noise e.g. loading into a Node environment for SSR.\n    if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n      try {\n        // TODO additional checks for things like importScripts within the worker?\n        //  Would need to be an async check.\n        var worker = new Worker(\n          URL.createObjectURL(\n            new Blob([''], { type: 'application/javascript' })\n          )\n        );\n        worker.terminate();\n        supported = true;\n      } catch (err) {\n        console.warn((\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\"));\n      }\n    }\n\n    // Cached result\n    supportsWorkers = function () { return supported; };\n    return supported\n  };\n\n  var _workerModuleId = 0;\n  var _messageId = 0;\n  var _allowInitAsString = false;\n  var workers = Object.create(null);\n  var openRequests = Object.create(null);\n  openRequests._count = 0;\n\n\n  /**\n   * Define a module of code that will be executed with a web worker. This provides a simple\n   * interface for moving chunks of logic off the main thread, and managing their dependencies\n   * among one another.\n   *\n   * @param {object} options\n   * @param {function} options.init - The main function that initializes the module. This will be run\n   *        within the worker, and will be passed the resolved dependencies as arguments. Its\n   *        return value becomes the module's content, which can then be used by other modules\n   *        that depend on it. This function can perform any logic using those dependencies, but\n   *        must not depend on anything from its parent closures.\n   * @param {array} [options.dependencies] - Provides any dependencies required by the init function:\n   *        - Primitives like strings, numbers, booleans\n   *        - Raw functions; these will be stringified and rehydrated within the worker so they\n   *          must not depend on anything from their parent closures\n   *        - Other worker modules; these will be resolved within the worker, and therefore modules\n   *          that provide functions can be called without having to cross the worker/main thread\n   *          boundary.\n   * @param {function} [options.getTransferables] - An optional function that will be run in the worker\n   *        just before posting the response value from a module call back to the main thread.\n   *        It will be passed that response value, and if it returns an array then that will be\n   *        used as the \"transferables\" parameter to `postMessage`. Use this if there are values\n   *        in the response that can/should be transfered rather than cloned.\n   * @param {string} [options.name] - A descriptive name for this module; this can be useful for\n   *        debugging but is not currently used for anything else.\n   * @param {string} [options.workerId] - By default all modules will run in the same dedicated worker,\n   *        but if you want to use multiple workers you can pass a `workerId` to indicate a specific\n   *        worker to spawn. Note that each worker is completely standalone and no data or state will\n   *        be shared between them. If a worker module is used as a dependency by worker modules\n   *        using different `workerId`s, then that dependency will be re-registered in each worker.\n   * @return {function(...[*]): {then}}\n   */\n  function defineWorkerModule(options) {\n    if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n      throw new Error('requires `options.init` function')\n    }\n    var dependencies = options.dependencies;\n    var init = options.init;\n    var getTransferables = options.getTransferables;\n    var workerId = options.workerId;\n\n    if (!supportsWorkers()) {\n      return defineMainThreadModule(options)\n    }\n\n    if (workerId == null) {\n      workerId = '#default';\n    }\n    var id = \"workerModule\" + (++_workerModuleId);\n    var name = options.name || id;\n    var registrationThenable = null;\n\n    dependencies = dependencies && dependencies.map(function (dep) {\n      // Wrap raw functions as worker modules with no dependencies\n      if (typeof dep === 'function' && !dep.workerModuleData) {\n        _allowInitAsString = true;\n        dep = defineWorkerModule({\n          workerId: workerId,\n          name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n          init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n        });\n        _allowInitAsString = false;\n      }\n      // Grab postable data for worker modules\n      if (dep && dep.workerModuleData) {\n        dep = dep.workerModuleData;\n      }\n      return dep\n    });\n\n    function moduleFunc() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Register this module if needed\n      if (!registrationThenable) {\n        registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      }\n\n      // Invoke the module, returning a thenable\n      return registrationThenable.then(function (ref) {\n        var isCallable = ref.isCallable;\n\n        if (isCallable) {\n          return callWorker(workerId,'callModule', {id: id, args: args})\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    }\n    moduleFunc.workerModuleData = {\n      isWorkerModule: true,\n      id: id,\n      name: name,\n      dependencies: dependencies,\n      init: stringifyFunction(init),\n      getTransferables: getTransferables && stringifyFunction(getTransferables)\n    };\n    return moduleFunc\n  }\n\n  /**\n   * Stringifies a function into a form that can be deserialized in the worker\n   * @param fn\n   */\n  function stringifyFunction(fn) {\n    var str = fn.toString();\n    // If it was defined in object method/property format, it needs to be modified\n    if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n      str = 'function ' + str;\n    }\n    return str\n  }\n\n\n  function getWorker(workerId) {\n    var worker = workers[workerId];\n    if (!worker) {\n      // Bootstrap the worker's content\n      var bootstrap = stringifyFunction(workerBootstrap);\n\n      // Create the worker from the bootstrap function content\n      worker = workers[workerId] = new Worker(\n        URL.createObjectURL(\n          new Blob(\n            [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n            {type: 'application/javascript'}\n          )\n        )\n      );\n\n      // Single handler for response messages from the worker\n      worker.onmessage = function (e) {\n        var response = e.data;\n        var msgId = response.messageId;\n        var callback = openRequests[msgId];\n        if (!callback) {\n          throw new Error('WorkerModule response with empty or unknown messageId')\n        }\n        delete openRequests[msgId];\n        openRequests.count--;\n        callback(response);\n      };\n    }\n    return worker\n  }\n\n  // Issue a call to the worker with a callback to handle the response\n  function callWorker(workerId, action, data) {\n    var thenable = DefaultThenable();\n    var messageId = ++_messageId;\n    openRequests[messageId] = function (response) {\n      if (response.success) {\n        thenable.resolve(response.result);\n      } else {\n        thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n      }\n    };\n    openRequests._count++;\n    if (openRequests.count > 1000) { //detect leaks\n      console.warn('Large number of open WorkerModule requests, some may not be returning');\n    }\n    getWorker(workerId).postMessage({\n      messageId: messageId,\n      action: action,\n      data: data\n    });\n    return thenable\n  }\n\n  /**\n   * Just the {@link Thenable} function wrapped as a worker module. If another worker\n   * module needs Thenable as a dependency, it's better to pass this module rather than\n   * the raw function in its `dependencies` array so it only gets registered once.\n   */\n  var ThenableWorkerModule = defineWorkerModule({\n    name: 'Thenable',\n    dependencies: [DefaultThenable],\n    init: function(Thenable) {\n      return Thenable\n    }\n  });\n\n  exports.Thenable = DefaultThenable;\n  exports.ThenableWorkerModule = ThenableWorkerModule;\n  exports.defineWorkerModule = defineWorkerModule;\n  exports.stringifyFunction = stringifyFunction;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"lineCount":632}},"error":null,"hash":"3d120954b4faf121c90c3bab12027aee","cacheData":{"env":{}}}