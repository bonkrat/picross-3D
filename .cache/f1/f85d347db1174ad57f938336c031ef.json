{"id":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","dependencies":[{"name":"/Users/ross/Projects/picross-2/package.json","includedInParent":true,"mtime":1594439479060},{"name":"/Users/ross/Projects/picross-2/node_modules/troika-3d-text/package.json","includedInParent":true,"mtime":1594331649814},{"name":"three","loc":{"line":2,"column":90},"parent":"/Users/ross/Projects/picross-2/node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","resolved":"/Users/ross/Projects/picross-2/node_modules/three/build/three.module.js"},{"name":"troika-worker-utils","loc":{"line":2,"column":108},"parent":"/Users/ross/Projects/picross-2/node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","resolved":"/Users/ross/Projects/picross-2/node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js"},{"name":"troika-three-utils","loc":{"line":2,"column":140},"parent":"/Users/ross/Projects/picross-2/node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","resolved":"/Users/ross/Projects/picross-2/node_modules/troika-three-utils/dist/troika-three-utils.umd.js"},{"name":"process","parent":"/Users/ross/Projects/picross-2/node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","resolved":"/Users/ross/Projects/picross-2/node_modules/process/browser.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\nvar process = require(\"process\");\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('three'), require('troika-worker-utils'), require('troika-three-utils')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'three', 'troika-worker-utils', 'troika-three-utils'], factory) :\n  (global = global || self, factory(global.troika_3d_text = {}, global.THREE, global.troika_worker_utils, global.troika_three_utils));\n}(this, (function (exports, three, troikaWorkerUtils, troikaThreeUtils) { 'use strict';\n\n  /**\n   * Initializes and returns a function to generate an SDF texture for a given glyph.\n   * @param {function} createGlyphSegmentsQuadtree - factory for a GlyphSegmentsQuadtree implementation.\n   * @param {number} config.sdfTextureSize - the length of one side of the resulting texture image.\n   *                 Larger images encode more details. Should be a power of 2.\n   * @param {number} config.sdfDistancePercent - see docs for SDF_DISTANCE_PERCENT in TextBuilder.js\n   *\n   * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\n   */\n  function createSDFGenerator(createGlyphSegmentsQuadtree, config) {\n    var sdfTextureSize = config.sdfTextureSize;\n    var sdfDistancePercent = config.sdfDistancePercent;\n\n    /**\n     * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n     */\n    var CURVE_POINTS = 16;\n\n    /**\n     * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n        y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n      }\n    }\n\n    /**\n     * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n        y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n      }\n    }\n\n    /**\n     * Generate an SDF texture segment for a single glyph.\n     * @param {object} glyphObj\n     * @return {{textureData: Uint8Array, renderingBounds: *[]}}\n     */\n    function generateSDF(glyphObj) {\n      //console.time('glyphSDF')\n\n      var textureData = new Uint8Array(sdfTextureSize * sdfTextureSize);\n\n      // Determine mapping between glyph grid coords and sdf grid coords\n      var glyphW = glyphObj.xMax - glyphObj.xMin;\n      var glyphH = glyphObj.yMax - glyphObj.yMin;\n\n      // Choose a maximum distance radius in font units, based on the glyph's max dimensions\n      var fontUnitsMaxDist = Math.max(glyphW, glyphH) * sdfDistancePercent;\n\n      // Use that, extending to the texture edges, to find conversion ratios between texture units and font units\n      var fontUnitsPerXTexel = (glyphW + fontUnitsMaxDist * 2) / sdfTextureSize;\n      var fontUnitsPerYTexel = (glyphH + fontUnitsMaxDist * 2) / sdfTextureSize;\n\n      var textureMinFontX = glyphObj.xMin - fontUnitsMaxDist - fontUnitsPerXTexel;\n      var textureMinFontY = glyphObj.yMin - fontUnitsMaxDist - fontUnitsPerYTexel;\n      var textureMaxFontX = glyphObj.xMax + fontUnitsMaxDist + fontUnitsPerXTexel;\n      var textureMaxFontY = glyphObj.yMax + fontUnitsMaxDist + fontUnitsPerYTexel;\n\n      function textureXToFontX(x) {\n        return textureMinFontX + (textureMaxFontX - textureMinFontX) * x / sdfTextureSize\n      }\n\n      function textureYToFontY(y) {\n        return textureMinFontY + (textureMaxFontY - textureMinFontY) * y / sdfTextureSize\n      }\n\n      if (glyphObj.pathCommandCount) { //whitespace chars will have no commands, so we can skip all this\n        // Decompose all paths into straight line segments and add them to a quadtree\n        var lineSegmentsIndex = createGlyphSegmentsQuadtree(glyphObj);\n        var firstX, firstY, prevX, prevY;\n        glyphObj.forEachPathCommand(function (type, x0, y0, x1, y1, x2, y2) {\n          switch (type) {\n            case 'M':\n              prevX = firstX = x0;\n              prevY = firstY = y0;\n              break\n            case 'L':\n              if (x0 !== prevX || y0 !== prevY) { //yup, some fonts have zero-length line commands\n                lineSegmentsIndex.addLineSegment(prevX, prevY, (prevX = x0), (prevY = y0));\n              }\n              break\n            case 'Q': {\n              var prevPoint = {x: prevX, y: prevY};\n              for (var i = 1; i < CURVE_POINTS; i++) {\n                var nextPoint = pointOnQuadraticBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  i / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n                prevPoint = nextPoint;\n              }\n              prevX = x1;\n              prevY = y1;\n              break\n            }\n            case 'C': {\n              var prevPoint$1 = {x: prevX, y: prevY};\n              for (var i$1 = 1; i$1 < CURVE_POINTS; i$1++) {\n                var nextPoint$1 = pointOnCubicBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  x2, y2,\n                  i$1 / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint$1.x, prevPoint$1.y, nextPoint$1.x, nextPoint$1.y);\n                prevPoint$1 = nextPoint$1;\n              }\n              prevX = x2;\n              prevY = y2;\n              break\n            }\n            case 'Z':\n              if (prevX !== firstX || prevY !== firstY) {\n                lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n              }\n              break\n          }\n        });\n\n        // For each target SDF texel, find the distance from its center to its nearest line segment,\n        // map that distance to an alpha value, and write that alpha to the texel\n        for (var sdfX = 0; sdfX < sdfTextureSize; sdfX++) {\n          for (var sdfY = 0; sdfY < sdfTextureSize; sdfY++) {\n            var signedDist = lineSegmentsIndex.findNearestSignedDistance(\n              textureXToFontX(sdfX + 0.5),\n              textureYToFontY(sdfY + 0.5),\n              fontUnitsMaxDist\n            );\n            //if (!isFinite(signedDist)) throw 'infinite distance!'\n            var alpha = isFinite(signedDist) ? Math.round(255 * (1 + signedDist / fontUnitsMaxDist) * 0.5) : signedDist;\n            alpha = Math.max(0, Math.min(255, alpha)); //clamp\n            textureData[sdfY * sdfTextureSize + sdfX] = alpha;\n          }\n        }\n      }\n\n      //console.timeEnd('glyphSDF')\n\n      return {\n        textureData: textureData,\n\n        renderingBounds: [\n          textureMinFontX,\n          textureMinFontY,\n          textureMaxFontX,\n          textureMaxFontY\n        ]\n      }\n    }\n\n\n    return generateSDF\n  }\n\n  /**\n   * Creates a self-contained environment for processing text rendering requests.\n   *\n   * It is important that this function has no closure dependencies, so that it can be easily injected\n   * into the source for a Worker without requiring a build step or complex dependency loading. All its\n   * dependencies must be passed in at initialization.\n   *\n   * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n   * a standardized structure giving access to the font and its glyphs:\n   *   {\n   *     unitsPerEm: number,\n   *     ascender: number,\n   *     descender: number,\n   *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n   *       //invokes callback for each glyph to render, passing it an object:\n   *       callback({\n   *         index: number,\n   *         advanceWidth: number,\n   *         xMin: number,\n   *         yMin: number,\n   *         xMax: number,\n   *         yMax: number,\n   *         pathCommandCount: number,\n   *         forEachPathCommand(callback) {\n   *           //invokes callback for each path command, with args:\n   *           callback(\n   *             type: 'M|L|C|Q|Z',\n   *             ...args //0 to 6 args depending on the type\n   *           )\n   *         }\n   *       })\n   *     }\n   *   }\n   * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\n   * from it.\n   * @param {Object} config\n   * @return {Object}\n   */\n  function createFontProcessor(fontParser, sdfGenerator, config) {\n\n    var defaultFontUrl = config.defaultFontUrl;\n\n\n    /**\n     * @private\n     * Holds the loaded data for all fonts\n     *\n     * {\n     *   fontUrl: {\n     *     fontObj: {}, //result of the fontParser\n     *     glyphs: {\n     *       [glyphIndex]: {\n     *         atlasIndex: 0,\n     *         glyphObj: {}, //glyph object from the fontParser\n     *         renderingBounds: [x0, y0, x1, y1]\n     *       },\n     *       ...\n     *     },\n     *     glyphCount: 123\n     *   }\n     * }\n     */\n    var fonts = Object.create(null);\n\n    var INF = Infinity;\n\n\n    /**\n     * Load a given font url\n     */\n    function doLoadFont(url, callback) {\n      function tryLoad() {\n        var onError = function (err) {\n          console.error((\"Failure loading font \" + url + (url === defaultFontUrl ? '' : '; trying fallback')), err);\n          if (url !== defaultFontUrl) {\n            url = defaultFontUrl;\n            tryLoad();\n          }\n        };\n        try {\n          var request = new XMLHttpRequest();\n          request.open('get', url, true);\n          request.responseType = 'arraybuffer';\n          request.onload = function () {\n            if (request.status >= 400) {\n              onError(new Error(request.statusText));\n            }\n            else if (request.status > 0) {\n              try {\n                var fontObj = fontParser(request.response);\n                callback(fontObj);\n              } catch (e) {\n                onError(e);\n              }\n            }\n          };\n          request.onerror = onError;\n          request.send();\n        } catch(err) {\n          onError(err);\n        }\n      }\n      tryLoad();\n    }\n\n\n    /**\n     * Load a given font url if needed, invoking a callback when it's loaded. If already\n     * loaded, the callback will be called synchronously.\n     */\n    function loadFont(fontUrl, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      var atlas = fonts[fontUrl];\n      if (atlas) {\n        // if currently loading font, add to callbacks, otherwise execute immediately\n        if (atlas.onload) {\n          atlas.onload.push(callback);\n        } else {\n          callback();\n        }\n      } else {\n        var loadingAtlas = fonts[fontUrl] = {onload: [callback]};\n        doLoadFont(fontUrl, function (fontObj) {\n          atlas = fonts[fontUrl] = {\n            fontObj: fontObj,\n            glyphs: {},\n            glyphCount: 0\n          };\n          loadingAtlas.onload.forEach(function (cb) { return cb(); });\n        });\n      }\n    }\n\n\n    /**\n     * Get the atlas data for a given font url, loading it from the network and initializing\n     * its atlas data objects if necessary.\n     */\n    function getSdfAtlas(fontUrl, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      loadFont(fontUrl, function () {\n        callback(fonts[fontUrl]);\n      });\n    }\n\n\n    /**\n     * Main entry point.\n     * Process a text string with given font and formatting parameters, and return all info\n     * necessary to render all its glyphs.\n     */\n    function process(\n      ref,\n      callback,\n      metricsOnly\n    ) {\n      var text = ref.text; if ( text === void 0 ) text = '';\n      var font = ref.font; if ( font === void 0 ) font = defaultFontUrl;\n      var fontSize = ref.fontSize; if ( fontSize === void 0 ) fontSize = 1;\n      var letterSpacing = ref.letterSpacing; if ( letterSpacing === void 0 ) letterSpacing = 0;\n      var lineHeight = ref.lineHeight; if ( lineHeight === void 0 ) lineHeight = 'normal';\n      var maxWidth = ref.maxWidth; if ( maxWidth === void 0 ) maxWidth = INF;\n      var textAlign = ref.textAlign; if ( textAlign === void 0 ) textAlign = 'left';\n      var whiteSpace = ref.whiteSpace; if ( whiteSpace === void 0 ) whiteSpace = 'normal';\n      var overflowWrap = ref.overflowWrap; if ( overflowWrap === void 0 ) overflowWrap = 'normal';\n      var anchorX = ref.anchorX; if ( anchorX === void 0 ) anchorX = 0;\n      var anchorY = ref.anchorY; if ( anchorY === void 0 ) anchorY = 0;\n      var includeCaretPositions = ref.includeCaretPositions; if ( includeCaretPositions === void 0 ) includeCaretPositions = false;\n      var chunkedBoundsSize = ref.chunkedBoundsSize; if ( chunkedBoundsSize === void 0 ) chunkedBoundsSize = 8192;\n      var colorRanges = ref.colorRanges; if ( colorRanges === void 0 ) colorRanges = null;\n      if ( metricsOnly === void 0 ) metricsOnly=false;\n\n      var mainStart = now();\n      var timings = {total: 0, fontLoad: 0, layout: 0, sdf: {}, sdfTotal: 0};\n\n      // Ensure newlines are normalized\n      if (text.indexOf('\\r') > -1) {\n        console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\n        text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      }\n\n      // Ensure we've got numbers not strings\n      fontSize = +fontSize;\n      letterSpacing = +letterSpacing;\n      maxWidth = +maxWidth;\n      lineHeight = lineHeight || 'normal';\n\n      getSdfAtlas(font, function (atlas) {\n        var fontObj = atlas.fontObj;\n        var hasMaxWidth = isFinite(maxWidth);\n        var newGlyphs = null;\n        var glyphBounds = null;\n        var glyphAtlasIndices = null;\n        var glyphColors = null;\n        var caretPositions = null;\n        var totalBounds = null;\n        var chunkedBounds = null;\n        var maxLineWidth = 0;\n        var renderableGlyphCount = 0;\n        var canWrap = whiteSpace !== 'nowrap';\n        var ascender = fontObj.ascender;\n        var descender = fontObj.descender;\n        var unitsPerEm = fontObj.unitsPerEm;\n        timings.fontLoad = now() - mainStart;\n        var layoutStart = now();\n\n        // Find conversion between native font units and fontSize units; this will already be done\n        // for the gx/gy values below but everything else we'll need to convert\n        var fontSizeMult = fontSize / unitsPerEm;\n\n        // Determine appropriate value for 'normal' line height based on the font's actual metrics\n        // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n        if (lineHeight === 'normal') {\n          lineHeight = (ascender - descender) / unitsPerEm;\n        }\n\n        // Determine line height and leading adjustments\n        lineHeight = lineHeight * fontSize;\n        var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n        var topBaseline = -(fontSize + halfLeading);\n        var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n        var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n        // Distribute glyphs into lines based on wrapping\n        var lineXOffset = 0;\n        var currentLine = new TextLine();\n        var lines = [currentLine];\n        fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n          var char = text.charAt(charIndex);\n          var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n          var curLineCount = currentLine.count;\n          var nextLine;\n\n          // Calc isWhitespace and isEmpty once per glyphObj\n          if (!('isEmpty' in glyphObj)) {\n            glyphObj.isWhitespace = !!char && /\\s/.test(char);\n            glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax;\n          }\n          if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n            renderableGlyphCount++;\n          }\n\n          // If a non-whitespace character overflows the max width, we need to soft-wrap\n          if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n            // If it's the first char after a whitespace, start a new line\n            if (currentLine.glyphAt(curLineCount - 1).glyphObj.isWhitespace) {\n              nextLine = new TextLine();\n              lineXOffset = -glyphX;\n            } else {\n              // Back up looking for a whitespace character to wrap at\n              for (var i = curLineCount; i--;) {\n                // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n                if (i === 0 && overflowWrap === 'break-word') {\n                  nextLine = new TextLine();\n                  lineXOffset = -glyphX;\n                  break\n                }\n                // Found a soft break point; move all chars since it to a new line\n                else if (currentLine.glyphAt(i).glyphObj.isWhitespace) {\n                  nextLine = currentLine.splitAt(i + 1);\n                  var adjustX = nextLine.glyphAt(0).x;\n                  lineXOffset -= adjustX;\n                  for (var j = nextLine.count; j--;) {\n                    nextLine.glyphAt(j).x -= adjustX;\n                  }\n                  break\n                }\n              }\n            }\n            if (nextLine) {\n              currentLine.isSoftWrapped = true;\n              currentLine = nextLine;\n              lines.push(currentLine);\n              maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n            }\n          }\n\n          var fly = currentLine.glyphAt(currentLine.count);\n          fly.glyphObj = glyphObj;\n          fly.x = glyphX + lineXOffset;\n          fly.width = glyphWidth;\n          fly.charIndex = charIndex;\n\n          // Handle hard line breaks\n          if (char === '\\n') {\n            currentLine = new TextLine();\n            lines.push(currentLine);\n            lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize));\n          }\n        });\n\n        // Calculate width of each line (excluding trailing whitespace) and maximum block width\n        lines.forEach(function (line) {\n          for (var i = line.count; i--;) {\n            var ref = line.glyphAt(i);\n            var glyphObj = ref.glyphObj;\n            var x = ref.x;\n            var width = ref.width;\n            if (!glyphObj.isWhitespace) {\n              line.width = x + width;\n              if (line.width > maxLineWidth) {\n                maxLineWidth = line.width;\n              }\n              return\n            }\n          }\n        });\n\n        if (!metricsOnly) {\n          // Find overall position adjustments for anchoring\n          var anchorXOffset = 0;\n          var anchorYOffset = 0;\n          if (anchorX) {\n            if (typeof anchorX === 'number') {\n              anchorXOffset = -anchorX;\n            }\n            else if (typeof anchorX === 'string') {\n              anchorXOffset = -maxLineWidth * (\n                anchorX === 'left' ? 0 :\n                anchorX === 'center' ? 0.5 :\n                anchorX === 'right' ? 1 :\n                parsePercent(anchorX)\n              );\n            }\n          }\n          if (anchorY) {\n            if (typeof anchorY === 'number') {\n              anchorYOffset = -anchorY;\n            }\n            else if (typeof anchorY === 'string') {\n              var height = lines.length * lineHeight;\n              anchorYOffset = anchorY === 'top' ? 0 :\n                anchorY === 'top-baseline' ? -topBaseline :\n                anchorY === 'middle' ? height / 2 :\n                anchorY === 'bottom' ? height :\n                anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\n                parsePercent(anchorY) * height;\n            }\n          }\n\n          // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n          // collecting all renderable glyphs into a single collection.\n          glyphBounds = new Float32Array(renderableGlyphCount * 4);\n          glyphAtlasIndices = new Float32Array(renderableGlyphCount);\n          totalBounds = [INF, INF, -INF, -INF];\n          chunkedBounds = [];\n          var lineYOffset = topBaseline;\n          if (includeCaretPositions) {\n            caretPositions = new Float32Array(text.length * 3);\n          }\n          if (colorRanges) {\n            glyphColors = new Uint8Array(renderableGlyphCount * 3);\n          }\n          var renderableGlyphIndex = 0;\n          var prevCharIndex = -1;\n          var colorCharIndex = -1;\n          var chunk;\n          var currentColor;\n          lines.forEach(function (line) {\n            var lineGlyphCount = line.count;\n            var lineWidth = line.width;\n\n            // Ignore empty lines\n            if (lineGlyphCount > 0) {\n              // Find x offset for horizontal alignment\n              var lineXOffset = 0;\n              var justifyAdjust = 0;\n              if (textAlign === 'center') {\n                lineXOffset = (maxLineWidth - lineWidth) / 2;\n              } else if (textAlign === 'right') {\n                lineXOffset = maxLineWidth - lineWidth;\n              } else if (textAlign === 'justify' && line.isSoftWrapped) {\n                // just count the non-trailing whitespace characters, and we'll adjust the offsets per\n                // character in the next loop\n                var whitespaceCount = 0;\n                for (var i = lineGlyphCount; i--;) {\n                  if (!line.glyphAt(i).glyphObj.isWhitespace) {\n                    while (i--) {\n                      if (!line.glyphAt(i).glyphObj) {\n                        debugger\n                      }\n                      if (line.glyphAt(i).glyphObj.isWhitespace) {\n                        whitespaceCount++;\n                      }\n                    }\n                    break\n                  }\n                }\n                justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n              }\n\n              for (var i$1 = 0; i$1 < lineGlyphCount; i$1++) {\n                var glyphInfo = line.glyphAt(i$1);\n                var glyphObj = glyphInfo.glyphObj;\n\n                // Apply position adjustments\n                if (lineXOffset) { glyphInfo.x += lineXOffset; }\n\n                // Expand whitespaces for justify alignment\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace) {\n                  lineXOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n\n                // Add caret positions\n                if (includeCaretPositions) {\n                  var charIndex = glyphInfo.charIndex;\n                  caretPositions[charIndex * 3] = glyphInfo.x + anchorXOffset; //left edge x\n                  caretPositions[charIndex * 3 + 1] = glyphInfo.x + glyphInfo.width + anchorXOffset; //right edge x\n                  caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n\n                  // If we skipped any chars from the previous glyph (due to ligature subs), copy the\n                  // previous glyph's info to those missing char indices. In the future we may try to\n                  // use the font's LigatureCaretList table to get interior caret positions.\n                  while (charIndex - prevCharIndex > 1) {\n                    caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\n                    prevCharIndex++;\n                  }\n                  prevCharIndex = charIndex;\n                }\n\n                // Track current color range\n                if (colorRanges) {\n                  var charIndex$1 = glyphInfo.charIndex;\n                  while(charIndex$1 > colorCharIndex) {\n                    colorCharIndex++;\n                    if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                      currentColor = colorRanges[colorCharIndex];\n                    }\n                  }\n                }\n\n                // Get atlas data for renderable glyphs\n                if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                  var idx = renderableGlyphIndex++;\n\n                  // If we haven't seen this glyph yet, generate its SDF\n                  var glyphAtlasInfo = atlas.glyphs[glyphObj.index];\n                  if (!glyphAtlasInfo) {\n                    var sdfStart = now();\n                    var glyphSDFData = sdfGenerator(glyphObj);\n                    timings.sdf[text.charAt(glyphInfo.charIndex)] = now() - sdfStart;\n\n                    // Assign this glyph the next available atlas index\n                    glyphSDFData.atlasIndex = atlas.glyphCount++;\n\n                    // Queue it up in the response's newGlyphs list\n                    if (!newGlyphs) { newGlyphs = []; }\n                    newGlyphs.push(glyphSDFData);\n\n                    // Store its metadata (not the texture) in our atlas info\n                    glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\n                      atlasIndex: glyphSDFData.atlasIndex,\n                      glyphObj: glyphObj,\n                      renderingBounds: glyphSDFData.renderingBounds\n                    };\n                  }\n\n                  // Determine final glyph bounds and add them to the glyphBounds array\n                  var bounds = glyphAtlasInfo.renderingBounds;\n                  var start = idx * 4;\n                  var x0 = glyphBounds[start] = glyphInfo.x + bounds[0] * fontSizeMult + anchorXOffset;\n                  var y0 = glyphBounds[start + 1] = lineYOffset + bounds[1] * fontSizeMult + anchorYOffset;\n                  var x1 = glyphBounds[start + 2] = glyphInfo.x + bounds[2] * fontSizeMult + anchorXOffset;\n                  var y1 = glyphBounds[start + 3] = lineYOffset + bounds[3] * fontSizeMult + anchorYOffset;\n\n                  // Track total bounds\n                  if (x0 < totalBounds[0]) { totalBounds[0] = x0; }\n                  if (y0 < totalBounds[1]) { totalBounds[1] = y0; }\n                  if (x1 > totalBounds[2]) { totalBounds[2] = x1; }\n                  if (y1 > totalBounds[3]) { totalBounds[3] = y1; }\n\n                  // Track bounding rects for each chunk of N glyphs\n                  if (idx % chunkedBoundsSize === 0) {\n                    chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\n                    chunkedBounds.push(chunk);\n                  }\n                  chunk.end++;\n                  if (x0 < chunk.rect[0]) { chunk.rect[0] = x0; }\n                  if (y0 < chunk.rect[1]) { chunk.rect[1] = y0; }\n                  if (x1 > chunk.rect[2]) { chunk.rect[2] = x1; }\n                  if (y1 > chunk.rect[3]) { chunk.rect[3] = y1; }\n\n                  // Add to atlas indices array\n                  glyphAtlasIndices[idx] = glyphAtlasInfo.atlasIndex;\n\n                  // Add colors\n                  if (colorRanges) {\n                    var start$1 = idx * 3;\n                    glyphColors[start$1] = currentColor >> 16 & 255;\n                    glyphColors[start$1 + 1] = currentColor >> 8 & 255;\n                    glyphColors[start$1 + 2] = currentColor & 255;\n                  }\n                }\n              }\n            }\n\n            // Increment y offset for next line\n            lineYOffset -= lineHeight;\n          });\n        }\n\n        // Timing stats\n        for (var ch in timings.sdf) {\n          timings.sdfTotal += timings.sdf[ch];\n        }\n        timings.layout = now() - layoutStart - timings.sdfTotal;\n        timings.total = now() - mainStart;\n\n        callback({\n          glyphBounds: glyphBounds, //rendering quad bounds for each glyph [x1, y1, x2, y2]\n          glyphAtlasIndices: glyphAtlasIndices, //atlas indices for each glyph\n          caretPositions: caretPositions, //x,y of bottom of cursor position before each char, plus one after last char\n          caretHeight: caretHeight, //height of cursor from bottom to top\n          glyphColors: glyphColors, //color for each glyph, if color ranges supplied\n          chunkedBounds: chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\n          ascender: ascender * fontSizeMult, //font ascender\n          descender: descender * fontSizeMult, //font descender\n          lineHeight: lineHeight, //computed line height\n          topBaseline: topBaseline, //y coordinate of the top line's baseline\n          totalBounds: totalBounds, //total rect including all glyphBounds; will be slightly larger than glyph edges due to SDF padding\n          totalBlockSize: [maxLineWidth, lines.length * lineHeight], //width and height of the text block; accurate for layout measurement\n          newGlyphSDFs: newGlyphs, //if this request included any new SDFs for the atlas, they'll be included here\n          timings: timings\n        });\n      });\n    }\n\n\n    /**\n     * For a given text string and font parameters, determine the resulting block dimensions\n     * after wrapping for the given maxWidth.\n     * @param args\n     * @param callback\n     */\n    function measure(args, callback) {\n      process(args, function (result) {\n        callback({\n          width: result.totalBlockSize[0],\n          height: result.totalBlockSize[1]\n        });\n      }, {metricsOnly: true});\n    }\n\n    function parsePercent(str) {\n      var match = str.match(/^([\\d.]+)%$/);\n      var pct = match ? parseFloat(match[1]) : NaN;\n      return isNaN(pct) ? 0 : pct / 100\n    }\n\n    function now() {\n      return (self.performance || Date).now()\n    }\n\n    // Array-backed structure for a single line's glyphs data\n    function TextLine() {\n      this.data = [];\n    }\n    TextLine.prototype = {\n      width: 0,\n      isSoftWrapped: false,\n      get count() {\n        return Math.ceil(this.data.length / 4)\n      },\n      glyphAt: function glyphAt(i) {\n        var fly = TextLine.flyweight;\n        fly.data = this.data;\n        fly.index = i;\n        return fly\n      },\n      splitAt: function splitAt(i) {\n        var newLine = new TextLine();\n        newLine.data = this.data.splice(i * 4);\n        return newLine\n      }\n    };\n    TextLine.flyweight = ['glyphObj', 'x', 'width', 'charIndex'].reduce(function (obj, prop, i, all) {\n      Object.defineProperty(obj, prop, {\n        get: function get() {\n          return this.data[this.index * 4 + i]\n        },\n        set: function set(val) {\n          this.data[this.index * 4 + i] = val;\n        }\n      });\n      return obj\n    }, {data: null, index: 0});\n\n\n    return {\n      process: process,\n      measure: measure,\n      loadFont: loadFont\n    }\n  }\n\n  /**\n   * Basic quadtree impl for performing fast spatial searches of a glyph's line segments.\n   */\n  function createGlyphSegmentsQuadtree(glyphObj) {\n    // Pick a good initial power-of-two bounding box that will hold all possible segments\n    var xMin = glyphObj.xMin;\n    var yMin = glyphObj.yMin;\n    var xMax = glyphObj.xMax;\n    var yMax = glyphObj.yMax;\n    var dx = xMax - xMin;\n    var dy = yMax - yMin;\n    var cx = Math.round(xMin + dx / 2);\n    var cy = Math.round(yMin + dy / 2);\n    var r = Math.pow(2, Math.floor(Math.log(Math.max(dx, dy)) * Math.LOG2E));\n    var INF = Infinity;\n\n    var root = {\n      0: null,\n      1: null,\n      2: null,\n      3: null,\n      data: null,\n      cx: cx,\n      cy: cy,\n      r: r,\n      minX: INF,\n      minY: INF,\n      maxX: -INF,\n      maxY: -INF\n    };\n\n    /**\n     * Add a line segment to the quadtree.\n     * @param x0\n     * @param y0\n     * @param x1\n     * @param y1\n     */\n    function addLineSegment(x0, y0, x1, y1) {\n      var cx = (x0 + x1) / 2;\n      var cy = (y0 + y1) / 2;\n      var segment = {\n        x0: x0, y0: y0, x1: x1, y1: y1, cx: cx, cy: cy,\n        minX: Math.min(x0, x1),\n        minY: Math.min(y0, y1),\n        maxX: Math.max(x0, x1),\n        maxY: Math.max(y0, y1),\n        next: null\n      };\n      insertSegment(segment, root);\n    }\n\n    function insertSegment(segment, node) {\n      // update node min/max stats\n      var minX = segment.minX;\n      var minY = segment.minY;\n      var maxX = segment.maxX;\n      var maxY = segment.maxY;\n      var cx = segment.cx;\n      var cy = segment.cy;\n      if (minX < node.minX) { node.minX = minX; }\n      if (minY < node.minY) { node.minY = minY; }\n      if (maxX > node.maxX) { node.maxX = maxX; }\n      if (maxY > node.maxY) { node.maxY = maxY; }\n\n      // leaf\n      var leafSegment = node.data;\n      if (leafSegment) {\n        // coincident; push as linked list\n        if (leafSegment.cx === cx && leafSegment.cy === cy) {\n          while (leafSegment.next) { leafSegment = leafSegment.next; }\n          leafSegment.next = segment;\n        }\n        // non-coincident; split leaf to branch\n        else {\n          node.data = null;\n          insertSegment(leafSegment, node);\n          insertSegment(segment, node);\n        }\n      }\n      // branch\n      else {\n        // find target sub-index for the segment's centerpoint\n        var subIndex = (cy < node.cy ? 0 : 2) + (cx < node.cx ? 0 : 1);\n\n        // subnode already at index: recurse\n        if (node[subIndex]) {\n          insertSegment(segment, node[subIndex]);\n        }\n        // create new leaf\n        else {\n          node[subIndex] = {\n            0: null,\n            1: null,\n            2: null,\n            3: null,\n            data: segment,\n            cx: node.cx + node.r / 2 * (subIndex % 2 ? 1 : -1),\n            cy: node.cy + node.r / 2 * (subIndex < 2 ? -1 : 1),\n            r: node.r / 2,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY\n          };\n        }\n      }\n    }\n\n    function walkTree(callback) {\n      walkBranch(root, callback);\n    }\n\n    function walkBranch(root, callback) {\n      if (callback(root) !== false && !root.data) {\n        for (var i = 0; i < 4; i++) {\n          if (root[i] !== null) {\n            walkBranch(root[i], callback);\n          }\n        }\n      }\n    }\n\n    /**\n     * For a given x/y, search the quadtree for the closest line segment and return\n     * its signed distance.\n     * @param x\n     * @param y\n     * @param maxSearchRadius\n     * @returns {number}\n     */\n    function findNearestSignedDistance(x, y, maxSearchRadius) {\n      var closestDist = maxSearchRadius;\n      var closestDistSq = closestDist * closestDist;\n\n      walkTree(function visit(node) {\n        // Ignore nodes that can't possibly have segments closer than what we've already found. We base\n        // this on a simple rect bounds check; radial would be more accurate but much slower.\n        if (\n          x - closestDist > node.maxX || x + closestDist < node.minX ||\n          y - closestDist > node.maxY || y + closestDist < node.minY\n        ) {\n          return false\n        }\n\n        // Leaf - check each segment's actual distance\n        for (var segment = node.data; segment; segment = segment.next) {\n          var distSq = absSquareDistanceToLineSegment(x, y, segment.x0, segment.y0, segment.x1, segment.y1);\n          if (distSq < closestDistSq) {\n            closestDistSq = distSq;\n            closestDist = Math.sqrt(distSq);\n          }\n        }\n      });\n\n      // Flip to negative distance if outside the poly\n      if (!isPointInPoly(x, y)) {\n        closestDist = -closestDist;\n      }\n      return closestDist\n    }\n\n    // Determine whether the given point lies inside or outside the glyph. Uses a simple\n    // ray casting algorithm using a ray pointing east from the point, optimized by using\n    // the quadtree search to test as few lines as possible.\n    function isPointInPoly(x, y) {\n      var inside = false;\n      walkTree(function (node) {\n        // Ignore nodes whose bounds can't possibly cross our east-pointing ray\n        if (node.maxX < x || node.minY > y || node.maxY < y) {\n          return false\n        }\n\n        // Leaf - test each segment for whether it crosses our east-pointing ray\n        for (var segment = node.data; segment; segment = segment.next) {\n          var x0 = segment.x0;\n          var y0 = segment.y0;\n          var x1 = segment.x1;\n          var y1 = segment.y1;\n          var intersects = ((y0 > y) !== (y1 > y)) && (x < (x1 - x0) * (y - y0) / (y1 - y0) + x0);\n          if (intersects) {\n            inside = !inside;\n          }\n        }\n      });\n      return inside\n    }\n\n    // Find the absolute distance from a point to a line segment at closest approach\n    function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n      var ldx = lineX1 - lineX0;\n      var ldy = lineY1 - lineY0;\n      var lengthSq = ldx * ldx + ldy * ldy;\n      var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n      var dx = x - (lineX0 + t * ldx);\n      var dy = y - (lineY0 + t * ldy);\n      return dx * dx + dy * dy\n    }\n\n    return {\n      addLineSegment: addLineSegment,\n      findNearestSignedDistance: findNearestSignedDistance\n    }\n  }\n\n  // Custom bundle of Typr.js (https://github.com/photopea/Typr.js) for use in troika-3d-text. \n  // Original MIT license applies: https://github.com/photopea/Typr.js/blob/gh-pages/LICENSE\n\n  function typrFactory() {\n\n  var window = self;\n\n  // Begin Typr.js\n\n\n  var Typr = {};\n\n  Typr.parse = function(buff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = new Uint8Array(buff);\n  \t\n  \tvar tag = bin.readASCII(data, 0, 4);  \n  \tif(tag==\"ttcf\") {\n  \t\tvar offset = 4;\n  \t\tvar majV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar minV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar numF = bin.readUint  (data, offset);  offset+=4;\n  \t\tvar fnts = [];\n  \t\tfor(var i=0; i<numF; i++) {\n  \t\t\tvar foff = bin.readUint  (data, offset);  offset+=4;\n  \t\t\tfnts.push(Typr._readFont(data, foff));\n  \t\t}\n  \t\treturn fnts;\n  \t}\n  \telse { return [Typr._readFont(data, 0)]; }\n  };\n\n  Typr._readFont = function(data, offset) {\n  \tvar bin = Typr._bin;\n  \tvar ooff = offset;\n  \t\n  \tvar sfnt_version = bin.readFixed(data, offset);\n  \toffset += 4;\n  \tvar numTables = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar searchRange = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar entrySelector = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar rangeShift = bin.readUshort(data, offset);\n  \toffset += 2;\n  \t\n  \tvar tags = [\n  \t\t\"cmap\",\n  \t\t\"head\",\n  \t\t\"hhea\",\n  \t\t\"maxp\",\n  \t\t\"hmtx\",\n  \t\t\"name\",\n  \t\t\"OS/2\",\n  \t\t\"post\",\n  \t\t\n  \t\t//\"cvt\",\n  \t\t//\"fpgm\",\n  \t\t\"loca\",\n  \t\t\"glyf\",\n  \t\t\"kern\",\n  \t\t\n  \t\t//\"prep\"\n  \t\t//\"gasp\"\n  \t\t\n  \t\t\"CFF \",\n  \t\t\n  \t\t\n  \t\t\"GPOS\",\n  \t\t\"GSUB\",\n  \t\t\n  \t\t\"SVG \" ];\n  \t\n  \tvar obj = {_data:data, _offset:ooff};\n  \t//console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\n  \t\n  \tvar tabs = {};\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\ttabs[tag] = {offset:toffset, length:length};\n  \t\t\n  \t\t//if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag, length);\n  \t}\n  \t\n  \tfor(var i=0; i< tags.length; i++)\n  \t{\n  \t\tvar t = tags[i];\n  \t\t//console.log(t);\n  \t\t//if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\n  \t\tif(tabs[t]) { obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj); }\n  \t}\n  \t\n  \treturn obj;\n  };\n\n  Typr._tabOffset = function(data, tab, foff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar numTables = bin.readUshort(data, foff+4);\n  \tvar offset = foff+12;\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\tif(tag==tab) { return toffset; }\n  \t}\n  \treturn 0;\n  };\n\n\n\n\n\n  Typr._bin = {\n  \treadFixed : function(data, o)\n  \t{\n  \t\treturn ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\n  \t},\n  \treadF2dot14 : function(data, o)\n  \t{\n  \t\tvar num = Typr._bin.readShort(data, o);\n  \t\treturn num / 16384;\n  \t},\n  \treadInt : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p+3];\n  \t\ta[1] = buff[p+2];\n  \t\ta[2] = buff[p+1];\n  \t\ta[3] = buff[p];\n  \t\treturn Typr._bin.t.int32[0];\n  \t},\n  \t\n  \treadInt8 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p];\n  \t\treturn Typr._bin.t.int8[0];\n  \t},\n  \treadShort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[1] = buff[p]; a[0] = buff[p+1];\n  \t\treturn Typr._bin.t.int16[0];\n  \t},\n  \treadUshort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (buff[p]<<8) | buff[p+1];\n  \t},\n  \treadUshorts : function(buff, p, len)\n  \t{\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<len; i++) { arr.push(Typr._bin.readUshort(buff, p+i*2)); }\n  \t\treturn arr;\n  \t},\n  \treadUint : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\n  \t\treturn Typr._bin.t.uint32[0];\n  \t},\n  \treadUint64 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\n  \t},\n  \treadASCII : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++) { s += String.fromCharCode(buff[p+i]); }\n  \t\treturn s;\n  \t},\n  \treadUnicode : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t{\n  \t\t\tvar c = (buff[p++]<<8) | buff[p++];\n  \t\t\ts += String.fromCharCode(c);\n  \t\t}\n  \t\treturn s;\n  \t},\n  \t_tdec : window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\n  \treadUTF8 : function(buff, p, l) {\n  \t\tvar tdec = Typr._bin._tdec;\n  \t\tif(tdec && p==0 && l==buff.length) { return tdec[\"decode\"](buff); }\n  \t\treturn Typr._bin.readASCII(buff,p,l);\n  \t},\n  \treadBytes : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<l; i++) { arr.push(buff[p+i]); }\n  \t\treturn arr;\n  \t},\n  \treadASCIIArray : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = [];\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t\t{ s.push(String.fromCharCode(buff[p+i])); }\n  \t\treturn s;\n  \t}\n  };\n\n  Typr._bin.t = {\n  \tbuff: new ArrayBuffer(8),\n  };\n  Typr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\n  Typr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\n  Typr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\n  Typr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\n  Typr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\n  Typr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\n\n\n\n\n\n  // OpenType Layout Common Table Formats\n\n  Typr._lctf = {};\n\n  Typr._lctf.parse = function(data, offset, length, font, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar offset0 = offset;\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \t\n  \tvar offScriptList  = bin.readUshort(data, offset);  offset += 2;\n  \tvar offFeatureList = bin.readUshort(data, offset);  offset += 2;\n  \tvar offLookupList  = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t\n  \tobj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\n  \tobj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\n  \tobj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\n  \t\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupList = function(data, offset, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<count; i++) \n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\n  \t\tobj.push(lut);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupTable = function(data, offset, subt)\n  {\n  \t//console.log(\"Parsing lookup table\", offset);\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {tabs:[]};\n  \t\n  \tobj.ltype = bin.readUshort(data, offset);  offset+=2;\n  \tobj.flag  = bin.readUshort(data, offset);  offset+=2;\n  \tvar cnt   = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<cnt; i++)\n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tab = subt(data, obj.ltype, offset0 + noff);\n  \t\t//console.log(obj.type, tab);\n  \t\tobj.tabs.push(tab);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.numOfOnes = function(n)\n  {\n  \tvar num = 0;\n  \tfor(var i=0; i<32; i++) { if(((n>>>i)&1) != 0) { num++; } }\n  \treturn num;\n  };\n\n  Typr._lctf.readClassDef = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \tvar format = bin.readUshort(data, offset);  offset+=2;\n  \tif(format==1) \n  \t{\n  \t\tvar startGlyph  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar glyphCount  = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<glyphCount; i++)\n  \t\t{\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \tif(format==2)\n  \t{\n  \t\tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<count; i++)\n  \t\t{\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n  Typr._lctf.getInterval = function(tab, val)\n  {\n  \tfor(var i=0; i<tab.length; i+=3)\n  \t{\n  \t\tvar start = tab[i], end = tab[i+1], index = tab[i+2];\n  \t\tif(start<=val && val<=end) { return i; }\n  \t}\n  \treturn -1;\n  };\n\n\n  Typr._lctf.readCoverage = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar cvg = {};\n  \tcvg.fmt   = bin.readUshort(data, offset);  offset+=2;\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t//console.log(\"parsing coverage\", offset-4, format, count);\n  \tif(cvg.fmt==1) { cvg.tab = bin.readUshorts(data, offset, count); } \n  \tif(cvg.fmt==2) { cvg.tab = bin.readUshorts(data, offset, count*3); }\n  \treturn cvg;\n  };\n\n  Typr._lctf.coverageIndex = function(cvg, val)\n  {\n  \tvar tab = cvg.tab;\n  \tif(cvg.fmt==1) { return tab.indexOf(val); }\n  \tif(cvg.fmt==2) {\n  \t\tvar ind = Typr._lctf.getInterval(tab, val);\n  \t\tif(ind!=-1) { return tab[ind+2] + (val - tab[ind]); }\n  \t}\n  \treturn -1;\n  };\n\n  Typr._lctf.readFeatureList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readFeatureTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar featureParams = bin.readUshort(data, offset);  offset+=2;\t// = 0\n  \tvar lookupCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar indices = [];\n  \tfor(var i=0; i<lookupCount; i++) { indices.push(bin.readUshort(data, offset+2*i)); }\n  \treturn indices;\n  };\n\n\n  Typr._lctf.readScriptList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readScriptTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar defLangSysOff = bin.readUshort(data, offset);  offset+=2;\n  \tobj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\n  \t\n  \tvar langSysCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<langSysCount; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar langSysOff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLangSysTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tvar lookupOrder = bin.readUshort(data, offset);  offset+=2;\n  \t//if(lookupOrder!=0)  throw \"lookupOrder not 0\";\n  \tobj.reqFeature = bin.readUshort(data, offset);  offset+=2;\n  \t//if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\n  \t\n  \t//console.log(lookupOrder, obj.reqFeature);\n  \t\n  \tvar featureCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.features = bin.readUshorts(data, offset, featureCount);\n  \treturn obj;\n  };\n\n  \tTypr.CFF = {};\n  \tTypr.CFF.parse = function(data, offset, length)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tdata = new Uint8Array(data.buffer, offset, length);\n  \t\toffset = 0;\n  \t\t\n  \t\t// Header\n  \t\tvar major = data[offset];  offset++;\n  \t\tvar minor = data[offset];  offset++;\n  \t\tvar hdrSize = data[offset];  offset++;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t//console.log(major, minor, hdrSize, offsize);\n  \t\t\n  \t\t// Name INDEX\n  \t\tvar ninds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, ninds);\n  \t\tvar names = [];\n  \t\t\n  \t\tfor(var i=0; i<ninds.length-1; i++) { names.push(bin.readASCII(data, offset+ninds[i], ninds[i+1]-ninds[i])); }\n  \t\toffset += ninds[ninds.length-1];\n  \t\t\n  \t\t\n  \t\t// Top DICT INDEX\n  \t\tvar tdinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\n  \t\t// Top DICT Data\n  \t\tvar topDicts = [];\n  \t\tfor(var i=0; i<tdinds.length-1; i++) { topDicts.push( Typr.CFF.readDict(data, offset+tdinds[i], offset+tdinds[i+1]) ); }\n  \t\toffset += tdinds[tdinds.length-1];\n  \t\tvar topdict = topDicts[0];\n  \t\t//console.log(topdict);\n  \t\t\n  \t\t// String INDEX\n  \t\tvar sinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t// String Data\n  \t\tvar strings = [];\n  \t\tfor(var i=0; i<sinds.length-1; i++) { strings.push(bin.readASCII(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\toffset += sinds[sinds.length-1];\n  \t\t\n  \t\t// Global Subr INDEX  (subroutines)\t\t\n  \t\tTypr.CFF.readSubrs(data, offset, topdict);\n  \t\t\n  \t\t// charstrings\n  \t\tif(topdict.CharStrings)\n  \t\t{\n  \t\t\toffset = topdict.CharStrings;\n  \t\t\tvar sinds = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t\t\n  \t\t\tvar cstr = [];\n  \t\t\tfor(var i=0; i<sinds.length-1; i++) { cstr.push(bin.readBytes(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\t\t//offset += sinds[sinds.length-1];\n  \t\t\ttopdict.CharStrings = cstr;\n  \t\t\t//console.log(topdict.CharStrings);\n  \t\t}\n  \t\t\n  \t\t// CID font\n  \t\tif(topdict.ROS) {\n  \t\t\toffset = topdict.FDArray;\n  \t\t\tvar fdind = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, fdind);\n  \t\t\t\n  \t\t\ttopdict.FDArray = [];\n  \t\t\tfor(var i=0; i<fdind.length-1; i++) {\n  \t\t\t\tvar dict = Typr.CFF.readDict(data, offset+fdind[i], offset+fdind[i+1]);\n  \t\t\t\tTypr.CFF._readFDict(data, dict, strings);\n  \t\t\t\ttopdict.FDArray.push( dict );\n  \t\t\t}\n  \t\t\toffset += fdind[fdind.length-1];\n  \t\t\t\n  \t\t\toffset = topdict.FDSelect;\n  \t\t\ttopdict.FDSelect = [];\n  \t\t\tvar fmt = data[offset];  offset++;\n  \t\t\tif(fmt==3) {\n  \t\t\t\tvar rns = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tfor(var i=0; i<rns+1; i++) {\n  \t\t\t\t\ttopdict.FDSelect.push(bin.readUshort(data, offset), data[offset+2]);  offset+=3;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\telse { throw fmt; }\n  \t\t}\n  \t\t\n  \t\t// Encoding\n  \t\tif(topdict.Encoding) { topdict.Encoding = Typr.CFF.readEncoding(data, topdict.Encoding, topdict.CharStrings.length); }\n  \t\t\n  \t\t// charset\n  \t\tif(topdict.charset ) { topdict.charset  = Typr.CFF.readCharset (data, topdict.charset , topdict.CharStrings.length); }\n  \t\t\n  \t\tTypr.CFF._readFDict(data, topdict, strings);\n  \t\treturn topdict;\n  \t};\n  \tTypr.CFF._readFDict = function(data, dict, ss) {\n  \t\tvar offset;\n  \t\tif(dict.Private) {\n  \t\t\toffset = dict.Private[1];\n  \t\t\tdict.Private = Typr.CFF.readDict(data, offset, offset+dict.Private[0]);\n  \t\t\tif(dict.Private.Subrs)  { Typr.CFF.readSubrs(data, offset+dict.Private.Subrs, dict.Private); }\n  \t\t}\n  \t\tfor(var p in dict) { if([\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(p)!=-1)  { dict[p]=ss[dict[p] -426 + 35]; } }\n  \t};\n  \t\n  \tTypr.CFF.readSubrs = function(data, offset, obj)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\tvar gsubinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, gsubinds);\n  \t\t\n  \t\tvar bias, nSubrs = gsubinds.length;\n  \t\tif (nSubrs <  1240) { bias = 107; }\n  \t\telse if (nSubrs < 33900) { bias = 1131; }\n  \t\telse { bias = 32768; }\n  \t\tobj.Bias = bias;\n  \t\t\n  \t\tobj.Subrs = [];\n  \t\tfor(var i=0; i<gsubinds.length-1; i++) { obj.Subrs.push(bin.readBytes(data, offset+gsubinds[i], gsubinds[i+1]-gsubinds[i])); }\n  \t\t//offset += gsubinds[gsubinds.length-1];\n  \t};\n  \t\n  \tTypr.CFF.tableSE = [\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        1,   2,   3,   4,   5,   6,   7,   8,\n        9,  10,  11,  12,  13,  14,  15,  16,\n       17,  18,  19,  20,  21,  22,  23,  24,\n       25,  26,  27,  28,  29,  30,  31,  32,\n       33,  34,  35,  36,  37,  38,  39,  40,\n       41,  42,  43,  44,  45,  46,  47,  48,\n       49,  50,  51,  52,  53,  54,  55,  56,\n       57,  58,  59,  60,  61,  62,  63,  64,\n       65,  66,  67,  68,  69,  70,  71,  72,\n       73,  74,  75,  76,  77,  78,  79,  80,\n       81,  82,  83,  84,  85,  86,  87,  88,\n       89,  90,  91,  92,  93,  94,  95,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,  96,  97,  98,  99, 100, 101, 102,\n      103, 104, 105, 106, 107, 108, 109, 110,\n        0, 111, 112, 113, 114,   0, 115, 116,\n      117, 118, 119, 120, 121, 122,   0, 123,\n        0, 124, 125, 126, 127, 128, 129, 130,\n      131,   0, 132, 133,   0, 134, 135, 136,\n      137,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0, 138,   0, 139,   0,   0,   0,   0,\n      140, 141, 142, 143,   0,   0,   0,   0,\n        0, 144,   0,   0,   0, 145,   0,   0,\n      146, 147, 148, 149,   0,   0,   0,   0\n    ];\n    \n  \tTypr.CFF.glyphByUnicode = function(cff, code)\n  \t{\n  \t\tfor(var i=0; i<cff.charset.length; i++) { if(cff.charset[i]==code) { return i; } }\n  \t\treturn -1;\n  \t};\n  \t\n  \tTypr.CFF.glyphBySE = function(cff, charcode)\t// glyph by standard encoding\n  \t{\n  \t\tif ( charcode < 0 || charcode > 255 ) { return -1; }\n  \t\treturn Typr.CFF.glyphByUnicode(cff, Typr.CFF.tableSE[charcode]);\t\t\n  \t};\n  \t\n  \tTypr.CFF.readEncoding = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar array = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t//console.log(\"Encoding\");\n  \t\t//console.log(format);\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tvar nCodes = data[offset];  offset++;\n  \t\t\tfor(var i=0; i<nCodes; i++)  { array.push(data[offset+i]); }\n  \t\t}\n  \t\t/*\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\telse { throw \"error: unknown encoding format: \" + format; }\n  \t\t\n  \t\treturn array;\n  \t};\n\n  \tTypr.CFF.readCharset = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar charset = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tfor(var i=0; i<num; i++) \n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tcharset.push(first);\n  \t\t\t}\n  \t\t}\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\telse { throw \"error: format: \" + format; }\n  \t\t\n  \t\treturn charset;\n  \t};\n\n  \tTypr.CFF.readIndex = function(data, offset, inds)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar count = bin.readUshort(data, offset)+1;  offset+=2;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t\n  \t\tif     (offsize==1) { for(var i=0; i<count; i++) { inds.push( data[offset+i] ); } }\n  \t\telse if(offsize==2) { for(var i=0; i<count; i++) { inds.push( bin.readUshort(data, offset+i*2) ); } }\n  \t\telse if(offsize==3) { for(var i=0; i<count; i++) { inds.push( bin.readUint  (data, offset+i*3 - 1) & 0x00ffffff ); } }\n  \t\telse if(count!=1) { throw \"unsupported offset size: \" + offsize + \", count: \" + count; }\n  \t\t\n  \t\toffset += count*offsize;\n  \t\treturn offset-1;\n  \t};\n  \t\n  \tTypr.CFF.getCharString = function(data, offset, o)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\tvar vs = 1;\n  \t\tvar op=null, val=null;\n  \t\t// operand\n  \t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t//if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\n  \t\to.val = val!=null ? val : \"o\"+op;\n  \t\to.size = vs;\n  \t};\n  \t\n  \tTypr.CFF.readCharString = function(data, offset, length)\n  \t{\n  \t\tvar end = offset + length;\n  \t\tvar bin = Typr._bin;\n  \t\tvar arr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar op=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t\tif(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\t\n  \t\t\tarr.push(val!=null ? val : \"o\"+op);\n  \t\t\toffset += vs;\t\n\n  \t\t\t//var cv = arr[arr.length-1];\n  \t\t\t//if(cv==undefined) throw \"error\";\n  \t\t\t//console.log()\n  \t\t}\t\n  \t\treturn arr;\n  \t};\n\n  \tTypr.CFF.readDict = function(data, offset, end)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t//var dict = [];\n  \t\tvar dict = {};\n  \t\tvar carr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar key=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(b0==29) { val = bin.readInt  (data,offset+1);  vs=5; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;  throw \"unknown number\";  }\n  \t\t\t\n  \t\t\tif(b0==30) \n  \t\t\t{  \n  \t\t\t\tvar nibs = [];\n  \t\t\t\tvs = 1;\n  \t\t\t\twhile(true)\n  \t\t\t\t{\n  \t\t\t\t\tvar b = data[offset+vs];  vs++;\n  \t\t\t\t\tvar nib0 = b>>4, nib1 = b&0xf;\n  \t\t\t\t\tif(nib0 != 0xf) { nibs.push(nib0); }  if(nib1!=0xf) { nibs.push(nib1); }\n  \t\t\t\t\tif(nib1==0xf) { break; }\n  \t\t\t\t}\n  \t\t\t\tvar s = \"\";\n  \t\t\t\tvar chars = [0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"];\n  \t\t\t\tfor(var i=0; i<nibs.length; i++) { s += chars[nibs[i]]; }\n  \t\t\t\t//console.log(nibs);\n  \t\t\t\tval = parseFloat(s);\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(b0<=21)\t// operator\n  \t\t\t{\n  \t\t\t\tvar keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\",\"FamilyOtherBlues\",\n  \t\t\t\t\t\"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \n  \t\t\t\t\t\"defaultWidthX\", \"nominalWidthX\"];\n  \t\t\t\t\t\n  \t\t\t\tkey = keys[b0];  vs=1;\n  \t\t\t\tif(b0==12) { \n  \t\t\t\t\tvar keys = [ \"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\n  \t\t\t\t\t\"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0,0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\n  \t\t\t\t\t\"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0,0,0,0,0,0, \n  \t\t\t\t\t\"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\n  \t\t\t\t\tkey = keys[b1];  vs=2; \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(key!=null) {  dict[key] = carr.length==1 ? carr[0] : carr;  carr=[]; }\n  \t\t\telse  { carr.push(val); }  \n  \t\t\t\n  \t\t\toffset += vs;\t\t\n  \t\t}\t\n  \t\treturn dict;\n  \t};\n\n\n  Typr.cmap = {};\n  Typr.cmap.parse = function(data, offset, length)\n  {\n  \tdata = new Uint8Array(data.buffer, offset, length);\n  \toffset = 0;\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar version   = bin.readUshort(data, offset);  offset += 2;\n  \tvar numTables = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(version, numTables);\n  \t\n  \tvar offs = [];\n  \tobj.tables = [];\n  \t\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset = bin.readUint(data, offset);       offset += 4;\n  \t\t\n  \t\tvar id = \"p\"+platformID+\"e\"+encodingID;\n  \t\t\n  \t\t//console.log(\"cmap subtable\", platformID, encodingID, noffset);\n  \t\t\n  \t\t\n  \t\tvar tind = offs.indexOf(noffset);\n  \t\t\n  \t\tif(tind==-1)\n  \t\t{\n  \t\t\ttind = obj.tables.length;\n  \t\t\tvar subt;\n  \t\t\toffs.push(noffset);\n  \t\t\tvar format = bin.readUshort(data, noffset);\n  \t\t\tif     (format== 0) { subt = Typr.cmap.parse0(data, noffset); }\n  \t\t\telse if(format== 4) { subt = Typr.cmap.parse4(data, noffset); }\n  \t\t\telse if(format== 6) { subt = Typr.cmap.parse6(data, noffset); }\n  \t\t\telse if(format==12) { subt = Typr.cmap.parse12(data,noffset); }\n  \t\t\telse { console.log(\"unknown format: \"+format, platformID, encodingID, noffset); }\n  \t\t\tobj.tables.push(subt);\n  \t\t}\n  \t\t\n  \t\tif(obj[id]!=null) { throw \"multiple tables for one platform+encoding\"; }\n  \t\tobj[id] = tind;\n  \t}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse0 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tobj.format = bin.readUshort(data, offset);  offset += 2;\n  \tvar len    = bin.readUshort(data, offset);  offset += 2;\n  \tvar lang   = bin.readUshort(data, offset);  offset += 2;\n  \tobj.map = [];\n  \tfor(var i=0; i<len-6; i++) { obj.map.push(data[offset+i]); }\n  \treturn obj;\n  };\n\n  Typr.cmap.parse4 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCountX2 = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCount = segCountX2/2;\n  \tobj.searchRange = bin.readUshort(data, offset);  offset+=2;\n  \tobj.entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tobj.rangeShift = bin.readUshort(data, offset);  offset+=2;\n  \tobj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \toffset+=2;\n  \tobj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.idDelta = [];\n  \tfor(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\n  \tobj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.glyphIdArray = [];\n  \twhile(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse6 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tobj.firstCode = bin.readUshort(data, offset);  offset+=2;\n  \tvar entryCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.glyphIdArray = [];\n  \tfor(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \t\n  \treturn obj;\n  };\n\n  Typr.cmap.parse12 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \toffset += 2;\n  \tvar length = bin.readUint(data, offset);  offset+=4;\n  \tvar lang   = bin.readUint(data, offset);  offset+=4;\n  \tvar nGroups= bin.readUint(data, offset);  offset+=4;\n  \tobj.groups = [];\n  \t\n  \tfor(var i=0; i<nGroups; i++)  \n  \t{\n  \t\tvar off = offset + i * 12;\n  \t\tvar startCharCode = bin.readUint(data, off+0);\n  \t\tvar endCharCode   = bin.readUint(data, off+4);\n  \t\tvar startGlyphID  = bin.readUint(data, off+8);\n  \t\tobj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\n  \t}\n  \treturn obj;\n  };\n\n  Typr.glyf = {};\n  Typr.glyf.parse = function(data, offset, length, font)\n  {\n  \tvar obj = [];\n  \tfor(var g=0; g<font.maxp.numGlyphs; g++) { obj.push(null); }\n  \treturn obj;\n  };\n\n  Typr.glyf._parseGlyf = function(font, g)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = font._data;\n  \t\n  \tvar offset = Typr._tabOffset(data, \"glyf\", font._offset) + font.loca[g];\n  \t\t\n  \tif(font.loca[g]==font.loca[g+1]) { return null; }\n  \t\t\n  \tvar gl = {};\n  \t\t\n  \tgl.noc  = bin.readShort(data, offset);  offset+=2;\t\t// number of contours\n  \tgl.xMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.xMax = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMax = bin.readShort(data, offset);  offset+=2;\n  \t\n  \tif(gl.xMin>=gl.xMax || gl.yMin>=gl.yMax) { return null; }\n  \t\t\n  \tif(gl.noc>0)\n  \t{\n  \t\tgl.endPts = [];\n  \t\tfor(var i=0; i<gl.noc; i++) { gl.endPts.push(bin.readUshort(data,offset)); offset+=2; }\n  \t\t\n  \t\tvar instructionLength = bin.readUshort(data,offset); offset+=2;\n  \t\tif((data.length-offset)<instructionLength) { return null; }\n  \t\tgl.instructions = bin.readBytes(data, offset, instructionLength);   offset+=instructionLength;\n  \t\t\n  \t\tvar crdnum = gl.endPts[gl.noc-1]+1;\n  \t\tgl.flags = [];\n  \t\tfor(var i=0; i<crdnum; i++ ) \n  \t\t{ \n  \t\t\tvar flag = data[offset];  offset++; \n  \t\t\tgl.flags.push(flag); \n  \t\t\tif((flag&8)!=0)\n  \t\t\t{\n  \t\t\t\tvar rep = data[offset];  offset++;\n  \t\t\t\tfor(var j=0; j<rep; j++) { gl.flags.push(flag); i++; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.xs = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&2)!=0), same=((gl.flags[i]&16)!=0);  \n  \t\t\tif(i8) { gl.xs.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.xs.push(0); }\n  \t\t\t\telse { gl.xs.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.ys = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&4)!=0), same=((gl.flags[i]&32)!=0);  \n  \t\t\tif(i8) { gl.ys.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.ys.push(0); }\n  \t\t\t\telse { gl.ys.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tvar x = 0, y = 0;\n  \t\tfor(var i=0; i<crdnum; i++) { x += gl.xs[i]; y += gl.ys[i];  gl.xs[i]=x;  gl.ys[i]=y; }\n  \t\t//console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\n  \t}\n  \telse\n  \t{\n  \t\tvar ARG_1_AND_2_ARE_WORDS\t= 1<<0;\n  \t\tvar ARGS_ARE_XY_VALUES\t\t= 1<<1;\n  \t\tvar WE_HAVE_A_SCALE\t\t\t= 1<<3;\n  \t\tvar MORE_COMPONENTS\t\t\t= 1<<5;\n  \t\tvar WE_HAVE_AN_X_AND_Y_SCALE= 1<<6;\n  \t\tvar WE_HAVE_A_TWO_BY_TWO\t= 1<<7;\n  \t\tvar WE_HAVE_INSTRUCTIONS\t= 1<<8;\n  \t\t\n  \t\tgl.parts = [];\n  \t\tvar flags;\n  \t\tdo {\n  \t\t\tflags = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar part = { m:{a:1,b:0,c:0,d:1,tx:0,ty:0}, p1:-1, p2:-1 };  gl.parts.push(part);\n  \t\t\tpart.glyphIndex = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tif ( flags & ARG_1_AND_2_ARE_WORDS) {\n  \t\t\t\tvar arg1 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t\tvar arg2 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t} else {\n  \t\t\t\tvar arg1 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t\tvar arg2 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1;  part.m.ty = arg2; }\n  \t\t\telse  {  part.p1=arg1;  part.p2=arg2;  }\n  \t\t\t//part.m.tx = arg1;  part.m.ty = arg2;\n  \t\t\t//else { throw \"params are not XY values\"; }\n  \t\t\t\n  \t\t\tif ( flags & WE_HAVE_A_SCALE ) {\n  \t\t\t\tpart.m.a = part.m.d = bin.readF2dot14(data, offset);  offset += 2;    \n  \t\t\t} else if ( flags & WE_HAVE_AN_X_AND_Y_SCALE ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t} else if ( flags & WE_HAVE_A_TWO_BY_TWO ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.b = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.c = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t}\n  \t\t} while ( flags & MORE_COMPONENTS ) \n  \t\tif (flags & WE_HAVE_INSTRUCTIONS){\n  \t\t\tvar numInstr = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tgl.instr = [];\n  \t\t\tfor(var i=0; i<numInstr; i++) { gl.instr.push(data[offset]);  offset++; }\n  \t\t}\n  \t}\n  \treturn gl;\n  };\n\n\n  Typr.GPOS = {};\n  Typr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  };\n\n\n  Typr.GPOS.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \t//console.log(ltype, tab.fmt);\n  \t\n  \tif(ltype==1 || ltype==2 || ltype==3 || ltype==7 || (ltype==8 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\n  \t}\n  \tif(ltype==1 && tab.fmt==1) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tif(valFmt1!=0)  { tab.pos = Typr.GPOS.readValueRecord(data, offset, valFmt1); }\n  \t}\n  \telse if(ltype==2) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar valFmt2 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tvar ones2 = Typr._lctf.numOfOnes(valFmt2);\n  \t\tif(tab.fmt==1)\n  \t\t{\n  \t\t\ttab.pairsets = [];\n  \t\t\tvar psc = bin.readUshort(data, offset);  offset+=2;  // PairSetCount\n  \t\t\t\n  \t\t\tfor(var i=0; i<psc; i++)\n  \t\t\t{\n  \t\t\t\tvar psoff = offset0 + bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\t\n  \t\t\t\tvar pvc = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\tvar arr = [];\n  \t\t\t\tfor(var j=0; j<pvc; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar gid2 = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\t\tvar value1, value2;\n  \t\t\t\t\tif(valFmt1!=0) {  value1 = Typr.GPOS.readValueRecord(data, psoff, valFmt1);  psoff+=ones1*2;  }\n  \t\t\t\t\tif(valFmt2!=0) {  value2 = Typr.GPOS.readValueRecord(data, psoff, valFmt2);  psoff+=ones2*2;  }\n  \t\t\t\t\t//if(value1!=null) throw \"e\";\n  \t\t\t\t\tarr.push({gid2:gid2, val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.pairsets.push(arr);\n  \t\t\t}\n  \t\t}\n  \t\tif(tab.fmt==2)\n  \t\t{\n  \t\t\tvar classDef1 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar classDef2 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class1Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class2Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\n  \t\t\ttab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\n  \t\t\t\n  \t\t\ttab.matrix = [];\n  \t\t\tfor(var i=0; i<class1Count; i++)\n  \t\t\t{\n  \t\t\t\tvar row = [];\n  \t\t\t\tfor(var j=0; j<class2Count; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar value1 = null, value2 = null;\n  \t\t\t\t\tif(tab.valFmt1!=0) { value1 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\n  \t\t\t\t\tif(tab.valFmt2!=0) { value2 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\n  \t\t\t\t\trow.push({val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.matrix.push(row);\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn tab;\n  };\n\n\n  Typr.GPOS.readValueRecord = function(data, offset, valFmt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar arr = [];\n  \tarr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;  // X_PLACEMENT\n  \tarr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;  // Y_PLACEMENT\n  \tarr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;  // X_ADVANCE\n  \tarr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;  // Y_ADVANCE\n  \treturn arr;\n  };\n\n  Typr.GSUB = {};\n  Typr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  };\n\n\n  Typr.GSUB.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tif(ltype!=1 && ltype!=4 && ltype!=5 && ltype!=6) { return null; }\n  \t\n  \tif(ltype==1 || ltype==4 || (ltype==5 && tab.fmt<=2) || (ltype==6 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, offset0+covOff);\t// not always is coverage here\n  \t}\n  \t\n  \tif(ltype==1) {\t\n  \t\tif(tab.fmt==1) {\n  \t\t\ttab.delta = bin.readShort(data, offset);  offset+=2;\n  \t\t}\n  \t\telse if(tab.fmt==2) {\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\n  \t\t}\n  \t}\n  \t//  Ligature Substitution Subtable\n  \telse if(ltype==4) {\n  \t\ttab.vals = [];\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<cnt; i++) {\n  \t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\n  \t\t}\n  \t\t//console.log(tab.coverage);\n  \t\t//console.log(tab.vals);\n  \t} \n  \t//  Contextual Substitution Subtable\n  \telse if(ltype==5) {\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar cDefOffset = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.cDef = Typr._lctf.readClassDef(data, offset0 + cDefOffset);\n  \t\t\ttab.scset = [];\n  \t\t\tvar subClassSetCount = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<subClassSetCount; i++)\n  \t\t\t{\n  \t\t\t\tvar scsOff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(  scsOff==0 ? null : Typr.GSUB.readSubClassSet(data, offset0 + scsOff)  );\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"unknown table format\", tab.fmt);\n  \t}\n  \t//*\n  \telse if(ltype==6) {\n  \t\t/*\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar btDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar inDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar laDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.btDef = Typr._lctf.readClassDef(data, offset0 + btDef);\n  \t\t\ttab.inDef = Typr._lctf.readClassDef(data, offset0 + inDef);\n  \t\t\ttab.laDef = Typr._lctf.readClassDef(data, offset0 + laDef);\n  \t\t\t\n  \t\t\ttab.scset = [];\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<cnt; i++) {\n  \t\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(Typr.GSUB.readChainSubClassSet(data, offset0+loff));\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\tif(tab.fmt==3) {\n  \t\t\tfor(var i=0; i<3; i++) {\n  \t\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar cvgs = [];\n  \t\t\t\tfor(var j=0; j<cnt; j++) { cvgs.push(  Typr._lctf.readCoverage(data, offset0 + bin.readUshort(data, offset+j*2))   ); }\n  \t\t\t\toffset+=cnt*2;\n  \t\t\t\tif(i==0) { tab.backCvg = cvgs; }\n  \t\t\t\tif(i==1) { tab.inptCvg = cvgs; }\n  \t\t\t\tif(i==2) { tab.ahedCvg = cvgs; }\n  \t\t\t}\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.lookupRec = Typr.GSUB.readSubstLookupRecords(data, offset, cnt);\n  \t\t}\n  \t\t//console.log(tab);\n  \t} //*/\n  \t//if(tab.coverage.indexOf(3)!=-1) console.log(ltype, fmt, tab);\n  \t\n  \treturn tab;\n  };\n\n  Typr.GSUB.readSubClassSet = function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, offset0 = offset, lset = [];\n  \tvar cnt = rUs(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = rUs(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readSubClassRule= function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, rule = {};\n  \tvar gcount = rUs(data, offset);  offset+=2;\n  \tvar scount = rUs(data, offset);  offset+=2;\n  \trule.input = [];\n  \tfor(var i=0; i<gcount-1; i++) {\n  \t\trule.input.push(rUs(data, offset));  offset+=2;\n  \t}\n  \trule.substLookupRecords = Typr.GSUB.readSubstLookupRecords(data, offset, scount);\n  \treturn rule;\n  };\n  Typr.GSUB.readSubstLookupRecords = function(data, offset, cnt)\n  {\n  \tvar rUs = Typr._bin.readUshort;\n  \tvar out = [];\n  \tfor(var i=0; i<cnt; i++) {  out.push(rUs(data, offset), rUs(data, offset+2));  offset+=4;  }\n  \treturn out;\n  };\n\n  Typr.GSUB.readChainSubClassSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readChainSubClassRule= function(data, offset)\n  {\n  \tvar bin = Typr._bin, rule = {};\n  \tvar pps = [\"backtrack\", \"input\", \"lookahead\"];\n  \tfor(var pi=0; pi<pps.length; pi++) {\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) { cnt--; }\n  \t\trule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\n  \t}\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \trule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\n  \treturn rule;\n  };\n\n  Typr.GSUB.readLigatureSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar lcnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<lcnt; j++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readLigature(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readLigature = function(data, offset)\n  {\n  \tvar bin = Typr._bin, lig = {chain:[]};\n  \tlig.nglyph = bin.readUshort(data, offset);  offset+=2;\n  \tvar ccnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\n  \treturn lig;\n  };\n\n\n\n  Typr.head = {};\n  Typr.head.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.fontRevision = bin.readFixed(data, offset);  offset += 4;\n  \tvar checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\n  \tvar magicNumber = bin.readUint(data, offset);  offset += 4;\n  \tobj.flags = bin.readUshort(data, offset);  offset += 2;\n  \tobj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\n  \tobj.created  = bin.readUint64(data, offset);  offset += 8;\n  \tobj.modified = bin.readUint64(data, offset);  offset += 8;\n  \tobj.xMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.macStyle = bin.readUshort(data, offset);  offset += 2;\n  \tobj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\n  \tobj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\n  \tobj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\n  \tobj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hhea = {};\n  Typr.hhea.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.ascender  = bin.readShort(data, offset);  offset += 2;\n  \tobj.descender = bin.readShort(data, offset);  offset += 2;\n  \tobj.lineGap = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\n  \tobj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\n  \tobj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretOffset    = bin.readShort(data, offset);  offset += 2;\n  \t\n  \toffset += 4*2;\n  \t\n  \tobj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\n  \tobj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hmtx = {};\n  Typr.hmtx.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.aWidth = [];\n  \tobj.lsBearing = [];\n  \t\n  \t\n  \tvar aw = 0, lsb = 0;\n  \t\n  \tfor(var i=0; i<font.maxp.numGlyphs; i++)\n  \t{\n  \t\tif(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\n  \t\tobj.aWidth.push(aw);\n  \t\tobj.lsBearing.push(lsb);\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.kern = {};\n  Typr.kern.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readUshort(data, offset);  offset+=2;\n  \tif(version==1) { return Typr.kern.parseV1(data, offset-2, length, font); }\n  \tvar nTables = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\toffset+=2;\t// skip version\n  \t\tvar length  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.parseV1 = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readFixed(data, offset);  offset+=4;\n  \tvar nTables = bin.readUint(data, offset);  offset+=4;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\tvar length = bin.readUint(data, offset);   offset+=4;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tupleIndex = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.readFormat0 = function(data, offset, map)\n  {\n  \tvar bin = Typr._bin;\n  \tvar pleft = -1;\n  \tvar nPairs        = bin.readUshort(data, offset);  offset+=2;\n  \tvar searchRange   = bin.readUshort(data, offset);  offset+=2;\n  \tvar entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tvar rangeShift    = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<nPairs; j++)\n  \t{\n  \t\tvar left  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar right = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar value = bin.readShort (data, offset);  offset+=2;\n  \t\tif(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }); }\n  \t\tvar rval = map.rval[map.rval.length-1];\n  \t\trval.glyph2.push(right);   rval.vals.push(value);\n  \t\tpleft = left;\n  \t}\n  \treturn offset;\n  };\n\n\n\n  Typr.loca = {};\n  Typr.loca.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \t\n  \tvar ver = font.head.indexToLocFormat;\n  \t//console.log(\"loca\", ver, length, 4*font.maxp.numGlyphs);\n  \tvar len = font.maxp.numGlyphs+1;\n  \t\n  \tif(ver==0) { for(var i=0; i<len; i++) { obj.push(bin.readUshort(data, offset+(i<<1))<<1); } }\n  \tif(ver==1) { for(var i=0; i<len; i++) { obj.push(bin.readUint  (data, offset+(i<<2))   ); } }\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.maxp = {};\n  Typr.maxp.parse = function(data, offset, length)\n  {\n  \t//console.log(data.length, offset, length);\n  \t\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \t// both versions 0.5 and 1.0\n  \tvar ver = bin.readUint(data, offset); offset += 4;\n  \tobj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t// only 1.0\n  \tif(ver == 0x00010000)\n  \t{\n  \t\tobj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxContours           = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxZones              = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.name = {};\n  Typr.name.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar format = bin.readUshort(data, offset);  offset += 2;\n  \tvar count  = bin.readUshort(data, offset);  offset += 2;\n  \tvar stringOffset = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(format,count);\n  \t\n  \tvar names = [\n  \t\t\"copyright\",\n  \t\t\"fontFamily\",\n  \t\t\"fontSubfamily\",\n  \t\t\"ID\",\n  \t\t\"fullName\",\n  \t\t\"version\",\n  \t\t\"postScriptName\",\n  \t\t\"trademark\",\n  \t\t\"manufacturer\",\n  \t\t\"designer\",\n  \t\t\"description\",\n  \t\t\"urlVendor\",\n  \t\t\"urlDesigner\",\n  \t\t\"licence\",\n  \t\t\"licenceURL\",\n  \t\t\"---\",\n  \t\t\"typoFamilyName\",\n  \t\t\"typoSubfamilyName\",\n  \t\t\"compatibleFull\",\n  \t\t\"sampleText\",\n  \t\t\"postScriptCID\",\n  \t\t\"wwsFamilyName\",\n  \t\t\"wwsSubfamilyName\",\n  \t\t\"lightPalette\",\n  \t\t\"darkPalette\"\n  \t];\n  \t\n  \tvar offset0 = offset;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar languageID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar nameID     = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar slen       = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset    = bin.readUshort(data, offset);  offset += 2;\n  \t\t//console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\n  \t\t\n  \t\tvar cname = names[nameID];\n  \t\tvar soff = offset0 + count*12 + noffset;\n  \t\tvar str;\n  \t\tif(platformID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(platformID == 3 && encodingID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 0) { str = bin.readASCII  (data, soff, slen); }\n  \t\telse if(encodingID == 1) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 3) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\t\n  \t\telse if(platformID == 1) { str = bin.readASCII(data, soff, slen);  console.log(\"reading unknown MAC encoding \"+encodingID+\" as ASCII\"); }\n  \t\telse { throw \"unknown encoding \"+encodingID + \", platformID: \"+platformID; }\n  \t\t\n  \t\tvar tid = \"p\"+platformID+\",\"+(languageID).toString(16);//Typr._platforms[platformID];\n  \t\tif(obj[tid]==null) { obj[tid] = {}; }\n  \t\tobj[tid][cname] = str;\n  \t\tobj[tid]._lang = languageID;\n  \t\t//console.log(tid, obj[tid]);\n  \t}\n  \t/*\n  \tif(format == 1)\n  \t{\n  \t\tvar langTagCount = bin.readUshort(data, offset);  offset += 2;\n  \t\tfor(var i=0; i<langTagCount; i++)\n  \t\t{\n  \t\t\tvar length  = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar noffset = bin.readUshort(data, offset);  offset += 2;\n  \t\t}\n  \t}\n  \t*/\n  \t\n  \t//console.log(obj);\n  \t\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0409) { return obj[p]; } }\t\t// United States\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0000) { return obj[p]; } }\t\t// Universal\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0c0c) { return obj[p]; } }\t\t// Canada\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null) { return obj[p]; } }\n  \t\n  \tvar tname;\n  \tfor(var p in obj) { tname=p; break; }\n  \tconsole.log(\"returning name table with languageID \"+ obj[tname]._lang);\n  \treturn obj[tname];\n  };\n\n\n  Typr[\"OS/2\"] = {};\n  Typr[\"OS/2\"].parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar ver = bin.readUshort(data, offset); offset += 2;\n  \t\n  \tvar obj = {};\n  \tif     (ver==0) { Typr[\"OS/2\"].version0(data, offset, obj); }\n  \telse if(ver==1) { Typr[\"OS/2\"].version1(data, offset, obj); }\n  \telse if(ver==2 || ver==3 || ver==4) { Typr[\"OS/2\"].version2(data, offset, obj); }\n  \telse if(ver==5) { Typr[\"OS/2\"].version5(data, offset, obj); }\n  \telse { throw \"unknown OS/2 table version: \"+ver; }\n  \t\n  \treturn obj;\n  };\n\n  Typr[\"OS/2\"].version0 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \tobj.xAvgCharWidth = bin.readShort(data, offset); offset += 2;\n  \tobj.usWeightClass = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWidthClass  = bin.readUshort(data, offset); offset += 2;\n  \tobj.fsType = bin.readUshort(data, offset); offset += 2;\n  \tobj.ySubscriptXSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYOffset = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptYSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySuperscriptYOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutSize = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutPosition = bin.readShort(data, offset); offset += 2;\n  \tobj.sFamilyClass = bin.readShort(data, offset); offset += 2;\n  \tobj.panose = bin.readBytes(data, offset, 10);  offset += 10;\n  \tobj.ulUnicodeRange1\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange2\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange3\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange4\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.achVendID = [bin.readInt8(data, offset), bin.readInt8(data, offset+1),bin.readInt8(data, offset+2),bin.readInt8(data, offset+3)];  offset += 4;\n  \tobj.fsSelection\t = bin.readUshort(data, offset); offset += 2;\n  \tobj.usFirstCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.usLastCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.sTypoAscender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoDescender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoLineGap = bin.readShort(data, offset); offset += 2;\n  \tobj.usWinAscent = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWinDescent = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version1 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version0(data, offset, obj);\n  \t\n  \tobj.ulCodePageRange1 = bin.readUint(data, offset); offset += 4;\n  \tobj.ulCodePageRange2 = bin.readUint(data, offset); offset += 4;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version2 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version1(data, offset, obj);\n  \t\n  \tobj.sxHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.sCapHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.usDefault = bin.readUshort(data, offset); offset += 2;\n  \tobj.usBreak = bin.readUshort(data, offset); offset += 2;\n  \tobj.usMaxContext = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version5 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version2(data, offset, obj);\n\n  \tobj.usLowerOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \tobj.usUpperOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr.post = {};\n  Typr.post.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.version           = bin.readFixed(data, offset);  offset+=4;\n  \tobj.italicAngle       = bin.readFixed(data, offset);  offset+=4;\n  \tobj.underlinePosition = bin.readShort(data, offset);  offset+=2;\n  \tobj.underlineThickness = bin.readShort(data, offset);  offset+=2;\n\n  \treturn obj;\n  };\n  Typr.SVG = {};\n  Typr.SVG.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = { entries: []};\n\n  \tvar offset0 = offset;\n\n  \tvar tableVersion = bin.readUshort(data, offset);\toffset += 2;\n  \tvar svgDocIndexOffset = bin.readUint(data, offset);\toffset += 4;\n  \tvar reserved = bin.readUint(data, offset); offset += 4;\n\n  \toffset = svgDocIndexOffset + offset0;\n\n  \tvar numEntries = bin.readUshort(data, offset);\toffset += 2;\n\n  \tfor(var i=0; i<numEntries; i++)\n  \t{\n  \t\tvar startGlyphID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar endGlyphID   = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar svgDocOffset = bin.readUint  (data, offset);  offset += 4;\n  \t\tvar svgDocLength = bin.readUint  (data, offset);  offset += 4;\n\n  \t\tvar sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\n  \t\tvar svg = bin.readUTF8(sbuf, 0, sbuf.length);\n  \t\t\n  \t\tfor(var f=startGlyphID; f<=endGlyphID; f++) {\n  \t\t\tobj.entries[f] = svg;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n\n  Typr.SVG.toPath = function(str)\n  {\n  \tvar pth = {cmds:[], crds:[]};\n  \tif(str==null) { return pth; }\n  \t\n  \tvar prsr = new DOMParser();\n  \tvar doc = prsr[\"parseFromString\"](str,\"image/svg+xml\");\n  \t\n  \tvar svg = doc.firstChild;  while(svg.tagName!=\"svg\") { svg = svg.nextSibling; }\n  \tvar vb = svg.getAttribute(\"viewBox\");\n  \tif(vb) { vb = vb.trim().split(\" \").map(parseFloat); }  else   { vb = [0,0,1000,1000]; }\n  \tTypr.SVG._toPath(svg.children, pth);\n  \tfor(var i=0; i<pth.crds.length; i+=2) {\n  \t\tvar x = pth.crds[i], y = pth.crds[i+1];\n  \t\tx -= vb[0];\n  \t\ty -= vb[1];\n  \t\ty = -y;\n  \t\tpth.crds[i] = x;\n  \t\tpth.crds[i+1] = y;\n  \t}\n  \treturn pth;\n  };\n\n  Typr.SVG._toPath = function(nds, pth, fill) {\n  \tfor(var ni=0; ni<nds.length; ni++) {\n  \t\tvar nd = nds[ni], tn = nd.tagName;\n  \t\tvar cfl = nd.getAttribute(\"fill\");  if(cfl==null) { cfl = fill; }\n  \t\tif(tn==\"g\") { Typr.SVG._toPath(nd.children, pth, cfl); }\n  \t\telse if(tn==\"path\") {\n  \t\t\tpth.cmds.push(cfl?cfl:\"#000000\");\n  \t\t\tvar d = nd.getAttribute(\"d\");  //console.log(d);\n  \t\t\tvar toks = Typr.SVG._tokens(d);  //console.log(toks);\n  \t\t\tTypr.SVG._toksToPath(toks, pth);  pth.cmds.push(\"X\");\n  \t\t}\n  \t\telse if(tn==\"defs\") ;\n  \t\telse { console.log(tn, nd); }\n  \t}\n  };\n\n  Typr.SVG._tokens = function(d) {\n  \tvar ts = [], off = 0, rn=false, cn=\"\";  // reading number, current number\n  \twhile(off<d.length){\n  \t\tvar cc=d.charCodeAt(off), ch = d.charAt(off);  off++;\n  \t\tvar isNum = (48<=cc && cc<=57) || ch==\".\" || ch==\"-\";\n  \t\t\n  \t\tif(rn) {\n  \t\t\tif(ch==\"-\") {  ts.push(parseFloat(cn));  cn=ch;  }\n  \t\t\telse if(isNum) { cn+=ch; }\n  \t\t\telse {  ts.push(parseFloat(cn));  if(ch!=\",\" && ch!=\" \") { ts.push(ch); }  rn=false;  }\n  \t\t}\n  \t\telse {\n  \t\t\tif(isNum) {  cn=ch;  rn=true;  }\n  \t\t\telse if(ch!=\",\" && ch!=\" \") { ts.push(ch); }\n  \t\t}\n  \t}\n  \tif(rn) { ts.push(parseFloat(cn)); }\n  \treturn ts;\n  };\n\n  Typr.SVG._toksToPath = function(ts, pth) {\t\n  \tvar i = 0, x = 0, y = 0, ox = 0, oy = 0;\n  \tvar pc = {\"M\":2,\"L\":2,\"H\":1,\"V\":1,   \"S\":4,   \"C\":6};\n  \tvar cmds = pth.cmds, crds = pth.crds;\n  \t\n  \twhile(i<ts.length) {\n  \t\tvar cmd = ts[i];  i++;\n  \t\t\n  \t\tif(cmd==\"z\") {  cmds.push(\"Z\");  x=ox;  y=oy;  }\n  \t\telse {\n  \t\t\tvar cmu = cmd.toUpperCase();\n  \t\t\tvar ps = pc[cmu], reps = Typr.SVG._reps(ts, i, ps);\n  \t\t\n  \t\t\tfor(var j=0; j<reps; j++) {\n  \t\t\t\tvar xi = 0, yi = 0;   if(cmd!=cmu) {  xi=x;  yi=y;  }\n  \t\t\t\t\n  \t\t\t\tif(cmu==\"M\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"M\");  crds.push(x,y);  ox=x;  oy=y; }\n  \t\t\t\telse if(cmu==\"L\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"H\") {  x = xi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"V\") {  y = yi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"C\") {\n  \t\t\t\t\tvar x1=xi+ts[i++], y1=yi+ts[i++], x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];\n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse if(cmu==\"S\") {\n  \t\t\t\t\tvar co = Math.max(crds.length-4, 0);\n  \t\t\t\t\tvar x1 = x+x-crds[co], y1 = y+y-crds[co+1];\n  \t\t\t\t\tvar x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];  \n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse { console.log(\"Unknown SVG command \"+cmd); }\n  \t\t\t}\n  \t\t}\n  \t}\n  };\n  Typr.SVG._reps = function(ts, off, ps) {\n  \tvar i = off;\n  \twhile(i<ts.length) {  if((typeof ts[i]) == \"string\") { break; }  i+=ps;  }\n  \treturn (i-off)/ps;\n  };\n  // End Typr.js\n\n  // Begin Typr.U.js\n\n  if(Typr  ==null) { Typr   = {}; }\n  if(Typr.U==null) { Typr.U = {}; }\n\n\n  Typr.U.codeToGlyph = function(font, code)\n  {\n  \tvar cmap = font.cmap;\n  \t\n  \tvar tind = -1;\n  \tif(cmap.p0e4!=null) { tind = cmap.p0e4; }\n  \telse if(cmap.p3e1!=null) { tind = cmap.p3e1; }\n  \telse if(cmap.p1e0!=null) { tind = cmap.p1e0; }\n  \telse if(cmap.p0e3!=null) { tind = cmap.p0e3; }\n  \t\n  \tif(tind==-1) { throw \"no familiar platform and encoding!\"; }\n  \t\n  \tvar tab = cmap.tables[tind];\n  \t\n  \tif(tab.format==0)\n  \t{\n  \t\tif(code>=tab.map.length) { return 0; }\n  \t\treturn tab.map[code];\n  \t}\n  \telse if(tab.format==4)\n  \t{\n  \t\tvar sind = -1;\n  \t\tfor(var i=0; i<tab.endCount.length; i++)   { if(code<=tab.endCount[i]){  sind=i;  break;  } } \n  \t\tif(sind==-1) { return 0; }\n  \t\tif(tab.startCount[sind]>code) { return 0; }\n  \t\t\n  \t\tvar gli = 0;\n  \t\tif(tab.idRangeOffset[sind]!=0) { gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)]; }\n  \t\telse                           { gli = code + tab.idDelta[sind]; }\n  \t\treturn gli & 0xFFFF;\n  \t}\n  \telse if(tab.format==12)\n  \t{\n  \t\tif(code>tab.groups[tab.groups.length-1][1]) { return 0; }\n  \t\tfor(var i=0; i<tab.groups.length; i++)\n  \t\t{\n  \t\t\tvar grp = tab.groups[i];\n  \t\t\tif(grp[0]<=code && code<=grp[1]) { return grp[2] + (code-grp[0]); }\n  \t\t}\n  \t\treturn 0;\n  \t}\n  \telse { throw \"unknown cmap table format \"+tab.format; }\n  };\n\n\n  Typr.U.glyphToPath = function(font, gid)\n  {\n  \tvar path = { cmds:[], crds:[] };\n  \tif(font.SVG && font.SVG.entries[gid]) {\n  \t\tvar p = font.SVG.entries[gid];  if(p==null) { return path; }\n  \t\tif(typeof p == \"string\") {  p = Typr.SVG.toPath(p);  font.SVG.entries[gid]=p;  }\n  \t\treturn p;\n  \t}\n  \telse if(font.CFF) {\n  \t\tvar state = {x:0,y:0,stack:[],nStems:0,haveWidth:false,width: font.CFF.Private ? font.CFF.Private.defaultWidthX : 0,open:false};\n  \t\tvar cff=font.CFF, pdct = font.CFF.Private;\n  \t\tif(cff.ROS) {\n  \t\t\tvar gi = 0;\n  \t\t\twhile(cff.FDSelect[gi+2]<=gid) { gi+=2; }\n  \t\t\tpdct = cff.FDArray[cff.FDSelect[gi+1]].Private;\n  \t\t}\n  \t\tTypr.U._drawCFF(font.CFF.CharStrings[gid], state, cff, pdct, path);\n  \t}\n  \telse if(font.glyf) {  Typr.U._drawGlyf(gid, font, path);  }\n  \treturn path;\n  };\n\n  Typr.U._drawGlyf = function(gid, font, path)\n  {\n  \tvar gl = font.glyf[gid];\n  \tif(gl==null) { gl = font.glyf[gid] = Typr.glyf._parseGlyf(font, gid); }\n  \tif(gl!=null){\n  \t\tif(gl.noc>-1) { Typr.U._simpleGlyph(gl, path); }\n  \t\telse          { Typr.U._compoGlyph (gl, font, path); }\n  \t}\n  };\n  Typr.U._simpleGlyph = function(gl, p)\n  {\n  \tfor(var c=0; c<gl.noc; c++)\n  \t{\n  \t\tvar i0 = (c==0) ? 0 : (gl.endPts[c-1] + 1);\n  \t\tvar il = gl.endPts[c];\n  \t\t\n  \t\tfor(var i=i0; i<=il; i++)\n  \t\t{\n  \t\t\tvar pr = (i==i0)?il:(i-1);\n  \t\t\tvar nx = (i==il)?i0:(i+1);\n  \t\t\tvar onCurve = gl.flags[i]&1;\n  \t\t\tvar prOnCurve = gl.flags[pr]&1;\n  \t\t\tvar nxOnCurve = gl.flags[nx]&1;\n  \t\t\t\n  \t\t\tvar x = gl.xs[i], y = gl.ys[i];\n  \t\t\t\n  \t\t\tif(i==i0) { \n  \t\t\t\tif(onCurve)  \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p, gl.xs[pr], gl.ys[pr]); } \n  \t\t\t\t\telse          {  Typr.U.P.moveTo(p,x,y);  continue;  /*  will do curveTo at il  */  }\n  \t\t\t\t}\n  \t\t\t\telse        \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p,  gl.xs[pr],       gl.ys[pr]        ); }\n  \t\t\t\t\telse          { Typr.U.P.moveTo(p, (gl.xs[pr]+x)/2, (gl.ys[pr]+y)/2   ); } \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tif(onCurve)\n  \t\t\t{\n  \t\t\t\tif(prOnCurve) { Typr.U.P.lineTo(p,x,y); }\n  \t\t\t}\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(nxOnCurve) { Typr.U.P.qcurveTo(p, x, y, gl.xs[nx], gl.ys[nx]); } \n  \t\t\t\telse          { Typr.U.P.qcurveTo(p, x, y, (x+gl.xs[nx])/2, (y+gl.ys[nx])/2); } \n  \t\t\t}\n  \t\t}\n  \t\tTypr.U.P.closePath(p);\n  \t}\n  };\n  Typr.U._compoGlyph = function(gl, font, p)\n  {\n  \tfor(var j=0; j<gl.parts.length; j++)\n  \t{\n  \t\tvar path = { cmds:[], crds:[] };\n  \t\tvar prt = gl.parts[j];\n  \t\tTypr.U._drawGlyf(prt.glyphIndex, font, path);\n  \t\t\n  \t\tvar m = prt.m;\n  \t\tfor(var i=0; i<path.crds.length; i+=2)\n  \t\t{\n  \t\t\tvar x = path.crds[i  ], y = path.crds[i+1];\n  \t\t\tp.crds.push(x*m.a + y*m.b + m.tx);\n  \t\t\tp.crds.push(x*m.c + y*m.d + m.ty);\n  \t\t}\n  \t\tfor(var i=0; i<path.cmds.length; i++) { p.cmds.push(path.cmds[i]); }\n  \t}\n  };\n\n\n  Typr.U._getGlyphClass = function(g, cd)\n  {\n  \tvar intr = Typr._lctf.getInterval(cd, g);\n  \treturn intr==-1 ? 0 : cd[intr+2];\n  \t//for(var i=0; i<cd.start.length; i++) \n  \t//\tif(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\n  \t//return 0;\n  };\n\n  Typr.U.getPairAdjustment = function(font, g1, g2)\n  {\n  \t//return 0;\n  \tif(font.GPOS) {\n  \t\tvar gpos = font[\"GPOS\"];\n  \t\tvar llist = gpos.lookupList, flist = gpos.featureList;\n  \t\tvar tused = [];\n  \t\tfor(var i=0; i<flist.length; i++) \n  \t\t{\n  \t\t\tvar fl = flist[i];  //console.log(fl);\n  \t\t\tif(fl.tag!=\"kern\") { continue; }\n  \t\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t\t//console.log(tab);\n  \t\t\t\t\n  \t\t\t\tfor(var j=0; j<tab.tabs.length; j++)\n  \t\t\t\t{\n  \t\t\t\t\tif(tab.tabs[i]==null) { continue; }\n  \t\t\t\t\tvar ltab = tab.tabs[j], ind;\n  \t\t\t\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, g1);  if(ind==-1) { continue; }  }\n  \t\t\t\t\t\n  \t\t\t\t\tif(tab.ltype==1) ;\n  \t\t\t\t\telse if(tab.ltype==2)\n  \t\t\t\t\t{\n  \t\t\t\t\t\tvar adj;\n  \t\t\t\t\t\tif(ltab.fmt==1)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar right = ltab.pairsets[ind];\n  \t\t\t\t\t\t\tfor(var i=0; i<right.length; i++) { if(right[i].gid2==g2) { adj = right[i]; } }\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\telse if(ltab.fmt==2)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar c1 = Typr.U._getGlyphClass(g1, ltab.classDef1);\n  \t\t\t\t\t\t\tvar c2 = Typr.U._getGlyphClass(g2, ltab.classDef2);\n  \t\t\t\t\t\t\tadj = ltab.matrix[c1][c2];\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\t//if(adj) console.log(ltab, adj);\n  \t\t\t\t\t\tif(adj && adj.val2) { return adj.val2[2]; }\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \tif(font.kern)\n  \t{\n  \t\tvar ind1 = font.kern.glyph1.indexOf(g1);\n  \t\tif(ind1!=-1)\n  \t\t{\n  \t\t\tvar ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\n  \t\t\tif(ind2!=-1) { return font.kern.rval[ind1].vals[ind2]; }\n  \t\t}\n  \t}\n  \t\n  \treturn 0;\n  };\n\n  Typr.U.stringToGlyphs = function(font, str)\n  {\n  \tvar gls = [];\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  if(cc>0xffff) { i++; }\n  \t\tgls.push(Typr.U.codeToGlyph(font, cc));\n  \t}\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  //\n  \t\tif(cc==2367) {  var t=gls[i-1];  gls[i-1]=gls[i];  gls[i]=t;  }\n  \t\t//if(cc==2381) {  var t=gls[i+1];  gls[i+1]=gls[i];  gls[i]=t;  }\n  \t\tif(cc>0xffff) { i++; }\n  \t}\n  \t//console.log(gls.slice(0));\n  \t\n  \t//console.log(gls);  return gls;\n  \t\n  \tvar gsub = font[\"GSUB\"];  if(gsub==null) { return gls; }\n  \tvar llist = gsub.lookupList, flist = gsub.featureList;\n  \t\n  \tvar cligs = [\"rlig\", \"liga\", \"mset\",  \"isol\",\"init\",\"fina\",\"medi\",   \"half\", \"pres\", \n  \t\t\t\t\"blws\" /* Tibetan fonts like Himalaya.ttf */ ];\n  \t\n  \t//console.log(gls.slice(0));\n  \tvar tused = [];\n  \tfor(var fi=0; fi<flist.length; fi++)\n  \t{\n  \t\tvar fl = flist[fi];  if(cligs.indexOf(fl.tag)==-1) { continue; }\n  \t\t//if(fl.tag==\"blwf\") continue;\n  \t\t//console.log(fl);\n  \t\t//console.log(fl.tag);\n  \t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t//console.log(fl.tab[ti], tab.ltype);\n  \t\t\t//console.log(fl.tag, tab);\n  \t\t\tfor(var ci=0; ci<gls.length; ci++) {\n  \t\t\t\tvar feat = Typr.U._getWPfeature(str, ci);\n  \t\t\t\tif(\"isol,init,fina,medi\".indexOf(fl.tag)!=-1 && fl.tag!=feat) { continue; }\n  \t\t\t\t\n  \t\t\t\tTypr.U._applySubs(gls, ci, tab, llist);\n  \t\t\t}\n  \t\t}\n  \t}\n  \t\n  \treturn gls;\n  };\n  Typr.U._getWPfeature = function(str, ci) {  // get Word Position feature\n  \tvar wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\n  \tvar R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\n  \tvar L = \"ꡲ્૗\";\n  \t\n  \tvar slft = ci==0            || wsep.indexOf(str[ci-1])!=-1;\n  \tvar srgt = ci==str.length-1 || wsep.indexOf(str[ci+1])!=-1;\n  \t\t\n  \tif(!slft && R.indexOf(str[ci-1])!=-1) { slft=true; }\n  \tif(!srgt && R.indexOf(str[ci  ])!=-1) { srgt=true; }\n  \t\t\n  \tif(!srgt && L.indexOf(str[ci+1])!=-1) { srgt=true; }\n  \tif(!slft && L.indexOf(str[ci  ])!=-1) { slft=true; }\n  \t\t\n  \tvar feat = null;\n  \tif(slft) { feat = srgt ? \"isol\" : \"init\"; }\n  \telse     { feat = srgt ? \"fina\" : \"medi\"; }\n  \t\n  \treturn feat;\n  };\n  Typr.U._applySubs = function(gls, ci, tab, llist) {\n  \tvar rlim = gls.length-ci-1;\n  \t//if(ci==0) console.log(\"++++ \", tab.ltype);\n  \tfor(var j=0; j<tab.tabs.length; j++)\n  \t{\n  \t\tif(tab.tabs[j]==null) { continue; }\n  \t\tvar ltab = tab.tabs[j], ind;\n  \t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, gls[ci]);  if(ind==-1) { continue; }  }\n  \t\t//if(ci==0) console.log(ind, ltab);\n  \t\t//*\n  \t\tif(tab.ltype==1) {\n  \t\t\tvar gl = gls[ci];\n  \t\t\tif(ltab.fmt==1) { gls[ci] = gls[ci]+ltab.delta; }\n  \t\t\telse            { gls[ci] = ltab.newg[ind]; }\n  \t\t\t//console.log(\"applying ... 1\", ci, gl, gls[ci]);\n  \t\t}//*\n  \t\telse if(tab.ltype==4) {\n  \t\t\tvar vals = ltab.vals[ind];\n  \t\t\t\n  \t\t\tfor(var k=0; k<vals.length; k++) {\n  \t\t\t\tvar lig = vals[k], rl = lig.chain.length;  if(rl>rlim) { continue; }\n  \t\t\t\tvar good = true, em1 = 0;\n  \t\t\t\tfor(var l=0; l<rl; l++) {  while(gls[ci+em1+(1+l)]==-1){ em1++; }  if(lig.chain[l]!=gls[ci+em1+(1+l)]) { good=false; }  }\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\tgls[ci]=lig.nglyph;\n  \t\t\t\tfor(var l=0; l<rl+em1; l++) { gls[ci+l+1]=-1; }   break;  // first character changed, other ligatures do not apply anymore\n  \t\t\t\t//console.log(\"lig\", ci, lig.chain, lig.nglyph);\n  \t\t\t\t//console.log(\"applying ...\");\n  \t\t\t}\n  \t\t}\n  \t\telse  if(tab.ltype==5 && ltab.fmt==2) {\n  \t\t\tvar cind = Typr._lctf.getInterval(ltab.cDef, gls[ci]);\n  \t\t\tvar cls = ltab.cDef[cind+2], scs = ltab.scset[cls]; \n  \t\t\tfor(var i=0; i<scs.length; i++) {\n  \t\t\t\tvar sc = scs[i], inp = sc.input;\n  \t\t\t\tif(inp.length>rlim) { continue; }\n  \t\t\t\tvar good = true;\n  \t\t\t\tfor(var l=0; l<inp.length; l++) {\n  \t\t\t\t\tvar cind2 = Typr._lctf.getInterval(ltab.cDef, gls[ci+1+l]);\n  \t\t\t\t\tif(cind==-1 && ltab.cDef[cind2+2]!=inp[l]) {  good=false;  break;  }\n  \t\t\t\t}\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\t//console.log(ci, gl);\n  \t\t\t\tvar lrs = sc.substLookupRecords;\n  \t\t\t\tfor(var k=0; k<lrs.length; k+=2)\n  \t\t\t\t{\n  \t\t\t\t\tvar gi = lrs[k], tabi = lrs[k+1];\n  \t\t\t\t\t//Typr.U._applyType1(gls, ci+gi, llist[tabi]);\n  \t\t\t\t\t//console.log(tabi, gls[ci+gi], llist[tabi]);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\telse if(tab.ltype==6 && ltab.fmt==3) {\n  \t\t\t//if(ltab.backCvg.length==0) return;\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.backCvg, ci-ltab.backCvg.length)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.inptCvg, ci)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.ahedCvg, ci+ltab.inptCvg.length)) { continue; }\n  \t\t\t//console.log(ci, ltab);\n  \t\t\tvar lr = ltab.lookupRec;  //console.log(ci, gl, lr);\n  \t\t\tfor(var i=0; i<lr.length; i+=2) {\n  \t\t\t\tvar cind = lr[i], tab2 = llist[lr[i+1]];\n  \t\t\t\t//console.log(\"-\", lr[i+1], tab2);\n  \t\t\t\tTypr.U._applySubs(gls, ci+cind, tab2, llist);\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"Unknown table\", tab.ltype, ltab.fmt);\n  \t\t//*/\n  \t}\n  };\n\n  Typr.U._glsCovered = function(gls, cvgs, ci) {\n  \tfor(var i=0; i<cvgs.length; i++) {\n  \t\tvar ind = Typr._lctf.coverageIndex(cvgs[i], gls[ci+i]);  if(ind==-1) { return false; }\n  \t}\n  \treturn true;\n  };\n\n  Typr.U.glyphsToPath = function(font, gls, clr)\n  {\t\n  \t//gls = gls.reverse();//gls.slice(0,12).concat(gls.slice(12).reverse());\n  \t\n  \tvar tpath = {cmds:[], crds:[]};\n  \tvar x = 0;\n  \t\n  \tfor(var i=0; i<gls.length; i++)\n  \t{\n  \t\tvar gid = gls[i];  if(gid==-1) { continue; }\n  \t\tvar gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\n  \t\tvar path = Typr.U.glyphToPath(font, gid);\n  \t\tfor(var j=0; j<path.crds.length; j+=2)\n  \t\t{\n  \t\t\ttpath.crds.push(path.crds[j] + x);\n  \t\t\ttpath.crds.push(path.crds[j+1]);\n  \t\t}\n  \t\tif(clr) { tpath.cmds.push(clr); }\n  \t\tfor(var j=0; j<path.cmds.length; j++) { tpath.cmds.push(path.cmds[j]); }\n  \t\tif(clr) { tpath.cmds.push(\"X\"); }\n  \t\tx += font.hmtx.aWidth[gid];// - font.hmtx.lsBearing[gid];\n  \t\tif(i<gls.length-1) { x += Typr.U.getPairAdjustment(font, gid, gid2); }\n  \t}\n  \treturn tpath;\n  };\n\n  Typr.U.pathToSVG = function(path, prec)\n  {\n  \tif(prec==null) { prec = 5; }\n  \tvar out = [], co = 0, lmap = {\"M\":2,\"L\":2,\"Q\":4,\"C\":6};\n  \tfor(var i=0; i<path.cmds.length; i++)\n  \t{\n  \t\tvar cmd = path.cmds[i], cn = co+(lmap[cmd]?lmap[cmd]:0);  \n  \t\tout.push(cmd);\n  \t\twhile(co<cn) {  var c = path.crds[co++];  out.push(parseFloat(c.toFixed(prec))+(co==cn?\"\":\" \"));  }\n  \t}\n  \treturn out.join(\"\");\n  };\n\n  Typr.U.pathToContext = function(path, ctx)\n  {\n  \tvar c = 0, crds = path.crds;\n  \t\n  \tfor(var j=0; j<path.cmds.length; j++)\n  \t{\n  \t\tvar cmd = path.cmds[j];\n  \t\tif     (cmd==\"M\") {\n  \t\t\tctx.moveTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"L\") {\n  \t\t\tctx.lineTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"C\") {\n  \t\t\tctx.bezierCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3], crds[c+4], crds[c+5]);\n  \t\t\tc+=6;\n  \t\t}\n  \t\telse if(cmd==\"Q\") {\n  \t\t\tctx.quadraticCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3]);\n  \t\t\tc+=4;\n  \t\t}\n  \t\telse if(cmd.charAt(0)==\"#\") {\n  \t\t\tctx.beginPath();\n  \t\t\tctx.fillStyle = cmd;\n  \t\t}\n  \t\telse if(cmd==\"Z\") {\n  \t\t\tctx.closePath();\n  \t\t}\n  \t\telse if(cmd==\"X\") {\n  \t\t\tctx.fill();\n  \t\t}\n  \t}\n  };\n\n\n  Typr.U.P = {};\n  Typr.U.P.moveTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"M\");  p.crds.push(x,y);\n  };\n  Typr.U.P.lineTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"L\");  p.crds.push(x,y);\n  };\n  Typr.U.P.curveTo = function(p, a,b,c,d,e,f)\n  {\n  \tp.cmds.push(\"C\");  p.crds.push(a,b,c,d,e,f);\n  };\n  Typr.U.P.qcurveTo = function(p, a,b,c,d)\n  {\n  \tp.cmds.push(\"Q\");  p.crds.push(a,b,c,d);\n  };\n  Typr.U.P.closePath = function(p) {  p.cmds.push(\"Z\");  };\n\n\n\n\n  Typr.U._drawCFF = function(cmds, state, font, pdct, p)\n  {\n  \tvar stack = state.stack;\n  \tvar nStems = state.nStems, haveWidth=state.haveWidth, width=state.width, open=state.open;\n  \tvar i=0;\n  \tvar x=state.x, y=state.y, c1x=0, c1y=0, c2x=0, c2y=0, c3x=0, c3y=0, c4x=0, c4y=0, jpx=0, jpy=0;\n  \t\n  \tvar o = {val:0,size:0};\n  \t//console.log(cmds);\n  \twhile(i<cmds.length)\n  \t{\n  \t\tTypr.CFF.getCharString(cmds, i, o);\n  \t\tvar v = o.val;\n  \t\ti += o.size;\n  \t\t\t\n  \t\tif(v==\"o1\" || v==\"o18\")  //  hstem || hstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o3\" || v==\"o23\")  // vstem || vstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o4\")\n  \t\t{\n  \t\t\tif (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(open) { Typr.U.P.closePath(p); }\n\n                      y += stack.pop();\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o5\")\n  \t\t{\n  \t\t\twhile (stack.length > 0) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o6\" || v==\"o7\")  // hlineto || vlineto\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar isX = (v == \"o6\");\n  \t\t\t\n  \t\t\tfor(var j=0; j<count; j++) {\n  \t\t\t\tvar sval = stack.shift();\n  \t\t\t\t\n  \t\t\t\tif(isX) { x += sval; }  else  { y += sval; }\n  \t\t\t\tisX = !isX;\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o8\" || v==\"o24\")\t// rrcurveto || rcurveline\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\twhile(index+6 <= count) {\n  \t\t\t\tc1x = x + stack.shift();\n  \t\t\t\tc1y = y + stack.shift();\n  \t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\tx = c2x + stack.shift();\n  \t\t\t\ty = c2y + stack.shift();\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex+=6;\n  \t\t\t}\n  \t\t\tif(v==\"o24\")\n  \t\t\t{\n  \t\t\t\tx += stack.shift();\n  \t\t\t\ty += stack.shift();\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o11\")  { break; }\n  \t\telse if(v==\"o1234\" || v==\"o1235\" || v==\"o1236\" || v==\"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\n  \t\t{\n  \t\t\tif(v==\"o1234\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n                  c1y = y;                      // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = y;                      // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t\t\n  \t\t\t}\n  \t\t\tif(v==\"o1235\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\ty = c4y + stack.shift();      // dy6\n  \t\t\t\tstack.shift();                // flex depth\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1236\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1237\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tif (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n  \t\t\t\t    x = c4x + stack.shift();\n  \t\t\t\t} else {\n  \t\t\t\t    y = c4y + stack.shift();\n  \t\t\t\t}\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o14\")\n  \t\t{\n  \t\t\tif (stack.length > 0 && !haveWidth) {\n                          width = stack.shift() + font.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(stack.length==4) // seac = standard encoding accented character\n  \t\t\t{\n  \t\t\t\tvar adx = stack.shift();\n  \t\t\t\tvar ady = stack.shift();\n  \t\t\t\tvar bchar = stack.shift();\n  \t\t\t\tvar achar = stack.shift();\n  \t\t\t\n  \t\t\t\t\n  \t\t\t\tvar bind = Typr.CFF.glyphBySE(font, bchar);\n  \t\t\t\tvar aind = Typr.CFF.glyphBySE(font, achar);\n  \t\t\t\t\n  \t\t\t\t//console.log(bchar, bind);\n  \t\t\t\t//console.log(achar, aind);\n  \t\t\t\t//state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\t\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[bind], state,font,pdct,p);\n  \t\t\t\tstate.x = adx; state.y = ady;\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[aind], state,font,pdct,p);\n  \t\t\t\t\n  \t\t\t\t//x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t\tif(open) {  Typr.U.P.closePath(p);  open=false;  }\n  \t\t}\t\t\n  \t\telse if(v==\"o19\" || v==\"o20\") \n  \t\t{ \n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t\t\n  \t\t\ti += (nStems + 7) >> 3;\n  \t\t}\n  \t\t\n  \t\telse if(v==\"o21\") {\n  \t\t\tif (stack.length > 2 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n\n                      y += stack.pop();\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n                      Typr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o22\")\n  \t\t{\n  \t\t\t if (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\t\t\t\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;                    \n  \t\t}\n  \t\telse if(v==\"o25\")\n  \t\t{\n  \t\t\twhile (stack.length > 6) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n\n                      c1x = x + stack.shift();\n                      c1y = y + stack.shift();\n                      c2x = c1x + stack.shift();\n                      c2y = c1y + stack.shift();\n                      x = c2x + stack.shift();\n                      y = c2y + stack.shift();\n                      Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t}\n  \t\telse if(v==\"o26\") \n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          x += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x;\n                          c1y = y + stack.shift();\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x;\n                          y = c2y + stack.shift();\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n\n  \t\t}\n  \t\telse if(v==\"o27\")\n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          y += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x + stack.shift();\n                          c1y = y;\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x + stack.shift();\n                          y = c2y;\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o10\" || v==\"o29\")\t// callsubr || callgsubr\n  \t\t{\n  \t\t\tvar obj = (v==\"o10\" ? pdct : font);\n  \t\t\tif(stack.length==0) { console.log(\"error: empty stack\");  }\n  \t\t\telse {\n  \t\t\t\tvar ind = stack.pop();\n  \t\t\t\tvar subr = obj.Subrs[ ind + obj.Bias ];\n  \t\t\t\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\tTypr.U._drawCFF(subr, state,font,pdct,p);\n  \t\t\t\tx=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o30\" || v==\"o31\")   // vhcurveto || hvcurveto\n  \t\t{\n  \t\t\tvar count, count1 = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\tvar alternate = v == \"o31\";\n  \t\t\t\n  \t\t\tcount  = count1 & ~2;\n  \t\t\tindex += count1 - count;\n  \t\t\t\n  \t\t\twhile ( index < count ) \n  \t\t\t{\n  \t\t\t\tif(alternate)\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x + stack.shift();\n  \t\t\t\t\tc1y = y;\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\ty = c2y + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  x = c2x + stack.shift();  index++;  }\n  \t\t\t\t\telse { x = c2x; }\n  \t\t\t\t\talternate = false;\n  \t\t\t\t}\n  \t\t\t\telse\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x;\n  \t\t\t\t\tc1y = y + stack.shift();\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\tx = c2x + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  y = c2y + stack.shift();  index++;  }\n  \t\t\t\t\telse { y = c2y; }\n  \t\t\t\t\talternate = true;\n  \t\t\t\t}\n                  Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex += 4;\n  \t\t\t}\n  \t\t}\n  \t\t\n  \t\telse if((v+\"\").charAt(0)==\"o\") {   console.log(\"Unknown operation: \"+v, cmds); throw v;  }\n  \t\telse { stack.push(v); }\n  \t}\n  \t//console.log(cmds);\n  \tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width; state.open=open;\n  };\n\n  // End Typr.U.js\n\n  return Typr\n\n  }\n\n  // Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with tiny-inflate \n  // (https://github.com/foliojs/tiny-inflate) for use in troika-3d-text. \n  // Original licenses apply: \n  // - tiny-inflate: https://github.com/foliojs/tiny-inflate/blob/master/LICENSE (MIT)\n  // - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n\n  function woff2otfFactory() {\n\n  // Begin tinyInflate\n  var tinyInflate = (function() {\n    var module = {};\n    var TINF_OK = 0;\n  var TINF_DATA_ERROR = -3;\n\n  function Tree() {\n    this.table = new Uint16Array(16);   /* table of code length counts */\n    this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n  }\n\n  function Data(source, dest) {\n    this.source = source;\n    this.sourceIndex = 0;\n    this.tag = 0;\n    this.bitcount = 0;\n    \n    this.dest = dest;\n    this.destLen = 0;\n    \n    this.ltree = new Tree();  /* dynamic length/symbol tree */\n    this.dtree = new Tree();  /* dynamic distance tree */\n  }\n\n  /* --------------------------------------------------- *\n   * -- uninitialized global data (static structures) -- *\n   * --------------------------------------------------- */\n\n  var sltree = new Tree();\n  var sdtree = new Tree();\n\n  /* extra bits and base tables for length codes */\n  var length_bits = new Uint8Array(30);\n  var length_base = new Uint16Array(30);\n\n  /* extra bits and base tables for distance codes */\n  var dist_bits = new Uint8Array(30);\n  var dist_base = new Uint16Array(30);\n\n  /* special ordering of code length codes */\n  var clcidx = new Uint8Array([\n    16, 17, 18, 0, 8, 7, 9, 6,\n    10, 5, 11, 4, 12, 3, 13, 2,\n    14, 1, 15\n  ]);\n\n  /* used by tinf_decode_trees, avoids allocations every call */\n  var code_tree = new Tree();\n  var lengths = new Uint8Array(288 + 32);\n\n  /* ----------------------- *\n   * -- utility functions -- *\n   * ----------------------- */\n\n  /* build extra bits and base tables */\n  function tinf_build_bits_base(bits, base, delta, first) {\n    var i, sum;\n\n    /* build bits table */\n    for (i = 0; i < delta; ++i) { bits[i] = 0; }\n    for (i = 0; i < 30 - delta; ++i) { bits[i + delta] = i / delta | 0; }\n\n    /* build base table */\n    for (sum = first, i = 0; i < 30; ++i) {\n      base[i] = sum;\n      sum += 1 << bits[i];\n    }\n  }\n\n  /* build the fixed huffman trees */\n  function tinf_build_fixed_trees(lt, dt) {\n    var i;\n\n    /* build fixed length tree */\n    for (i = 0; i < 7; ++i) { lt.table[i] = 0; }\n\n    lt.table[7] = 24;\n    lt.table[8] = 152;\n    lt.table[9] = 112;\n\n    for (i = 0; i < 24; ++i) { lt.trans[i] = 256 + i; }\n    for (i = 0; i < 144; ++i) { lt.trans[24 + i] = i; }\n    for (i = 0; i < 8; ++i) { lt.trans[24 + 144 + i] = 280 + i; }\n    for (i = 0; i < 112; ++i) { lt.trans[24 + 144 + 8 + i] = 144 + i; }\n\n    /* build fixed distance tree */\n    for (i = 0; i < 5; ++i) { dt.table[i] = 0; }\n\n    dt.table[5] = 32;\n\n    for (i = 0; i < 32; ++i) { dt.trans[i] = i; }\n  }\n\n  /* given an array of code lengths, build a tree */\n  var offs = new Uint16Array(16);\n\n  function tinf_build_tree(t, lengths, off, num) {\n    var i, sum;\n\n    /* clear code length count table */\n    for (i = 0; i < 16; ++i) { t.table[i] = 0; }\n\n    /* scan symbol lengths, and sum code length counts */\n    for (i = 0; i < num; ++i) { t.table[lengths[off + i]]++; }\n\n    t.table[0] = 0;\n\n    /* compute offset table for distribution sort */\n    for (sum = 0, i = 0; i < 16; ++i) {\n      offs[i] = sum;\n      sum += t.table[i];\n    }\n\n    /* create code->symbol translation table (symbols sorted by code) */\n    for (i = 0; i < num; ++i) {\n      if (lengths[off + i]) { t.trans[offs[lengths[off + i]]++] = i; }\n    }\n  }\n\n  /* ---------------------- *\n   * -- decode functions -- *\n   * ---------------------- */\n\n  /* get one bit from source stream */\n  function tinf_getbit(d) {\n    /* check if tag is empty */\n    if (!d.bitcount--) {\n      /* load next tag */\n      d.tag = d.source[d.sourceIndex++];\n      d.bitcount = 7;\n    }\n\n    /* shift bit out of tag */\n    var bit = d.tag & 1;\n    d.tag >>>= 1;\n\n    return bit;\n  }\n\n  /* read a num bit value from a stream and add base */\n  function tinf_read_bits(d, num, base) {\n    if (!num)\n      { return base; }\n\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n\n    var val = d.tag & (0xffff >>> (16 - num));\n    d.tag >>>= num;\n    d.bitcount -= num;\n    return val + base;\n  }\n\n  /* given a data stream and a tree, decode a symbol */\n  function tinf_decode_symbol(d, t) {\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n    \n    var sum = 0, cur = 0, len = 0;\n    var tag = d.tag;\n\n    /* get more bits while code value is above sum */\n    do {\n      cur = 2 * cur + (tag & 1);\n      tag >>>= 1;\n      ++len;\n\n      sum += t.table[len];\n      cur -= t.table[len];\n    } while (cur >= 0);\n    \n    d.tag = tag;\n    d.bitcount -= len;\n\n    return t.trans[sum + cur];\n  }\n\n  /* given a data stream, decode dynamic trees from it */\n  function tinf_decode_trees(d, lt, dt) {\n    var hlit, hdist, hclen;\n    var i, num, length;\n\n    /* get 5 bits HLIT (257-286) */\n    hlit = tinf_read_bits(d, 5, 257);\n\n    /* get 5 bits HDIST (1-32) */\n    hdist = tinf_read_bits(d, 5, 1);\n\n    /* get 4 bits HCLEN (4-19) */\n    hclen = tinf_read_bits(d, 4, 4);\n\n    for (i = 0; i < 19; ++i) { lengths[i] = 0; }\n\n    /* read code lengths for code length alphabet */\n    for (i = 0; i < hclen; ++i) {\n      /* get 3 bits code length (0-7) */\n      var clen = tinf_read_bits(d, 3, 0);\n      lengths[clcidx[i]] = clen;\n    }\n\n    /* build code length tree */\n    tinf_build_tree(code_tree, lengths, 0, 19);\n\n    /* decode code lengths for the dynamic trees */\n    for (num = 0; num < hlit + hdist;) {\n      var sym = tinf_decode_symbol(d, code_tree);\n\n      switch (sym) {\n        case 16:\n          /* copy previous code length 3-6 times (read 2 bits) */\n          var prev = lengths[num - 1];\n          for (length = tinf_read_bits(d, 2, 3); length; --length) {\n            lengths[num++] = prev;\n          }\n          break;\n        case 17:\n          /* repeat code length 0 for 3-10 times (read 3 bits) */\n          for (length = tinf_read_bits(d, 3, 3); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        case 18:\n          /* repeat code length 0 for 11-138 times (read 7 bits) */\n          for (length = tinf_read_bits(d, 7, 11); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        default:\n          /* values 0-15 represent the actual code lengths */\n          lengths[num++] = sym;\n          break;\n      }\n    }\n\n    /* build dynamic trees */\n    tinf_build_tree(lt, lengths, 0, hlit);\n    tinf_build_tree(dt, lengths, hlit, hdist);\n  }\n\n  /* ----------------------------- *\n   * -- block inflate functions -- *\n   * ----------------------------- */\n\n  /* given a stream and two trees, inflate a block of data */\n  function tinf_inflate_block_data(d, lt, dt) {\n    while (1) {\n      var sym = tinf_decode_symbol(d, lt);\n\n      /* check for end of block */\n      if (sym === 256) {\n        return TINF_OK;\n      }\n\n      if (sym < 256) {\n        d.dest[d.destLen++] = sym;\n      } else {\n        var length, dist, offs;\n        var i;\n\n        sym -= 257;\n\n        /* possibly get more bits from length code */\n        length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n        dist = tinf_decode_symbol(d, dt);\n\n        /* possibly get more bits from distance code */\n        offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n        /* copy match */\n        for (i = offs; i < offs + length; ++i) {\n          d.dest[d.destLen++] = d.dest[i];\n        }\n      }\n    }\n  }\n\n  /* inflate an uncompressed block of data */\n  function tinf_inflate_uncompressed_block(d) {\n    var length, invlength;\n    var i;\n    \n    /* unread from bitbuffer */\n    while (d.bitcount > 8) {\n      d.sourceIndex--;\n      d.bitcount -= 8;\n    }\n\n    /* get length */\n    length = d.source[d.sourceIndex + 1];\n    length = 256 * length + d.source[d.sourceIndex];\n\n    /* get one's complement of length */\n    invlength = d.source[d.sourceIndex + 3];\n    invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n    /* check length */\n    if (length !== (~invlength & 0x0000ffff))\n      { return TINF_DATA_ERROR; }\n\n    d.sourceIndex += 4;\n\n    /* copy block */\n    for (i = length; i; --i)\n      { d.dest[d.destLen++] = d.source[d.sourceIndex++]; }\n\n    /* make sure we start next block on a byte boundary */\n    d.bitcount = 0;\n\n    return TINF_OK;\n  }\n\n  /* inflate stream from source to dest */\n  function tinf_uncompress(source, dest) {\n    var d = new Data(source, dest);\n    var bfinal, btype, res;\n\n    do {\n      /* read final block flag */\n      bfinal = tinf_getbit(d);\n\n      /* read block type (2 bits) */\n      btype = tinf_read_bits(d, 2, 0);\n\n      /* decompress block */\n      switch (btype) {\n        case 0:\n          /* decompress uncompressed block */\n          res = tinf_inflate_uncompressed_block(d);\n          break;\n        case 1:\n          /* decompress block with fixed huffman trees */\n          res = tinf_inflate_block_data(d, sltree, sdtree);\n          break;\n        case 2:\n          /* decompress block with dynamic huffman trees */\n          tinf_decode_trees(d, d.ltree, d.dtree);\n          res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n          break;\n        default:\n          res = TINF_DATA_ERROR;\n      }\n\n      if (res !== TINF_OK)\n        { throw new Error('Data error'); }\n\n    } while (!bfinal);\n\n    if (d.destLen < d.dest.length) {\n      if (typeof d.dest.slice === 'function')\n        { return d.dest.slice(0, d.destLen); }\n      else\n        { return d.dest.subarray(0, d.destLen); }\n    }\n    \n    return d.dest;\n  }\n\n  /* -------------------- *\n   * -- initialization -- *\n   * -------------------- */\n\n  /* build fixed huffman trees */\n  tinf_build_fixed_trees(sltree, sdtree);\n\n  /* build extra bits and base tables */\n  tinf_build_bits_base(length_bits, length_base, 4, 3);\n  tinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n  /* fix a special case */\n  length_bits[28] = 0;\n  length_base[28] = 258;\n\n  module.exports = tinf_uncompress;\n\n    return module.exports\n  })();\n  // End tinyInflate\n\n  // Begin woff2otf.js\n  /*\n   Copyright 2012, Steffen Hanikel (https://github.com/hanikesn)\n   Modified by Artemy Tregubenko, 2014 (https://github.com/arty-name/woff2otf)\n   Modified by Jason Johnston, 2019 (pako --> tiny-inflate)\n   \n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     See the License for the specific language governing permissions and\n     limitations under the License.\n\n   A tool to convert a WOFF back to a TTF/OTF font file, in pure Javascript\n  */\n\n  function convert_streams(bufferIn, tinyInflate) {\n      var dataViewIn = new DataView(bufferIn);\n      var offsetIn = 0;\n\n      function read2() {\n          var uint16 = dataViewIn.getUint16(offsetIn);\n          offsetIn += 2;\n          return uint16;\n      }\n\n      function read4() {\n          var uint32 = dataViewIn.getUint32(offsetIn);\n          offsetIn += 4;\n          return uint32;\n      }\n\n      function write2(uint16) {\n          dataViewOut.setUint16(offsetOut, uint16);\n          offsetOut += 2;\n      }\n\n      function write4(uint32) {\n          dataViewOut.setUint32(offsetOut, uint32);\n          offsetOut += 4;\n      }\n\n      var WOFFHeader = {\n          signature: read4(),\n          flavor: read4(),\n          length: read4(),\n          numTables: read2(),\n          reserved: read2(),\n          totalSfntSize: read4(),\n          majorVersion: read2(),\n          minorVersion: read2(),\n          metaOffset: read4(),\n          metaLength: read4(),\n          metaOrigLength: read4(),\n          privOffset: read4(),\n          privLength: read4()\n      };\n\n      var entrySelector = 0;\n      while (Math.pow(2, entrySelector) <= WOFFHeader.numTables) {\n          entrySelector++;\n      }\n      entrySelector--;\n\n      var searchRange = Math.pow(2, entrySelector) * 16;\n      var rangeShift = WOFFHeader.numTables * 16 - searchRange;\n\n      var offset = 4 + 2 + 2 + 2 + 2;\n      var TableDirectoryEntries = [];\n      for (var i = 0; i < WOFFHeader.numTables; i++) {\n          TableDirectoryEntries.push({\n              tag: read4(),\n              offset: read4(),\n              compLength: read4(),\n              origLength: read4(),\n              origChecksum: read4()\n          });\n          offset += 4 * 4;\n      }\n\n      var arrayOut = new Uint8Array(\n          4 + 2 + 2 + 2 + 2 +\n          TableDirectoryEntries.length * (4 + 4 + 4 + 4) +\n          TableDirectoryEntries.reduce(function(acc, entry) { return acc + entry.origLength + 4; }, 0)\n      );\n      var bufferOut = arrayOut.buffer;\n      var dataViewOut = new DataView(bufferOut);\n      var offsetOut = 0;\n\n      write4(WOFFHeader.flavor);\n      write2(WOFFHeader.numTables);\n      write2(searchRange);\n      write2(entrySelector);\n      write2(rangeShift);\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          write4(TableDirectoryEntry.tag);\n          write4(TableDirectoryEntry.origChecksum);\n          write4(offset);\n          write4(TableDirectoryEntry.origLength);\n\n          TableDirectoryEntry.outOffset = offset;\n          offset += TableDirectoryEntry.origLength;\n          if ((offset % 4) != 0) {\n              offset += 4 - (offset % 4);\n          }\n      });\n\n      var size;\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          var compressedData = bufferIn.slice(\n              TableDirectoryEntry.offset,\n              TableDirectoryEntry.offset + TableDirectoryEntry.compLength\n          );\n\n          if (TableDirectoryEntry.compLength != TableDirectoryEntry.origLength) {\n              var uncompressedData = new Uint8Array(TableDirectoryEntry.origLength);\n              tinyInflate(\n                new Uint8Array(compressedData, 2), //skip deflate header\n                uncompressedData\n              );\n          } else {\n              uncompressedData = new Uint8Array(compressedData);\n          }\n\n          arrayOut.set(uncompressedData, TableDirectoryEntry.outOffset);\n          offset = TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength;\n\n          var padding = 0;\n          if ((offset % 4) != 0) {\n              padding = 4 - (offset % 4);\n          }\n          arrayOut.set(\n              new Uint8Array(padding).buffer,\n              TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength\n          );\n\n          size = offset + padding;\n      });\n\n      return bufferOut.slice(0, size);\n  }\n\n  // End woff2otf.js\n\n  return function(buffer) {\n    return convert_streams(buffer, tinyInflate)\n  }\n\n  }\n\n  /**\n   * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n   * Also adds support for WOFF files (not WOFF2).\n   */\n\n  function parserFactory(Typr, woff2otf) {\n    var cmdArgLengths = {\n      M: 2,\n      L: 2,\n      Q: 4,\n      C: 6,\n      Z: 0\n    };\n\n    function wrapFontObj(typrFont) {\n      var glyphMap = Object.create(null);\n\n      var fontObj = {\n        unitsPerEm: typrFont.head.unitsPerEm,\n        ascender: typrFont.hhea.ascender,\n        descender: typrFont.hhea.descender,\n        forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n          var glyphX = 0;\n          var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n          var glyphIndices = Typr.U.stringToGlyphs(typrFont, text);\n          var charIndex = 0;\n          glyphIndices.forEach(function (glyphIndex) {\n            // Typr returns a glyph index per string codepoint, with -1s in place of those that\n            // were omitted due to ligature substitution. So we can track original index in the\n            // string via simple increment, and skip everything else when seeing a -1.\n            if (glyphIndex !== -1) {\n              var glyphObj = glyphMap[glyphIndex];\n              if (!glyphObj) {\n                var ref = Typr.U.glyphToPath(typrFont, glyphIndex);\n                var cmds = ref.cmds;\n                var crds = ref.crds;\n\n                // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n                // normalize the two, so it's simplest just to iterate ourselves.\n                var xMin, yMin, xMax, yMax;\n                if (crds.length) {\n                  xMin = yMin = Infinity;\n                  xMax = yMax = -Infinity;\n                  for (var i = 0, len = crds.length; i < len; i += 2) {\n                    var x = crds[i];\n                    var y = crds[i + 1];\n                    if (x < xMin) { xMin = x; }\n                    if (y < yMin) { yMin = y; }\n                    if (x > xMax) { xMax = x; }\n                    if (y > yMax) { yMax = y; }\n                  }\n                } else {\n                  xMin = xMax = yMin = yMax = 0;\n                }\n\n                glyphObj = glyphMap[glyphIndex] = {\n                  index: glyphIndex,\n                  advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                  xMin: xMin,\n                  yMin: yMin,\n                  xMax: xMax,\n                  yMax: yMax,\n                  pathCommandCount: cmds.length,\n                  forEachPathCommand: function forEachPathCommand(callback) {\n                    var argsIndex = 0;\n                    var argsArray = [];\n                    for (var i = 0, len = cmds.length; i < len; i++) {\n                      var numArgs = cmdArgLengths[cmds[i]];\n                      argsArray.length = 1 + numArgs;\n                      argsArray[0] = cmds[i];\n                      for (var j = 1; j <= numArgs; j++) {\n                        argsArray[j] = crds[argsIndex++];\n                      }\n                      callback.apply(null, argsArray);\n                    }\n                  }\n                };\n              }\n\n              callback.call(null, glyphObj, glyphX, charIndex);\n\n              if (glyphObj.advanceWidth) {\n                glyphX += glyphObj.advanceWidth * fontScale;\n              }\n              if (letterSpacing) {\n                glyphX += letterSpacing * fontSize;\n              }\n            }\n            charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n          });\n          return glyphX\n        }\n      };\n\n      return fontObj\n    }\n\n    return function parse(buffer) {\n      // Look to see if we have a WOFF file and convert it if so:\n      var peek = new Uint8Array(buffer, 0, 4);\n      var tag = Typr._bin.readASCII(peek, 0, 4);\n      if (tag === 'wOFF') {\n        buffer = woff2otf(buffer);\n      } else if (tag === 'wOF2') {\n        throw new Error('woff2 fonts not supported')\n      }\n      return wrapFontObj(Typr.parse(buffer)[0])\n    }\n  }\n\n\n  var workerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'Typr Font Parser',\n    dependencies: [typrFactory, woff2otfFactory, parserFactory],\n    init: function init(typrFactory, woff2otfFactory, parserFactory) {\n      var Typr = typrFactory();\n      var woff2otf = woff2otfFactory();\n      return parserFactory(Typr, woff2otf)\n    }\n  });\n\n  //import fontParser from './FontParser_OpenType.js'\n\n\n  var CONFIG = {\n    defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n    sdfGlyphSize: 64,\n    textureWidth: 2048\n  };\n  var tempColor = new three.Color();\n\n  /**\n   * Customizes the text builder configuration. This must be called prior to the first font processing\n   * request, and applies to all fonts.\n   *\n   * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n   *                 requests, in case none is specified or the specifiede font fails to load or parse.\n   *                 Defaults to \"Roboto Regular\" from Google Fonts.\n   * @param {Number} config.sdfGlyphSize - The size of each glyph's SDF (signed distance field) texture\n   *                 that is used for rendering. Must be a power-of-two number, and applies to all fonts.\n   *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n   *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n   *                 to 64 which is generally a good balance of size and quality.\n   * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n   *                 2048 which is a safe maximum texture dimension according to the stats at\n   *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n   *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n   *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n   *                 glyph size and/or have an extraordinary number of glyphs.\n   */\n  function configureTextBuilder(config) {\n    {\n      assign(CONFIG, config);\n    }\n  }\n\n\n  /**\n   * The radial distance from glyph edges over which the SDF alpha will be calculated; if the alpha\n   * at distance:0 is 0.5, then the alpha at this distance will be zero. This is defined as a percentage\n   * of each glyph's maximum dimension in font space units so that it maps to the same minimum number of\n   * SDF texels regardless of the glyph's size. A larger value provides greater alpha gradient resolution\n   * and improves readability/antialiasing quality at small display sizes, but also decreases the number\n   * of texels available for encoding path details.\n   */\n  var SDF_DISTANCE_PERCENT = 1 / 8;\n\n\n  /**\n   * Repository for all font SDF atlas textures\n   *\n   *   {\n   *     [font]: {\n   *       sdfTexture: DataTexture\n   *     }\n   *   }\n   */\n  var atlases = Object.create(null);\n\n  /**\n   * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n   * @property {object} parameters - The normalized input arguments to the render call.\n   * @property {DataTexture} sdfTexture - The SDF atlas texture.\n   * @property {number} sdfGlyphSize - See `configureTextBuilder#config.sdfGlyphSize`\n   * @property {number} sdfMinDistancePercent - See `SDF_DISTANCE_PERCENT`\n   * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n   * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n   * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n   * @property {Float32Array} [caretPositions] - A list of caret positions for all glyphs; this is\n   *           the bottom [x,y] of the cursor position before each char, plus one after the last char.\n   * @property {number} [caretHeight] - An appropriate height for all selection carets.\n   * @property {number} ascender - The font's ascender metric.\n   * @property {number} descender - The font's descender metric.\n   * @property {number} lineHeight - The final computed lineHeight measurement.\n   * @property {number} topBaseline - The y position of the top line's baseline.\n   * @property {Array<number>} totalBounds - The total [minX, minY, maxX, maxY] rect including all glyph\n   *           quad bounds; this will be slightly larger than the actual glyph path edges due to SDF padding.\n   * @property {Array<number>} totalBlockSize - The [width, height] of the text block; this does not include\n   *           extra SDF padding so it is accurate to use for measurement.\n   * @property {Array<number>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n   *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n   * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n   *           generation, layout, etc.\n   * @frozen\n   */\n\n  /**\n   * @callback getTextRenderInfo~callback\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   */\n\n  /**\n   * Main entry point for requesting the data needed to render a text string with given font parameters.\n   * This is an asynchronous call, performing most of the logic in a web worker thread.\n   * @param {object} args\n   * @param {getTextRenderInfo~callback} callback\n   */\n  function getTextRenderInfo(args, callback) {\n    args = assign({}, args);\n\n    // Apply default font here to avoid a 'null' atlas, and convert relative\n    // URLs to absolute so they can be resolved in the worker\n    args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\n\n    // Normalize text to a string\n    args.text = '' + args.text;\n\n    // Normalize colors\n    if (args.colorRanges != null) {\n      var colors = {};\n      for (var key in args.colorRanges) {\n        if (args.colorRanges.hasOwnProperty(key)) {\n          var val = args.colorRanges[key];\n          if (typeof val !== 'number') {\n            val = tempColor.set(val).getHex();\n          }\n          colors[key] = val;\n        }\n      }\n      args.colorRanges = colors;\n    }\n\n    Object.freeze(args);\n\n    // Init the atlas for this font if needed\n    var sdfGlyphSize = CONFIG.sdfGlyphSize;\n    var textureWidth = CONFIG.textureWidth;\n    var atlas = atlases[args.font];\n    if (!atlas) {\n      atlas = atlases[args.font] = {\n        sdfTexture: new three.DataTexture(\n          new Uint8Array(sdfGlyphSize * textureWidth),\n          textureWidth,\n          sdfGlyphSize,\n          three.LuminanceFormat,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          three.LinearFilter,\n          three.LinearFilter\n        )\n      };\n      atlas.sdfTexture.font = args.font;\n    }\n\n    // Issue request to the FontProcessor in the worker\n    processInWorker(args).then(function (result) {\n      // If the response has newGlyphs, copy them into the atlas texture at the specified indices\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (ref) {\n          var textureData = ref.textureData;\n          var atlasIndex = ref.atlasIndex;\n\n          var texImg = atlas.sdfTexture.image;\n\n          // Grow the texture by power of 2 if needed\n          while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n            var biggerArray = new Uint8Array(texImg.data.length * 2);\n            biggerArray.set(texImg.data);\n            texImg.data = biggerArray;\n            texImg.height *= 2;\n          }\n\n          // Insert the new glyph's data into the full texture image at the correct offsets\n          var cols = texImg.width / sdfGlyphSize;\n          for (var y = 0; y < sdfGlyphSize; y++) {\n            var srcStartIndex = y * sdfGlyphSize;\n            var tgtStartIndex = texImg.width * sdfGlyphSize * Math.floor(atlasIndex / cols) //full rows\n              + (atlasIndex % cols) * sdfGlyphSize //partial row\n              + (y * texImg.width); //row within glyph\n            for (var x = 0; x < sdfGlyphSize; x++) {\n              texImg.data[tgtStartIndex + x] = textureData[srcStartIndex + x];\n            }\n          }\n        });\n        atlas.sdfTexture.needsUpdate = true;\n      }\n\n      // Invoke callback with the text layout arrays and updated texture\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture: atlas.sdfTexture,\n        sdfGlyphSize: sdfGlyphSize,\n        sdfMinDistancePercent: SDF_DISTANCE_PERCENT,\n        glyphBounds: result.glyphBounds,\n        glyphAtlasIndices: result.glyphAtlasIndices,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        topBaseline: result.topBaseline,\n        totalBounds: result.totalBounds,\n        totalBlockSize: result.totalBlockSize,\n        timings: result.timings\n      }));\n    });\n  }\n\n\n  /**\n   * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n   * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n   * needed fonts and glyphs up front along with other assets.\n   *\n   * @param {string} font - URL of the font file to preload. If not given, the default font will\n   *        be loaded.\n   * @param {string|string[]} charSequences - One or more character sequences for which to pre-\n   *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n   *        to specify ligature sequences in addition to their individual characters to get all\n   *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n   * @param {function} callback - A function that will be called when the preloading is complete.\n   */\n  function preloadFont(font, charSequences, callback) {\n    var text = Array.isArray(charSequences) ? charSequences.join('\\n') : '' + charSequences;\n    getTextRenderInfo({ font: font, text: text }, callback);\n  }\n\n\n  // Local assign impl so we don't have to import troika-core\n  function assign(toObj, fromObj) {\n    for (var key in fromObj) {\n      if (fromObj.hasOwnProperty(key)) {\n        toObj[key] = fromObj[key];\n      }\n    }\n    return toObj\n  }\n\n  // Utility for making URLs absolute\n  var linkEl;\n  function toAbsoluteURL(path) {\n    if (!linkEl) {\n      linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n    }\n    linkEl.href = path;\n    return linkEl.href\n  }\n\n\n  var fontProcessorWorkerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'FontProcessor',\n    dependencies: [\n      CONFIG,\n      SDF_DISTANCE_PERCENT,\n      workerModule,\n      createGlyphSegmentsQuadtree,\n      createSDFGenerator,\n      createFontProcessor\n    ],\n    init: function init(config, sdfDistancePercent, fontParser, createGlyphSegmentsQuadtree, createSDFGenerator, createFontProcessor) {\n      var sdfGenerator = createSDFGenerator(\n        createGlyphSegmentsQuadtree,\n        {\n          sdfTextureSize: config.sdfGlyphSize,\n          sdfDistancePercent: sdfDistancePercent\n        }\n      );\n      return createFontProcessor(fontParser, sdfGenerator, {\n        defaultFontUrl: config.defaultFontURL\n      })\n    }\n  });\n\n  var processInWorker = troikaWorkerUtils.defineWorkerModule({\n    name: 'TextBuilder',\n    dependencies: [fontProcessorWorkerModule, troikaWorkerUtils.ThenableWorkerModule],\n    init: function init(fontProcessor, Thenable) {\n      return function(args) {\n        var thenable = new Thenable();\n        fontProcessor.process(args, thenable.resolve);\n        return thenable\n      }\n    },\n    getTransferables: function getTransferables(result) {\n      // Mark array buffers as transferable to avoid cloning during postMessage\n      var transferables = [\n        result.glyphBounds.buffer,\n        result.glyphAtlasIndices.buffer\n      ];\n      if (result.caretPositions) {\n        transferables.push(result.caretPositions.buffer);\n      }\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (d) {\n          transferables.push(d.textureData.buffer);\n        });\n      }\n      return transferables\n    }\n  });\n\n  var templateGeometries = {};\n  function getTemplateGeometry(detail) {\n    var geom = templateGeometries[detail];\n    if (!geom) {\n      geom = templateGeometries[detail] = new three.PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\n    }\n    return geom\n  }\n  var tempVec3 = new three.Vector3();\n\n  var glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  var glyphIndexAttrName = 'aTroikaGlyphIndex';\n  var glyphColorAttrName = 'aTroikaGlyphColor';\n\n\n\n  /**\n  @class GlyphsGeometry\n\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n    Where N = number of glyphs...\n\n    Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n\n    Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n\n  */\n  var GlyphsGeometry = /*@__PURE__*/(function (InstancedBufferGeometry) {\n    function GlyphsGeometry() {\n      InstancedBufferGeometry.call(this);\n\n      this.detail = 1;\n\n      // Preallocate zero-radius bounding sphere\n      this.boundingSphere = new three.Sphere();\n    }\n\n    if ( InstancedBufferGeometry ) GlyphsGeometry.__proto__ = InstancedBufferGeometry;\n    GlyphsGeometry.prototype = Object.create( InstancedBufferGeometry && InstancedBufferGeometry.prototype );\n    GlyphsGeometry.prototype.constructor = GlyphsGeometry;\n\n    var prototypeAccessors = { detail: { configurable: true } };\n\n    GlyphsGeometry.prototype.computeBoundingSphere = function computeBoundingSphere () {\n      // No-op; we'll sync the boundingSphere proactively in `updateGlyphs`.\n    };\n\n    prototypeAccessors.detail.set = function (detail) {\n      var this$1 = this;\n\n      if (detail !== this._detail) {\n        this._detail = detail;\n        if (typeof detail !== 'number' || detail < 1) {\n          detail = 1;\n        }\n        var tpl = getTemplateGeometry(detail)\n        ;['position', 'normal', 'uv'].forEach(function (attr) {\n          this$1.attributes[attr] = tpl.attributes[attr];\n        });\n        this.setIndex(tpl.getIndex());\n      }\n    };\n    prototypeAccessors.detail.get = function () {\n      return this._detail\n    };\n\n    /**\n     * Update the geometry for a new set of glyphs.\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n     *        the SDF atlas texture.\n     * @param {Array} totalBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n     */\n    GlyphsGeometry.prototype.updateGlyphs = function updateGlyphs (glyphBounds, glyphAtlasIndices, totalBounds, chunkedBounds, glyphColors) {\n      // Update the instance attributes\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n      this._chunkedBounds = chunkedBounds;\n      setInstanceCount(this, glyphAtlasIndices.length);\n\n      // Update the boundingSphere based on the total bounds\n      var sphere = this.boundingSphere;\n      sphere.center.set(\n        (totalBounds[0] + totalBounds[2]) / 2,\n        (totalBounds[1] + totalBounds[3]) / 2,\n        0\n      );\n      sphere.radius = sphere.center.distanceTo(tempVec3.set(totalBounds[0], totalBounds[1], 0));\n    };\n\n    /**\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n     * be clipped anyway.\n     *\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n     * but at the expense of much larger attribute buffers (see classdoc above.)\n     *\n     * @param {Vector4} clipRect\n     */\n    GlyphsGeometry.prototype.applyClipRect = function applyClipRect (clipRect) {\n      var count = this.getAttribute(glyphIndexAttrName).count;\n      var chunks = this._chunkedBounds;\n      if (chunks) {\n        for (var i = chunks.length; i--;) {\n          count = chunks[i].end;\n          var rect = chunks[i].rect;\n          // note: both rects are l-b-r-t\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n            break\n          }\n        }\n      }\n      setInstanceCount(this, count);\n    };\n\n    Object.defineProperties( GlyphsGeometry.prototype, prototypeAccessors );\n\n    return GlyphsGeometry;\n  }(three.InstancedBufferGeometry));\n\n  // Compat for pre r109:\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\n      this.attributes[ name ] = attribute;\n      return this\n    };\n  }\n\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    var attr = geom.getAttribute(attrName);\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new three.InstancedBufferAttribute(newArray, itemSize));\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  }\n\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  // language=GLSL\n  var VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nuniform vec4 uTroikaClipRect;\\nuniform mat3 uTroikaOrient;\\nuniform bool uTroikaUseGlyphColors;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nattribute vec3 aTroikaGlyphColor;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec3 vTroikaGlyphColor;\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var VERTEX_TRANSFORM = \"\\nvec4 bounds = aTroikaGlyphBounds;\\nvec4 clippedBounds = vec4(\\n  clamp(bounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\\n  clamp(bounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\\n);\\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\\nvTroikaGlyphUV = clippedXY.xy;\\n\\nfloat cols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\\nvTroikaSDFTextureUV = vec2(\\n  mod(aTroikaGlyphIndex, cols) + clippedXY.x,\\n  floor(aTroikaGlyphIndex / cols) + clippedXY.y\\n) * uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\n\\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\\n\\nuv = vec2(\\n  (position.x - uTroikaTotalBounds.x) / (uTroikaTotalBounds.z - uTroikaTotalBounds.x),\\n  (position.y - uTroikaTotalBounds.y) / (uTroikaTotalBounds.w - uTroikaTotalBounds.y)\\n);\\n\\nposition = uTroikaOrient * position;\\nnormal = uTroikaOrient * normal;\\n\";\n\n  // language=GLSL\n  var FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform float uTroikaSDFMinDistancePct;\\nuniform bool uTroikaSDFDebug;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\n\\nfloat troikaGetTextAlpha() {\\n  float troikaSDFValue = texture2D(uTroikaSDFTexture, vTroikaSDFTextureUV).r;\\n  \\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(0.5, troikaSDFValue);\\n  #else\\n  \" + ('') + \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  float aaDist = min(\\n    0.5,\\n    0.5 * min(\\n      fwidth(vTroikaGlyphUV.x),\\n      fwidth(vTroikaGlyphUV.y)\\n    )\\n  ) / uTroikaSDFMinDistancePct;\\n  #else\\n  float aaDist = 0.01;\\n  #endif\\n  \\n  float alpha = uTroikaSDFDebug ? troikaSDFValue : smoothstep(\\n    0.5 - aaDist,\\n    0.5 + aaDist,\\n    troikaSDFValue\\n  );\\n  #endif\\n  \\n  return alpha;\\n}\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var FRAGMENT_TRANSFORM = \"\\nfloat troikaAlphaMult = troikaGetTextAlpha();\\nif (troikaAlphaMult == 0.0) {\\n  discard;\\n} else {\\n  gl_FragColor.a *= troikaAlphaMult;\\n}\\n\";\n\n\n  /**\n   * Create a material for rendering text, derived from a baseMaterial\n   */\n  function createTextDerivedMaterial(baseMaterial) {\n    var textMaterial = troikaThreeUtils.createDerivedMaterial(baseMaterial, {\n      extensions: {derivatives: true},\n      uniforms: {\n        uTroikaSDFTexture: {value: null},\n        uTroikaSDFTextureSize: {value: new three.Vector2()},\n        uTroikaSDFGlyphSize: {value: 0},\n        uTroikaSDFMinDistancePct: {value: 0},\n        uTroikaTotalBounds: {value: new three.Vector4(0,0,0,0)},\n        uTroikaClipRect: {value: new three.Vector4(0,0,0,0)},\n        uTroikaOrient: {value: new three.Matrix3()},\n        uTroikaUseGlyphColors: {value: true},\n        uTroikaSDFDebug: {value: false}\n      },\n      vertexDefs: VERTEX_DEFS,\n      vertexTransform: VERTEX_TRANSFORM,\n      fragmentDefs: FRAGMENT_DEFS,\n      fragmentColorTransform: FRAGMENT_TRANSFORM,\n      customRewriter: function customRewriter(ref) {\n        var vertexShader = ref.vertexShader;\n        var fragmentShader = ref.fragmentShader;\n\n        var uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n        if (uDiffuseRE.test(fragmentShader)) {\n          // Replace all instances of `diffuse` with our varying\n          fragmentShader = fragmentShader\n            .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\n            .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\n          // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n          if (!uDiffuseRE.test(vertexShader)) {\n            vertexShader = vertexShader.replace(\n              troikaThreeUtils.voidMainRegExp,\n              'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\n            );\n          }\n        }\n        return { vertexShader: vertexShader, fragmentShader: fragmentShader }\n      }\n    });\n\n    // Force transparency - TODO is this reasonable?\n    textMaterial.transparent = true;\n\n    Object.defineProperties(textMaterial, {\n      isTroikaTextMaterial: {value: true},\n\n      // WebGLShadowMap reverses the side of the shadow material by default, which fails\n      // for planes, so here we force the `shadowSide` to always match the main side.\n      shadowSide: {\n        get: function get() {\n          return this.side\n        },\n        set: function set() {\n          //no-op\n        }\n      }\n    });\n\n    return textMaterial\n  }\n\n  var defaultMaterial = new three.MeshBasicMaterial({\n    color: 0xffffff,\n    side: three.DoubleSide,\n    transparent: true\n  });\n\n  var tempMat4 = new three.Matrix4();\n  var tempVec3a = new three.Vector3();\n  var tempVec3b = new three.Vector3();\n  var tempArray = [];\n  var origin = new three.Vector3();\n  var defaultOrient = '+x+y';\n\n  var raycastMesh = new three.Mesh(\n    new three.PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0),\n    defaultMaterial\n  );\n\n  var syncStartEvent = {type: 'syncstart'};\n  var syncCompleteEvent = {type: 'synccomplete'};\n\n  var SYNCABLE_PROPS = [\n    'font',\n    'fontSize',\n    'letterSpacing',\n    'lineHeight',\n    'maxWidth',\n    'overflowWrap',\n    'text',\n    'textAlign',\n    'whiteSpace',\n    'anchorX',\n    'anchorY',\n    'colorRanges'\n  ];\n\n  var COPYABLE_PROPS = SYNCABLE_PROPS.concat(\n    'material',\n    'color',\n    'depthOffset',\n    'clipRect',\n    'orientation',\n    'glyphGeometryDetail'\n  );\n\n\n\n  /**\n   * @class TextMesh\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n  var TextMesh = /*@__PURE__*/(function (Mesh) {\n    function TextMesh() {\n      var geometry = new GlyphsGeometry();\n      Mesh.call(this, geometry, null);\n\n      // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n      this.text = '';\n\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n      this.anchorX = 0;\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n      this.anchorY = 0;\n\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be any of the formats supported by\n       * OpenType (see https://github.com/opentypejs/opentype.js).\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n      this.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n      this.fontSize = 0.1;\n\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n      this.letterSpacing = 0;\n\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n      this.lineHeight = 'normal';\n\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n      this.maxWidth = Infinity;\n\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n      this.overflowWrap = 'normal';\n\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n      this.textAlign = 'left';\n\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n      this.whiteSpace = 'normal';\n\n\n      // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n      this.material = null;\n\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`.\n       */\n      this.color = null;\n\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n      this.colorRanges = null;\n\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n      this.depthOffset = 0;\n\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n      this.clipRect = null;\n\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n      this.orientation = defaultOrient;\n\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n      this.glyphGeometryDetail = 1;\n\n      this.debugSDF = false;\n    }\n\n    if ( Mesh ) TextMesh.__proto__ = Mesh;\n    TextMesh.prototype = Object.create( Mesh && Mesh.prototype );\n    TextMesh.prototype.constructor = TextMesh;\n\n    var prototypeAccessors = { textRenderInfo: { configurable: true },material: { configurable: true },glyphGeometryDetail: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n    TextMesh.prototype.sync = function sync (callback) {\n      var this$1 = this;\n\n      if (this._needsSync) {\n        this._needsSync = false;\n\n        // If there's another sync still in progress, queue\n        if (this._isSyncing) {\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n        } else {\n          this._isSyncing = true;\n          this.dispatchEvent(syncStartEvent);\n\n          getTextRenderInfo({\n            text: this.text,\n            font: this.font,\n            fontSize: this.fontSize || 0.1,\n            letterSpacing: this.letterSpacing || 0,\n            lineHeight: this.lineHeight || 'normal',\n            maxWidth: this.maxWidth,\n            textAlign: this.textAlign,\n            whiteSpace: this.whiteSpace,\n            overflowWrap: this.overflowWrap,\n            anchorX: this.anchorX,\n            anchorY: this.anchorY,\n            colorRanges: this.colorRanges,\n            includeCaretPositions: true //TODO parameterize\n          }, function (textRenderInfo) {\n            this$1._isSyncing = false;\n\n            // Save result for later use in onBeforeRender\n            this$1._textRenderInfo = textRenderInfo;\n\n            // Update the geometry attributes\n            this$1.geometry.updateGlyphs(\n              textRenderInfo.glyphBounds,\n              textRenderInfo.glyphAtlasIndices,\n              textRenderInfo.totalBounds,\n              textRenderInfo.chunkedBounds,\n              textRenderInfo.glyphColors\n            );\n\n            // If we had extra sync requests queued up, kick it off\n            var queued = this$1._queuedSyncs;\n            if (queued) {\n              this$1._queuedSyncs = null;\n              this$1._needsSync = true;\n              this$1.sync(function () {\n                queued.forEach(function (fn) { return fn && fn(); });\n              });\n            }\n\n            this$1.dispatchEvent(syncCompleteEvent);\n            if (callback) {\n              callback();\n            }\n          });\n        }\n      }\n    };\n\n    /**\n     * Initiate a sync if needed - note it won't complete until next frame at the\n     * earliest so if possible it's a good idea to call sync() manually as soon as\n     * all the properties have been set.\n     * @override\n     */\n    TextMesh.prototype.onBeforeRender = function onBeforeRender () {\n      this.sync();\n      this._prepareForRender();\n    };\n\n    /**\n     * Shortcut to dispose the geometry specific to this instance.\n     * Note: we don't also dispose the derived material here because if anything else is\n     * sharing the same base material it will result in a pause next frame as the program\n     * is recompiled. Instead users can dispose the base material manually, like normal,\n     * and we'll also dispose the derived material at that time.\n     */\n    TextMesh.prototype.dispose = function dispose () {\n      this.geometry.dispose();\n    };\n\n    /**\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\n     * @readonly\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n     * the asynchrous `sync()` process completes.\n     */\n    prototypeAccessors.textRenderInfo.get = function () {\n      return this._textRenderInfo || null\n    };\n\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n    prototypeAccessors.material.get = function () {\n      var derivedMaterial = this._derivedMaterial;\n      var baseMaterial = this._baseMaterial || defaultMaterial;\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n        // dispose the derived material when its base material is disposed:\n        baseMaterial.addEventListener('dispose', function onDispose() {\n          baseMaterial.removeEventListener('dispose', onDispose);\n          derivedMaterial.dispose();\n        });\n      }\n      return derivedMaterial\n    };\n    prototypeAccessors.material.set = function (baseMaterial) {\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\n        this._derivedMaterial = baseMaterial;\n        this._baseMaterial = baseMaterial.baseMaterial;\n      } else {\n        this._baseMaterial = baseMaterial;\n      }\n    };\n\n    prototypeAccessors.glyphGeometryDetail.get = function () {\n      return this.geometry.detail\n    };\n    prototypeAccessors.glyphGeometryDetail.set = function (detail) {\n      this.geometry.detail = detail;\n    };\n\n    // Create and update material for shadows upon request:\n    prototypeAccessors.customDepthMaterial.get = function () {\n      return this.material.getDepthMaterial()\n    };\n    prototypeAccessors.customDistanceMaterial.get = function () {\n      return this.material.getDistanceMaterial()\n    };\n\n    TextMesh.prototype._prepareForRender = function _prepareForRender () {\n      var material = this._derivedMaterial;\n      var uniforms = material.uniforms;\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var sdfTexture = textInfo.sdfTexture;\n        var totalBounds = textInfo.totalBounds;\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n        uniforms.uTroikaSDFMinDistancePct.value = textInfo.sdfMinDistancePercent;\n        uniforms.uTroikaTotalBounds.value.fromArray(totalBounds);\n        uniforms.uTroikaUseGlyphColors.value = !!textInfo.glyphColors;\n\n        var clipRect = this.clipRect;\n        if (!(clipRect && Array.isArray(clipRect) && clipRect.length === 4)) {\n          uniforms.uTroikaClipRect.value.fromArray(totalBounds);\n        } else {\n          uniforms.uTroikaClipRect.value.set(\n            Math.max(totalBounds[0], clipRect[0]),\n            Math.max(totalBounds[1], clipRect[1]),\n            Math.min(totalBounds[2], clipRect[2]),\n            Math.min(totalBounds[3], clipRect[3])\n          );\n        }\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n      }\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n      material.polygonOffset = !!this.depthOffset;\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n      // shortcut for setting material color via `color` prop on the mesh:\n      var color = this.color;\n      if (color != null && material.color && material.color.isColor && color !== material._troikaColor) {\n        material.color.set(material._troikaColor = color);\n      }\n\n      // base orientation\n      var orient = this.orientation || defaultOrient;\n      if (orient !== material._orientation) {\n        var rotMat = uniforms.uTroikaOrient.value;\n        orient = orient.replace(/[^-+xyz]/g, '');\n        var match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n        if (match) {\n          var hSign = match[1];\n          var hAxis = match[2];\n          var vSign = match[3];\n          var vAxis = match[4];\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n          rotMat.setFromMatrix4(tempMat4);\n        } else {\n          rotMat.identity();\n        }\n        material._orientation = orient;\n      }\n    };\n\n    /**\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n     */\n    TextMesh.prototype.raycast = function raycast (raycaster, intersects) {\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var bounds = textInfo.totalBounds;\n        raycastMesh.matrixWorld.multiplyMatrices(\n          this.matrixWorld,\n          tempMat4.set(\n            bounds[2] - bounds[0], 0, 0, bounds[0],\n            0, bounds[3] - bounds[1], 0, bounds[1],\n            0, 0, 1, 0,\n            0, 0, 0, 1\n          )\n        );\n        tempArray.length = 0;\n        raycastMesh.raycast(raycaster, tempArray);\n        for (var i = 0; i < tempArray.length; i++) {\n          tempArray[i].object = this;\n          intersects.push(tempArray[i]);\n        }\n      }\n    };\n\n    TextMesh.prototype.copy = function copy (source) {\n      var this$1 = this;\n\n      Mesh.prototype.copy.call(this, source);\n      COPYABLE_PROPS.forEach(function (prop) {\n        this$1[prop] = source[prop];\n      });\n      return this\n    };\n\n    TextMesh.prototype.clone = function clone () {\n      return new this.constructor().copy(this)\n    };\n\n    Object.defineProperties( TextMesh.prototype, prototypeAccessors );\n\n    return TextMesh;\n  }(three.Mesh));\n\n\n  // Create setters for properties that affect text layout:\n  SYNCABLE_PROPS.forEach(function (prop) {\n    var privateKey = '_private_' + prop;\n    Object.defineProperty(TextMesh.prototype, prop, {\n      get: function get() {\n        return this[privateKey]\n      },\n      set: function set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  });\n\n\n  // Deprecation handler for `anchor` array:\n  var deprMsgShown = false;\n  Object.defineProperty(TextMesh.prototype, 'anchor', {\n    get: function get() {\n      return this._deprecated_anchor\n    },\n    set: function set(val) {\n      this._deprecated_anchor = val;\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n      if (Array.isArray(val)) {\n        this.anchorX = ((+val[0] || 0) * 100) + \"%\";\n        this.anchorY = ((+val[1] || 0) * 100) + \"%\";\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n\n  //=== Utility functions for dealing with carets and selection ranges ===//\n\n  /**\n   * @typedef {object} TextCaret\n   * @property {number} x - x position of the caret\n   * @property {number} y - y position of the caret's bottom\n   * @property {number} height - height of the caret\n   * @property {number} charIndex - the index in the original input string of this caret's target\n   *   character; the caret will be for the position _before_ that character.\n   */\n\n  /**\n   * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n   * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n   * @param {number} x\n   * @param {number} y\n   * @return {TextCaret | null}\n   */\n  function getCaretAtPoint(textRenderInfo, x, y) {\n    var closestCaret = null;\n    var caretHeight = textRenderInfo.caretHeight;\n    var caretsByRow = groupCaretsByRow(textRenderInfo);\n\n    // Find nearest row by y first\n    var closestRowY = Infinity;\n    caretsByRow.forEach(function (carets, rowY) {\n      if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n        closestRowY = rowY;\n      }\n    });\n\n    // Then find closest caret by x within that row\n    caretsByRow.get(closestRowY).forEach(function (caret) {\n      if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n        closestCaret = caret;\n      }\n    });\n    return closestCaret\n  }\n\n\n  var _rectsCache = new WeakMap();\n\n  /**\n   * Given start and end character indexes, return a list of rectangles covering all the\n   * characters within that selection.\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   * @param {number} start - index of the first char in the selection\n   * @param {number} end - index of the first char after the selection\n   * @return {Array<{left, top, right, bottom}> | null}\n   */\n  function getSelectionRects(textRenderInfo, start, end) {\n    var rects;\n    if (textRenderInfo) {\n      // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n      var prevResult = _rectsCache.get(textRenderInfo);\n      if (prevResult && prevResult.start === start && prevResult.end === end) {\n        return prevResult.rects\n      }\n\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      var totalBounds = textRenderInfo.totalBounds;\n\n      // Normalize\n      if (end < start) {\n        var s = start;\n        start = end;\n        end = s;\n      }\n      start = Math.max(start, 0);\n      end = Math.min(end, caretPositions.length + 1);\n\n      // Collect into one rect per row\n      var rows = new Map();\n      for (var i = start; i < end; i++) {\n        var x1 = caretPositions[i * 3];\n        var x2 = caretPositions[i * 3 + 1];\n        var y = caretPositions[i * 3 + 2];\n        var row = rows.get(y);\n        if (!row) {\n          row = {left: x1, right: x2, bottom: y, top: y + caretHeight};\n          rows.set(y, row);\n        } else {\n          row.left = Math.max(Math.min(row.left, x1), totalBounds[0]);\n          row.right = Math.min(Math.max(row.right, x2), totalBounds[2]);\n        }\n      }\n      rects = [];\n      rows.forEach(function (rect) {\n        rects.push(rect);\n      });\n\n      _rectsCache.set(textRenderInfo, {start: start, end: end, rects: rects});\n    }\n    return rects\n  }\n\n  var _caretsByRowCache = new WeakMap();\n\n  function groupCaretsByRow(textRenderInfo) {\n    // textRenderInfo is frozen so it's safe to cache based on it\n    var caretsByRow = _caretsByRowCache.get(textRenderInfo);\n    if (!caretsByRow) {\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      caretsByRow = new Map();\n      for (var i = 0; i < caretPositions.length; i += 3) {\n        var rowY = caretPositions[i + 2];\n        var rowCarets = caretsByRow.get(rowY);\n        if (!rowCarets) {\n          caretsByRow.set(rowY, rowCarets = []);\n        }\n        rowCarets.push({\n          x: caretPositions[i],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3\n        });\n        // Add one more caret after the final char\n        if (i + 3 >= caretPositions.length) {\n          rowCarets.push({\n            x: caretPositions[i + 1],\n            y: rowY,\n            height: caretHeight,\n            charIndex: i / 3 + 1\n          });\n        }\n      }\n    }\n    _caretsByRowCache.set(textRenderInfo, caretsByRow);\n    return caretsByRow\n  }\n\n  exports.GlyphsGeometry = GlyphsGeometry;\n  exports.TextMesh = TextMesh;\n  exports.configureTextBuilder = configureTextBuilder;\n  exports.fontProcessorWorkerModule = fontProcessorWorkerModule;\n  exports.getCaretAtPoint = getCaretAtPoint;\n  exports.getSelectionRects = getSelectionRects;\n  exports.preloadFont = preloadFont;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":8,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":17,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":26,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":28,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":32,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":36,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":37,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":38,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":39,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":40,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":42,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":43,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":44,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":45,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":46,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":47,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":48,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":49,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":50,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":51,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":52,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":53,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":54,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":55,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":56,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":57,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":58,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":59,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":60,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":61,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":62,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":64,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":65,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":66,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":67,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":68,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":69,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":70,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":71,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":72,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":73,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":74,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":75,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":76,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":77,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":78,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":79,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":80,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":81,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":82,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":83,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":84,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":85,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":86,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":87,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":88,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":89,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":90,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":91,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":92,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":93,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":94,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":95,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":96,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":97,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":98,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":99,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":100,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":101,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":102,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":103,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":104,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":105,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":106,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":107,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":108,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":109,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":110,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":111,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":112,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":113,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":114,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":115,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":116,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":117,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":118,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":119,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":120,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":121,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":122,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":123,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":124,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":125,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":126,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":127,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":128,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":129,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":130,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":131,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":132,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":133,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":134,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":135,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":136,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":137,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":138,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":139,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":140,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":141,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":142,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":143,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":144,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":145,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":146,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":147,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":148,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":149,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":150,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":151,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":152,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":153,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":154,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":155,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":156,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":157,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":158,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":159,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":160,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":161,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":162,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":163,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":164,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":165,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":166,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":167,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":168,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":169,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":170,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":171,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":172,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":173,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":174,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":175,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":176,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":177,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":178,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":179,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":180,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":181,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":182,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":183,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":184,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":185,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":186,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":187,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":188,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":189,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":190,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":191,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":192,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":193,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":194,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":195,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":196,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":197,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":198,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":199,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":200,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":201,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":202,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":203,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":204,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":205,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":206,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":207,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":208,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":209,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":210,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":211,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":212,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":213,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":214,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":215,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":216,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":217,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":218,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":219,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":220,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":221,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":222,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":223,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":224,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":225,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":226,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":227,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":228,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":229,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":230,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":231,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":232,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":233,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":234,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":235,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":236,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":237,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":238,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":239,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":240,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":241,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":242,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":243,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":244,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":245,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":246,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":247,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":248,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":249,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":250,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":251,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":252,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":253,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":254,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":255,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":256,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":257,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":258,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":259,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":260,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":261,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":262,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":263,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":264,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":265,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":266,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":267,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":268,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":269,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":270,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":271,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":272,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":273,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":274,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":275,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":276,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":277,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":278,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":279,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":280,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":281,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":282,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":283,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":284,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":285,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":286,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":287,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":288,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":289,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":290,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":291,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":292,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":293,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":294,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":295,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":296,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":297,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":298,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":299,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":300,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":301,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":302,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":303,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":304,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":305,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":306,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":307,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":308,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":309,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":310,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":311,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":312,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":313,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":314,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":315,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":316,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":317,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":318,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":319,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":320,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":321,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":322,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":323,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":324,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":325,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":326,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":327,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":328,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":329,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":330,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":331,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":332,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":333,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":334,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":335,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":336,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":337,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":338,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":339,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":340,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":341,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":342,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":343,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":344,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":345,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":346,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":347,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":348,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":349,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":350,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":351,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":352,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":353,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":354,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":355,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":356,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":357,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":358,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":359,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":360,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":361,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":362,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":363,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":364,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":365,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":366,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":367,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":368,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":369,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":370,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":371,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":372,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":373,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":374,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":375,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":376,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":377,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":378,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":379,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":380,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":381,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":382,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":383,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":384,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":385,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":386,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":387,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":388,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":389,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":390,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":391,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":392,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":393,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":394,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":395,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":396,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":397,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":398,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":399,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":400,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":401,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":402,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":403,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":404,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":405,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":406,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":407,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":408,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":409,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":410,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":411,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":412,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":413,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":414,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":415,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":416,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":417,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":418,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":419,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":420,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":421,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":422,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":423,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":424,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":425,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":426,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":427,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":428,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":429,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":430,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":431,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":432,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":433,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":434,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":435,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":436,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":437,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":438,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":439,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":440,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":441,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":442,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":443,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":444,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":445,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":446,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":447,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":448,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":449,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":450,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":451,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":452,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":453,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":454,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":455,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":456,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":457,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":458,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":459,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":460,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":461,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":462,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":463,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":464,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":465,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":466,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":467,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":468,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":469,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":470,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":471,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":472,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":473,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":474,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":475,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":476,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":477,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":478,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":479,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":480,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":481,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":482,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":483,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":484,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":485,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":486,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":487,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":488,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":489,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":490,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":491,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":492,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":493,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":494,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":495,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":496,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":497,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":498,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":499,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":500,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":501,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":502,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":503,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":504,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":505,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":506,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":507,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":508,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":509,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":510,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":511,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":512,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":513,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":514,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":515,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":516,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":517,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":518,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":519,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":520,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":521,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":522,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":523,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":524,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":525,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":526,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":527,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":528,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":529,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":530,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":531,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":532,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":533,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":534,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":535,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":536,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":537,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":538,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":539,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":540,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":541,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":542,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":543,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":544,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":545,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":546,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":547,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":548,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":549,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":550,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":551,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":552,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":553,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":554,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":555,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":556,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":557,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":558,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":559,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":560,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":561,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":562,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":563,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":564,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":565,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":566,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":567,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":568,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":569,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":570,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":571,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":572,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":573,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":574,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":575,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":576,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":577,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":578,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":579,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":580,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":581,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":582,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":583,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":584,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":585,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":586,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":587,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":588,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":589,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":590,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":591,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":592,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":593,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":594,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":595,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":596,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":597,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":598,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":599,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":600,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":601,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":602,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":603,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":604,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":605,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":606,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":607,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":608,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":609,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":610,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":611,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":612,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":613,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":614,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":615,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":616,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":617,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":618,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":619,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":620,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":621,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":622,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":623,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":624,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":625,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":626,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":627,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":628,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":629,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":630,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":631,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":632,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":633,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":634,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":635,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":636,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":637,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":638,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":639,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":640,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":641,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":642,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":643,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":644,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":645,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":646,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":647,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":648,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":649,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":650,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":651,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":652,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":653,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":654,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":655,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":656,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":657,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":658,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":659,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":660,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":661,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":662,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":663,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":664,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":665,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":666,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":667,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":668,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":669,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":670,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":671,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":672,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":673,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":674,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":675,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":676,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":677,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":678,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":679,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":680,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":681,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":682,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":683,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":684,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":685,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":686,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":687,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":688,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":689,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":690,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":691,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":692,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":693,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":694,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":695,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":696,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":697,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":698,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":699,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":700,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":701,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":702,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":703,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":704,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":705,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":706,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":707,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":708,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":709,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":710,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":711,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":712,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":713,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":714,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":715,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":716,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":717,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":718,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":719,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":720,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":721,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":722,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":723,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":724,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":725,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":726,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":727,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":728,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":729,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":730,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":731,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":732,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":733,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":734,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":735,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":736,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":737,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":738,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":739,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":740,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":741,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":742,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":743,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":744,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":745,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":746,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":747,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":748,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":749,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":750,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":751,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":752,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":753,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":754,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":755,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":756,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":757,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":758,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":759,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":760,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":761,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":762,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":763,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":764,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":765,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":766,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":767,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":768,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":769,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":770,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":771,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":772,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":773,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":774,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":775,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":776,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":777,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":778,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":779,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":780,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":781,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":782,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":783,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":784,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":785,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":786,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":787,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":788,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":789,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":790,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":791,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":792,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":793,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":794,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":795,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":796,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":797,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":798,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":799,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":800,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":801,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":802,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":803,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":804,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":805,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":806,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":807,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":808,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":809,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":810,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":811,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":812,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":813,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":814,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":815,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":816,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":817,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":818,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":819,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":820,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":821,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":822,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":823,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":824,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":825,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":826,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":827,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":828,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":829,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":830,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":831,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":832,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":833,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":834,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":835,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":836,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":837,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":838,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":839,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":840,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":841,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":842,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":843,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":844,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":845,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":846,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":847,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":848,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":849,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":850,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":851,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":852,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":853,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":854,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":855,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":856,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":857,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":858,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":859,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":860,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":861,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":862,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":863,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":864,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":865,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":866,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":867,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":868,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":869,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":870,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":871,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":872,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":873,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":874,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":875,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":876,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":877,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":878,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":879,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":880,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":881,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":882,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":883,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":884,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":885,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":886,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":887,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":888,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":889,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":890,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":891,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":892,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":893,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":894,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":895,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":896,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":897,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":898,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":899,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":900,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":901,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":902,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":903,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":904,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":905,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":906,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":907,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":908,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":909,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":910,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":911,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":912,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":913,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":914,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":915,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":916,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":917,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":918,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":919,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":920,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":921,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":922,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":923,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":924,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":925,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":926,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":927,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":928,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":929,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":930,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":931,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":932,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":933,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":934,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":935,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":936,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":937,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":938,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":939,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":940,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":941,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":942,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":943,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":944,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":945,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":946,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":947,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":948,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":949,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":950,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":951,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":952,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":953,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":954,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":955,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":956,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":957,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":958,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":959,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":960,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":961,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":962,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":963,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":964,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":965,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":966,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":967,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":968,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":969,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":970,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":971,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":972,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":973,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":974,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":975,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":976,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":977,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":978,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":979,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":980,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":981,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":982,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":983,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":984,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":985,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":986,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":987,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":988,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":989,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":990,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":991,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":992,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":993,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":994,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":995,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":996,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":997,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":998,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":999,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1000,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1001,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1002,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1003,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1004,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1005,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1006,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1007,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1008,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1009,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1010,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1011,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1012,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1013,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1014,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1015,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1016,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1017,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1018,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1019,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1020,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1021,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1022,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1023,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1024,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1025,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1026,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1027,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1028,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1029,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1030,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1031,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1032,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1033,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1034,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1035,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1036,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1037,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1038,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1039,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1040,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1041,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1042,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1043,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1044,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1045,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1046,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1047,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1048,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1049,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1050,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1051,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1052,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1053,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1054,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1055,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1056,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1057,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1058,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1059,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1060,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1061,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1062,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1063,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1064,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1065,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1066,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1067,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1068,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1069,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1070,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1071,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1072,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1073,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1074,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1075,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1076,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1077,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1078,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1079,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1080,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1081,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1082,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1083,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1084,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1085,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1086,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1087,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1088,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1089,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1090,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1091,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1092,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1093,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1094,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1095,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1096,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1097,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1098,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1099,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1100,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1101,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1102,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1103,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1104,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1105,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1106,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1107,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1108,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1109,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1110,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1111,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1112,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1113,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1114,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1115,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1116,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1117,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1118,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1119,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1120,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1121,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1122,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1123,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1124,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1125,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1126,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1127,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1128,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1129,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1130,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1131,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1132,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1133,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1134,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1135,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1136,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1137,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1138,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1139,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1140,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1141,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1142,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1143,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1144,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1145,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1146,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1147,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1148,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1149,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1150,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1151,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1152,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1153,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1154,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1155,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1156,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1157,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1158,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1159,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1160,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1161,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1162,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1163,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1164,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1165,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1166,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1167,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1168,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1169,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1170,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1171,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1172,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1173,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1174,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1175,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1176,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1177,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1178,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1179,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1180,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1181,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1182,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1183,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1184,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1185,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1186,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1187,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1188,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1189,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1190,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1191,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1192,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1193,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1194,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1195,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1196,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1197,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1198,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1199,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1200,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1201,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1202,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1203,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1204,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1205,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1206,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1207,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1208,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1209,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1210,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1211,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1212,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1213,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1214,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1215,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1216,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1217,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1218,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1219,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1220,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1221,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1222,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1223,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1224,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1225,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1226,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1227,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1228,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1229,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1230,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1231,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1232,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1233,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1234,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1235,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1236,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1237,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1238,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1239,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1240,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1241,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1242,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1243,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1244,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1245,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1246,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1247,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1248,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1249,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1250,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1251,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1252,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1253,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1254,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1255,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1256,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1257,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1258,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1259,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1260,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1261,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1262,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1263,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1264,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1265,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1266,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1267,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1268,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1269,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1270,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1271,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1272,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1273,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1274,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1275,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1276,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1277,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1278,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1279,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1280,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1281,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1282,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1283,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1284,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1285,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1286,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1287,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1288,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1289,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1290,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1291,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1292,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1293,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1294,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1295,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1296,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1297,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1298,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1299,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1300,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1301,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1302,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1303,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1304,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1305,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1306,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1307,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1308,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1309,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1310,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1311,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1312,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1313,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1314,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1315,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1316,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1317,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1318,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1319,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1320,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1321,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1322,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1323,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1324,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1325,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1326,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1327,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1328,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1329,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1330,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1331,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1332,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1333,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1334,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1335,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1336,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1337,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1338,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1339,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1340,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1341,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1342,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1343,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1344,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1345,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1346,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1347,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1348,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1349,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1350,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1351,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1352,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1353,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1354,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1355,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1356,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1357,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1358,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1359,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1360,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1361,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1362,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1363,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1364,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1365,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1366,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1367,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1368,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1369,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1370,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1371,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1372,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1373,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1374,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1375,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1376,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1377,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1378,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1379,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1380,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1381,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1382,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1383,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1384,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1385,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1386,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1387,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1388,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1389,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1390,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1391,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1392,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1393,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1394,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1395,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1396,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1397,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1398,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1399,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1400,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1401,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1402,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1403,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1404,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1405,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1406,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1407,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1408,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1409,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1410,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1411,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1412,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1413,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1414,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1415,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1416,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1417,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1418,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1419,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1420,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1421,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1422,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1423,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1424,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1425,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1426,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1427,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1428,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1429,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1430,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1431,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1432,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1433,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1434,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1435,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1436,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1437,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1438,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1439,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1440,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1441,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1442,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1443,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1444,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1445,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1446,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1447,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1448,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1449,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1450,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1451,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1452,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1453,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1454,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1455,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1456,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1457,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1458,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1459,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1460,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1461,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1462,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1463,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1464,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1465,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1466,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1467,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1468,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1469,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1470,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1471,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1472,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1473,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1474,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1475,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1476,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1477,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1478,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1479,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1480,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1481,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1482,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1483,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1484,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1485,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1486,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1487,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1488,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1489,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1490,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1491,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1492,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1493,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1494,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1495,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1496,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1497,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1498,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1499,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1500,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1501,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1502,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1503,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1504,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1505,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1506,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1507,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1508,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1509,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1510,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1511,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1512,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1513,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1514,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1515,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1516,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1517,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1518,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1519,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1520,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1521,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1522,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1523,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1524,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1525,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1526,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1527,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1528,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1529,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1530,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1531,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1532,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1533,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1534,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1535,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1536,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1537,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1538,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1539,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1540,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1541,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1542,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1543,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1544,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1545,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1546,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1547,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1548,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1549,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1550,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1551,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1552,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1553,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1554,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1555,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1556,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1557,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1558,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1559,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1560,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1561,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1562,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1563,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1564,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1565,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1566,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1567,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1568,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1569,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1570,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1571,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1572,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1573,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1574,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1575,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1576,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1577,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1578,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1579,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1580,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1581,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1582,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1583,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1584,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1585,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1586,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1587,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1588,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1589,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1590,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1591,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1592,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1593,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1594,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1595,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1596,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1597,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1598,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1599,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1600,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1601,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1602,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1603,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1604,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1605,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1606,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1607,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1608,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1609,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1610,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1611,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1612,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1613,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1614,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1615,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1616,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1617,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1618,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1619,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1620,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1621,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1622,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1623,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1624,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1625,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1626,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1627,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1628,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1629,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1630,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1631,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1632,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1633,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1634,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1635,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1636,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1637,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1638,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1639,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1640,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1641,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1642,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1643,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1644,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1645,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1646,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1647,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1648,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1649,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1650,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1651,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1652,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1653,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1654,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1655,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1656,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1657,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1658,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1659,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1660,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1661,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1662,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1663,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1664,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1665,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1666,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1667,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1668,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1669,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1670,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1671,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1672,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1673,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1674,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1675,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1676,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1677,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1678,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1679,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1680,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1681,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1682,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1683,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1684,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1685,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1686,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1687,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1688,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1689,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1690,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1691,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1692,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1693,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1694,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1695,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1696,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1697,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1698,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1699,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1700,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1701,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1702,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1703,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1704,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1705,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1706,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1707,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1708,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1709,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1710,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1711,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1712,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1713,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1714,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1715,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1716,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1717,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1718,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1719,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1720,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1721,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1722,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1723,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1724,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1725,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1726,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1727,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1728,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1729,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1730,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1731,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1732,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1733,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1734,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1735,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1736,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1737,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1738,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1739,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1740,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1741,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1742,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1743,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1744,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1745,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1746,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1747,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1748,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1749,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1750,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1751,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1752,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1753,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1754,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1755,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1756,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1757,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1758,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1759,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1760,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1761,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1762,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1763,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1764,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1765,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1766,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1767,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1768,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1769,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1770,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1771,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1772,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1773,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1774,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1775,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1776,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1777,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1778,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1779,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1780,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1781,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1782,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1783,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1784,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1785,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1786,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1787,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1788,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1789,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1790,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1791,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1792,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1793,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1794,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1795,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1796,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1797,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1798,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1799,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1800,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1801,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1802,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1803,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1804,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1805,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1806,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1807,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1808,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1809,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1810,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1811,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1812,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1813,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1814,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1815,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1816,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1817,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1818,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1819,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1820,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1821,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1822,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1823,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1824,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1825,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1826,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1827,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1828,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1829,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1830,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1831,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1832,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1833,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1834,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1835,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1836,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1837,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1838,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1839,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1840,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1841,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1842,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1843,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1844,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1845,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1846,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1847,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1848,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1849,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1850,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1851,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1852,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1853,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1854,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1855,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1856,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1857,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1858,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1859,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1860,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1861,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1862,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1863,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1864,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1865,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1866,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1867,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1868,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1869,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1870,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1871,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1872,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1873,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1874,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1875,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1876,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1877,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1878,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1879,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1880,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1881,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1882,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1883,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1884,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1885,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1886,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1887,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1888,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1889,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1890,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1891,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1892,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1893,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1894,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1895,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1896,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1897,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1898,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1899,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1900,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1901,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1902,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1903,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1904,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1905,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1906,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1907,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1908,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1909,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1910,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1911,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1912,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1913,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1914,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1915,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1916,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1917,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1918,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1919,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1920,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1921,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1922,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1923,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1924,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1925,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1926,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1927,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1928,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1929,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1930,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1931,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1932,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1933,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1934,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1935,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1936,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1937,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1938,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1939,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1940,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1941,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1942,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1943,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1944,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1945,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1946,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1947,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1948,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1949,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1950,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1951,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1952,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1953,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1954,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1955,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1956,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1957,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1958,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1959,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1960,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1961,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1962,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1963,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1964,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1965,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1966,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1967,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1968,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1969,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1970,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1971,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1972,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1973,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1974,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1975,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1976,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1977,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1978,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1979,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1980,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1981,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1982,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1983,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1984,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1985,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1986,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1987,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1988,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1989,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1990,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1991,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1992,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1993,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1994,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1995,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1996,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1997,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1998,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":1999,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2000,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2001,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2002,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2003,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2004,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2005,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2006,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2007,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2008,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2009,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2010,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2011,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2012,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2013,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2014,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2015,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2016,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2017,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2018,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2019,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2020,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2021,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2022,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2023,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2024,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2025,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2026,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2027,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2028,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2029,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2030,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2031,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2032,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2033,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2034,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2035,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2036,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2037,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2038,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2039,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2040,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2041,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2042,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2043,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2044,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2045,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2046,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2047,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2048,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2049,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2050,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2051,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2052,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2053,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2054,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2055,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2056,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2057,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2058,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2059,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2060,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2061,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2062,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2063,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2064,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2065,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2066,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2067,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2068,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2069,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2070,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2071,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2072,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2073,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2074,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2075,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2076,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2077,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2078,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2079,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2080,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2081,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2082,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2083,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2084,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2085,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2086,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2087,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2088,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2089,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2090,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2091,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2092,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2093,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2094,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2095,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2096,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2097,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2098,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2099,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2100,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2101,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2102,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2103,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2104,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2105,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2106,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2107,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2108,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2109,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2110,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2111,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2112,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2113,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2114,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2115,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2116,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2117,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2118,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2119,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2120,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2121,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2122,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2123,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2124,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2125,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2126,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2127,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2128,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2129,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2130,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2131,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2132,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2133,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2134,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2135,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2136,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2137,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2138,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2139,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2140,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2141,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2142,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2143,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2144,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2145,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2146,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2147,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2148,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2149,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2150,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2151,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2152,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2153,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2154,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2155,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2156,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2157,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2158,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2159,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2160,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2161,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2162,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2163,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2164,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2165,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2166,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2167,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2168,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2169,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2170,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2171,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2172,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2173,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2174,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2175,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2176,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2177,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2178,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2179,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2180,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2181,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2182,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2183,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2184,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2185,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2186,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2187,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2188,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2189,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2190,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2191,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2192,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2193,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2194,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2195,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2196,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2197,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2198,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2199,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2200,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2201,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2202,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2203,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2204,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2205,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2206,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2207,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2208,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2209,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2210,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2211,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2212,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2213,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2214,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2215,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2216,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2217,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2218,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2219,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2220,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2221,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2222,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2223,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2224,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2225,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2226,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2227,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2228,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2229,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2230,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2231,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2232,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2233,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2234,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2235,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2236,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2237,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2238,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2239,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2240,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2241,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2242,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2243,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2244,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2245,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2246,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2247,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2248,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2249,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2250,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2251,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2252,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2253,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2254,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2255,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2256,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2257,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2258,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2259,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2260,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2261,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2262,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2263,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2264,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2265,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2266,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2267,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2268,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2269,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2270,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2271,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2272,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2273,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2274,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2275,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2276,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2277,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2278,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2279,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2280,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2281,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2282,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2283,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2284,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2285,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2286,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2287,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2288,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2289,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2290,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2291,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2292,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2293,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2294,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2295,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2296,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2297,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2298,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2299,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2300,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2301,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2302,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2303,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2304,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2305,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2306,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2307,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2308,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2309,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2310,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2311,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2312,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2313,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2314,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2315,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2316,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2317,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2318,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2319,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2320,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2321,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2322,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2323,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2324,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2325,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2326,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2327,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2328,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2329,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2330,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2331,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2332,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2333,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2334,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2335,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2336,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2337,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2338,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2339,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2340,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2341,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2342,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2343,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2344,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2345,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2346,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2347,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2348,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2349,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2350,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2351,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2352,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2353,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2354,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2355,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2356,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2357,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2358,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2359,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2360,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2361,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2362,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2363,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2364,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2365,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2366,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2367,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2368,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2369,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2370,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2371,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2372,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2373,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2374,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2375,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2376,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2377,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2378,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2379,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2380,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2381,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2382,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2383,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2384,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2385,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2386,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2387,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2388,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2389,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2390,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2391,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2392,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2393,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2394,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2395,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2396,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2397,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2398,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2399,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2400,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2401,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2402,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2403,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2404,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2405,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2406,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2407,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2408,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2409,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2410,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2411,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2412,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2413,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2414,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2415,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2416,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2417,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2418,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2419,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2420,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2421,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2422,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2423,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2424,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2425,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2426,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2427,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2428,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2429,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2430,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2431,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2432,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2433,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2434,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2435,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2436,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2437,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2438,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2439,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2440,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2441,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2442,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2443,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2444,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2445,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2446,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2447,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2448,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2449,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2450,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2451,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2452,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2453,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2454,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2455,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2456,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2457,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2458,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2459,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2460,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2461,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2462,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2463,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2464,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2465,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2466,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2467,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2468,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2469,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2470,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2471,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2472,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2473,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2474,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2475,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2476,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2477,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2478,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2479,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2480,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2481,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2482,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2483,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2484,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2485,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2486,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2487,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2488,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2489,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2490,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2491,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2492,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2493,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2494,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2495,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2496,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2497,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2498,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2499,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2500,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2501,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2502,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2503,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2504,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2505,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2506,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2507,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2508,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2509,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2510,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2511,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2512,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2513,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2514,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2515,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2516,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2517,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2518,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2519,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2520,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2521,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2522,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2523,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2524,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2525,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2526,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2527,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2528,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2529,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2530,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2531,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2532,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2533,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2534,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2535,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2536,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2537,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2538,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2539,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2540,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2541,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2542,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2543,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2544,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2545,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2546,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2547,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2548,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2549,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2550,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2551,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2552,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2553,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2554,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2555,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2556,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2557,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2558,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2559,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2560,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2561,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2562,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2563,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2564,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2565,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2566,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2567,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2568,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2569,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2570,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2571,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2572,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2573,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2574,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2575,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2576,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2577,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2578,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2579,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2580,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2581,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2582,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2583,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2584,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2585,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2586,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2587,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2588,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2589,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2590,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2591,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2592,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2593,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2594,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2595,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2596,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2597,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2598,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2599,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2600,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2601,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2602,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2603,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2604,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2605,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2606,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2607,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2608,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2609,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2610,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2611,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2612,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2613,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2614,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2615,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2616,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2617,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2618,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2619,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2620,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2621,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2622,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2623,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2624,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2625,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2626,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2627,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2628,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2629,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2630,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2631,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2632,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2633,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2634,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2635,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2636,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2637,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2638,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2639,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2640,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2641,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2642,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2643,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2644,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2645,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2646,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2647,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2648,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2649,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2650,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2651,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2652,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2653,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2654,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2655,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2656,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2657,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2658,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2659,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2660,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2661,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2662,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2663,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2664,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2665,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2666,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2667,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2668,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2669,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2670,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2671,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2672,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2673,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2674,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2675,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2676,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2677,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2678,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2679,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2680,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2681,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2682,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2683,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2684,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2685,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2686,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2687,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2688,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2689,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2690,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2691,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2692,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2693,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2694,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2695,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2696,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2697,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2698,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2699,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2700,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2701,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2702,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2703,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2704,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2705,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2706,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2707,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2708,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2709,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2710,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2711,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2712,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2713,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2714,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2715,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2716,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2717,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2718,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2719,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2720,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2721,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2722,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2723,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2724,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2725,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2726,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2727,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2728,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2729,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2730,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2731,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2732,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2733,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2734,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2735,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2736,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2737,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2738,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2739,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2740,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2741,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2742,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2743,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2744,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2745,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2746,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2747,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2748,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2749,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2750,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2751,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2752,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2753,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2754,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2755,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2756,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2757,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2758,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2759,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2760,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2761,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2762,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2763,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2764,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2765,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2766,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2767,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2768,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2769,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2770,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2771,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2772,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2773,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2774,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2775,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2776,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2777,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2778,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2779,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2780,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2781,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2782,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2783,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2784,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2785,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2786,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2787,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2788,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2789,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2790,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2791,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2792,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2793,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2794,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2795,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2796,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2797,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2798,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2799,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2800,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2801,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2802,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2803,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2804,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2805,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2806,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2807,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2808,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2809,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2810,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2811,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2812,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2813,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2814,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2815,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2816,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2817,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2818,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2819,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2820,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2821,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2822,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2823,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2824,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2825,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2826,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2827,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2828,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2829,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2830,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2831,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2832,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2833,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2834,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2835,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2836,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2837,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2838,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2839,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2840,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2841,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2842,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2843,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2844,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2845,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2846,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2847,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2848,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2849,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2850,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2851,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2852,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2853,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2854,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2855,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2856,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2857,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2858,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2859,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2860,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2861,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2862,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2863,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2864,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2865,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2866,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2867,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2868,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2869,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2870,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2871,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2872,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2873,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2874,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2875,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2876,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2877,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2878,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2879,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2880,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2881,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2882,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2883,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2884,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2885,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2886,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2887,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2888,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2889,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2890,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2891,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2892,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2893,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2894,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2895,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2896,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2897,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2898,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2899,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2900,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2901,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2902,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2903,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2904,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2905,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2906,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2907,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2908,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2909,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2910,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2911,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2912,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2913,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2914,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2915,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2916,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2917,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2918,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2919,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2920,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2921,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2922,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2923,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2924,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2925,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2926,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2927,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2928,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2929,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2930,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2931,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2932,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2933,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2934,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2935,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2936,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2937,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2938,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2939,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2940,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2941,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2942,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2943,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2944,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2945,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2946,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2947,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2948,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2949,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2950,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2951,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2952,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2953,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2954,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2955,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2956,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2957,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2958,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2959,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2960,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2961,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2962,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2963,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2964,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2965,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2966,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2967,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2968,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2969,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2970,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2971,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2972,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2973,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2974,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2975,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2976,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2977,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2978,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2979,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2980,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2981,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2982,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2983,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2984,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2985,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2986,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2987,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2988,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2989,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2990,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2991,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2992,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2993,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2994,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2995,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2996,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2997,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2998,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":2999,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3000,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3001,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3002,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3003,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3004,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3005,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3006,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3007,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3008,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3009,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3010,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3011,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3012,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3013,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3014,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3015,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3016,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3017,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3018,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3019,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3020,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3021,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3022,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3023,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3024,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3025,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3026,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3027,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3028,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3029,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3030,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3031,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3032,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3033,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3034,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3035,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3036,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3037,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3038,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3039,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3040,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3041,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3042,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3043,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3044,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3045,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3046,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3047,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3048,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3049,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3050,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3051,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3052,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3053,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3054,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3055,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3056,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3057,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3058,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3059,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3060,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3061,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3062,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3063,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3064,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3065,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3066,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3067,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3068,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3069,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3070,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3071,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3072,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3073,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3074,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3075,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3076,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3077,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3078,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3079,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3080,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3081,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3082,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3083,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3084,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3085,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3086,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3087,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3088,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3089,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3090,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3091,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3092,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3093,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3094,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3095,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3096,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3097,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3098,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3099,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3100,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3101,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3102,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3103,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3104,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3105,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3106,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3107,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3108,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3109,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3110,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3111,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3112,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3113,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3114,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3115,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3116,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3117,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3118,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3119,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3120,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3121,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3122,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3123,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3124,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3125,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3126,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3127,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3128,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3129,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3130,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3131,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3132,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3133,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3134,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3135,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3136,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3137,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3138,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3139,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3140,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3141,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3142,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3143,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3144,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3145,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3146,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3147,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3148,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3149,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3150,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3151,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3152,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3153,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3154,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3155,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3156,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3157,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3158,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3159,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3160,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3161,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3162,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3163,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3164,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3165,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3166,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3167,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3168,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3169,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3170,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3171,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3172,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3173,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3174,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3175,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3176,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3177,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3178,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3179,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3180,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3181,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3182,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3183,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3184,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3185,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3186,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3187,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3188,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3189,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3190,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3191,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3192,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3193,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3194,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3195,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3196,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3197,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3198,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3199,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3200,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3201,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3202,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3203,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3204,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3205,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3206,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3207,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3208,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3209,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3210,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3211,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3212,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3213,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3214,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3215,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3216,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3217,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3218,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3219,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3220,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3221,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3222,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3223,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3224,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3225,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3226,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3227,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3228,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3229,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3230,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3231,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3232,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3233,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3234,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3235,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3236,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3237,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3238,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3239,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3240,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3241,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3242,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3243,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3244,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3245,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3246,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3247,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3248,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3249,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3250,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3251,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3252,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3253,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3254,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3255,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3256,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3257,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3258,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3259,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3260,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3261,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3262,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3263,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3264,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3265,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3266,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3267,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3268,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3269,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3270,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3271,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3272,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3273,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3274,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3275,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3276,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3277,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3278,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3279,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3280,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3281,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3282,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3283,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3284,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3285,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3286,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3287,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3288,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3289,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3290,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3291,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3292,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3293,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3294,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3295,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3296,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3297,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3298,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3299,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3300,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3301,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3302,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3303,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3304,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3305,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3306,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3307,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3308,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3309,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3310,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3311,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3312,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3313,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3314,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3315,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3316,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3317,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3318,"column":0},"generated":{"line":3321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3319,"column":0},"generated":{"line":3322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3320,"column":0},"generated":{"line":3323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3321,"column":0},"generated":{"line":3324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3322,"column":0},"generated":{"line":3325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3323,"column":0},"generated":{"line":3326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3324,"column":0},"generated":{"line":3327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3325,"column":0},"generated":{"line":3328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3326,"column":0},"generated":{"line":3329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3327,"column":0},"generated":{"line":3330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3328,"column":0},"generated":{"line":3331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3329,"column":0},"generated":{"line":3332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3330,"column":0},"generated":{"line":3333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3331,"column":0},"generated":{"line":3334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3332,"column":0},"generated":{"line":3335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3333,"column":0},"generated":{"line":3336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3334,"column":0},"generated":{"line":3337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3335,"column":0},"generated":{"line":3338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3336,"column":0},"generated":{"line":3339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3337,"column":0},"generated":{"line":3340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3338,"column":0},"generated":{"line":3341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3339,"column":0},"generated":{"line":3342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3340,"column":0},"generated":{"line":3343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3341,"column":0},"generated":{"line":3344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3342,"column":0},"generated":{"line":3345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3343,"column":0},"generated":{"line":3346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3344,"column":0},"generated":{"line":3347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3345,"column":0},"generated":{"line":3348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3346,"column":0},"generated":{"line":3349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3347,"column":0},"generated":{"line":3350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3348,"column":0},"generated":{"line":3351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3349,"column":0},"generated":{"line":3352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3350,"column":0},"generated":{"line":3353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3351,"column":0},"generated":{"line":3354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3352,"column":0},"generated":{"line":3355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3353,"column":0},"generated":{"line":3356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3354,"column":0},"generated":{"line":3357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3355,"column":0},"generated":{"line":3358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3356,"column":0},"generated":{"line":3359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3357,"column":0},"generated":{"line":3360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3358,"column":0},"generated":{"line":3361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3359,"column":0},"generated":{"line":3362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3360,"column":0},"generated":{"line":3363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3361,"column":0},"generated":{"line":3364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3362,"column":0},"generated":{"line":3365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3363,"column":0},"generated":{"line":3366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3364,"column":0},"generated":{"line":3367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3365,"column":0},"generated":{"line":3368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3366,"column":0},"generated":{"line":3369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3367,"column":0},"generated":{"line":3370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3368,"column":0},"generated":{"line":3371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3369,"column":0},"generated":{"line":3372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3370,"column":0},"generated":{"line":3373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3371,"column":0},"generated":{"line":3374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3372,"column":0},"generated":{"line":3375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3373,"column":0},"generated":{"line":3376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3374,"column":0},"generated":{"line":3377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3375,"column":0},"generated":{"line":3378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3376,"column":0},"generated":{"line":3379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3377,"column":0},"generated":{"line":3380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3378,"column":0},"generated":{"line":3381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3379,"column":0},"generated":{"line":3382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3380,"column":0},"generated":{"line":3383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3381,"column":0},"generated":{"line":3384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3382,"column":0},"generated":{"line":3385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3383,"column":0},"generated":{"line":3386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3384,"column":0},"generated":{"line":3387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3385,"column":0},"generated":{"line":3388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3386,"column":0},"generated":{"line":3389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3387,"column":0},"generated":{"line":3390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3388,"column":0},"generated":{"line":3391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3389,"column":0},"generated":{"line":3392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3390,"column":0},"generated":{"line":3393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3391,"column":0},"generated":{"line":3394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3392,"column":0},"generated":{"line":3395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3393,"column":0},"generated":{"line":3396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3394,"column":0},"generated":{"line":3397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3395,"column":0},"generated":{"line":3398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3396,"column":0},"generated":{"line":3399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3397,"column":0},"generated":{"line":3400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3398,"column":0},"generated":{"line":3401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3399,"column":0},"generated":{"line":3402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3400,"column":0},"generated":{"line":3403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3401,"column":0},"generated":{"line":3404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3402,"column":0},"generated":{"line":3405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3403,"column":0},"generated":{"line":3406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3404,"column":0},"generated":{"line":3407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3405,"column":0},"generated":{"line":3408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3406,"column":0},"generated":{"line":3409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3407,"column":0},"generated":{"line":3410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3408,"column":0},"generated":{"line":3411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3409,"column":0},"generated":{"line":3412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3410,"column":0},"generated":{"line":3413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3411,"column":0},"generated":{"line":3414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3412,"column":0},"generated":{"line":3415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3413,"column":0},"generated":{"line":3416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3414,"column":0},"generated":{"line":3417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3415,"column":0},"generated":{"line":3418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3416,"column":0},"generated":{"line":3419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3417,"column":0},"generated":{"line":3420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3418,"column":0},"generated":{"line":3421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3419,"column":0},"generated":{"line":3422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3420,"column":0},"generated":{"line":3423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3421,"column":0},"generated":{"line":3424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3422,"column":0},"generated":{"line":3425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3423,"column":0},"generated":{"line":3426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3424,"column":0},"generated":{"line":3427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3425,"column":0},"generated":{"line":3428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3426,"column":0},"generated":{"line":3429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3427,"column":0},"generated":{"line":3430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3428,"column":0},"generated":{"line":3431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3429,"column":0},"generated":{"line":3432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3430,"column":0},"generated":{"line":3433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3431,"column":0},"generated":{"line":3434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3432,"column":0},"generated":{"line":3435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3433,"column":0},"generated":{"line":3436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3434,"column":0},"generated":{"line":3437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3435,"column":0},"generated":{"line":3438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3436,"column":0},"generated":{"line":3439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3437,"column":0},"generated":{"line":3440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3438,"column":0},"generated":{"line":3441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3439,"column":0},"generated":{"line":3442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3440,"column":0},"generated":{"line":3443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3441,"column":0},"generated":{"line":3444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3442,"column":0},"generated":{"line":3445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3443,"column":0},"generated":{"line":3446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3444,"column":0},"generated":{"line":3447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3445,"column":0},"generated":{"line":3448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3446,"column":0},"generated":{"line":3449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3447,"column":0},"generated":{"line":3450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3448,"column":0},"generated":{"line":3451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3449,"column":0},"generated":{"line":3452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3450,"column":0},"generated":{"line":3453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3451,"column":0},"generated":{"line":3454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3452,"column":0},"generated":{"line":3455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3453,"column":0},"generated":{"line":3456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3454,"column":0},"generated":{"line":3457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3455,"column":0},"generated":{"line":3458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3456,"column":0},"generated":{"line":3459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3457,"column":0},"generated":{"line":3460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3458,"column":0},"generated":{"line":3461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3459,"column":0},"generated":{"line":3462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3460,"column":0},"generated":{"line":3463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3461,"column":0},"generated":{"line":3464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3462,"column":0},"generated":{"line":3465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3463,"column":0},"generated":{"line":3466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3464,"column":0},"generated":{"line":3467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3465,"column":0},"generated":{"line":3468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3466,"column":0},"generated":{"line":3469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3467,"column":0},"generated":{"line":3470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3468,"column":0},"generated":{"line":3471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3469,"column":0},"generated":{"line":3472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3470,"column":0},"generated":{"line":3473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3471,"column":0},"generated":{"line":3474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3472,"column":0},"generated":{"line":3475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3473,"column":0},"generated":{"line":3476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3474,"column":0},"generated":{"line":3477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3475,"column":0},"generated":{"line":3478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3476,"column":0},"generated":{"line":3479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3477,"column":0},"generated":{"line":3480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3478,"column":0},"generated":{"line":3481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3479,"column":0},"generated":{"line":3482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3480,"column":0},"generated":{"line":3483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3481,"column":0},"generated":{"line":3484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3482,"column":0},"generated":{"line":3485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3483,"column":0},"generated":{"line":3486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3484,"column":0},"generated":{"line":3487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3485,"column":0},"generated":{"line":3488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3486,"column":0},"generated":{"line":3489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3487,"column":0},"generated":{"line":3490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3488,"column":0},"generated":{"line":3491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3489,"column":0},"generated":{"line":3492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3490,"column":0},"generated":{"line":3493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3491,"column":0},"generated":{"line":3494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3492,"column":0},"generated":{"line":3495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3493,"column":0},"generated":{"line":3496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3494,"column":0},"generated":{"line":3497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3495,"column":0},"generated":{"line":3498,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3496,"column":0},"generated":{"line":3499,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3497,"column":0},"generated":{"line":3500,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3498,"column":0},"generated":{"line":3501,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3499,"column":0},"generated":{"line":3502,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3500,"column":0},"generated":{"line":3503,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3501,"column":0},"generated":{"line":3504,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3502,"column":0},"generated":{"line":3505,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3503,"column":0},"generated":{"line":3506,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3504,"column":0},"generated":{"line":3507,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3505,"column":0},"generated":{"line":3508,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3506,"column":0},"generated":{"line":3509,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3507,"column":0},"generated":{"line":3510,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3508,"column":0},"generated":{"line":3511,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3509,"column":0},"generated":{"line":3512,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3510,"column":0},"generated":{"line":3513,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3511,"column":0},"generated":{"line":3514,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3512,"column":0},"generated":{"line":3515,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3513,"column":0},"generated":{"line":3516,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3514,"column":0},"generated":{"line":3517,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3515,"column":0},"generated":{"line":3518,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3516,"column":0},"generated":{"line":3519,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3517,"column":0},"generated":{"line":3520,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3518,"column":0},"generated":{"line":3521,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3519,"column":0},"generated":{"line":3522,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3520,"column":0},"generated":{"line":3523,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3521,"column":0},"generated":{"line":3524,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3522,"column":0},"generated":{"line":3525,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3523,"column":0},"generated":{"line":3526,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3524,"column":0},"generated":{"line":3527,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3525,"column":0},"generated":{"line":3528,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3526,"column":0},"generated":{"line":3529,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3527,"column":0},"generated":{"line":3530,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3528,"column":0},"generated":{"line":3531,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3529,"column":0},"generated":{"line":3532,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3530,"column":0},"generated":{"line":3533,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3531,"column":0},"generated":{"line":3534,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3532,"column":0},"generated":{"line":3535,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3533,"column":0},"generated":{"line":3536,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3534,"column":0},"generated":{"line":3537,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3535,"column":0},"generated":{"line":3538,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3536,"column":0},"generated":{"line":3539,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3537,"column":0},"generated":{"line":3540,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3538,"column":0},"generated":{"line":3541,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3539,"column":0},"generated":{"line":3542,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3540,"column":0},"generated":{"line":3543,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3541,"column":0},"generated":{"line":3544,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3542,"column":0},"generated":{"line":3545,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3543,"column":0},"generated":{"line":3546,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3544,"column":0},"generated":{"line":3547,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3545,"column":0},"generated":{"line":3548,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3546,"column":0},"generated":{"line":3549,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3547,"column":0},"generated":{"line":3550,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3548,"column":0},"generated":{"line":3551,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3549,"column":0},"generated":{"line":3552,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3550,"column":0},"generated":{"line":3553,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3551,"column":0},"generated":{"line":3554,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3552,"column":0},"generated":{"line":3555,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3553,"column":0},"generated":{"line":3556,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3554,"column":0},"generated":{"line":3557,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3555,"column":0},"generated":{"line":3558,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3556,"column":0},"generated":{"line":3559,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3557,"column":0},"generated":{"line":3560,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3558,"column":0},"generated":{"line":3561,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3559,"column":0},"generated":{"line":3562,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3560,"column":0},"generated":{"line":3563,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3561,"column":0},"generated":{"line":3564,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3562,"column":0},"generated":{"line":3565,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3563,"column":0},"generated":{"line":3566,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3564,"column":0},"generated":{"line":3567,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3565,"column":0},"generated":{"line":3568,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3566,"column":0},"generated":{"line":3569,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3567,"column":0},"generated":{"line":3570,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3568,"column":0},"generated":{"line":3571,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3569,"column":0},"generated":{"line":3572,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3570,"column":0},"generated":{"line":3573,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3571,"column":0},"generated":{"line":3574,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3572,"column":0},"generated":{"line":3575,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3573,"column":0},"generated":{"line":3576,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3574,"column":0},"generated":{"line":3577,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3575,"column":0},"generated":{"line":3578,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3576,"column":0},"generated":{"line":3579,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3577,"column":0},"generated":{"line":3580,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3578,"column":0},"generated":{"line":3581,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3579,"column":0},"generated":{"line":3582,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3580,"column":0},"generated":{"line":3583,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3581,"column":0},"generated":{"line":3584,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3582,"column":0},"generated":{"line":3585,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3583,"column":0},"generated":{"line":3586,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3584,"column":0},"generated":{"line":3587,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3585,"column":0},"generated":{"line":3588,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3586,"column":0},"generated":{"line":3589,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3587,"column":0},"generated":{"line":3590,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3588,"column":0},"generated":{"line":3591,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3589,"column":0},"generated":{"line":3592,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3590,"column":0},"generated":{"line":3593,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3591,"column":0},"generated":{"line":3594,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3592,"column":0},"generated":{"line":3595,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3593,"column":0},"generated":{"line":3596,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3594,"column":0},"generated":{"line":3597,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3595,"column":0},"generated":{"line":3598,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3596,"column":0},"generated":{"line":3599,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3597,"column":0},"generated":{"line":3600,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3598,"column":0},"generated":{"line":3601,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3599,"column":0},"generated":{"line":3602,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3600,"column":0},"generated":{"line":3603,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3601,"column":0},"generated":{"line":3604,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3602,"column":0},"generated":{"line":3605,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3603,"column":0},"generated":{"line":3606,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3604,"column":0},"generated":{"line":3607,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3605,"column":0},"generated":{"line":3608,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3606,"column":0},"generated":{"line":3609,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3607,"column":0},"generated":{"line":3610,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3608,"column":0},"generated":{"line":3611,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3609,"column":0},"generated":{"line":3612,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3610,"column":0},"generated":{"line":3613,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3611,"column":0},"generated":{"line":3614,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3612,"column":0},"generated":{"line":3615,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3613,"column":0},"generated":{"line":3616,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3614,"column":0},"generated":{"line":3617,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3615,"column":0},"generated":{"line":3618,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3616,"column":0},"generated":{"line":3619,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3617,"column":0},"generated":{"line":3620,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3618,"column":0},"generated":{"line":3621,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3619,"column":0},"generated":{"line":3622,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3620,"column":0},"generated":{"line":3623,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3621,"column":0},"generated":{"line":3624,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3622,"column":0},"generated":{"line":3625,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3623,"column":0},"generated":{"line":3626,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3624,"column":0},"generated":{"line":3627,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3625,"column":0},"generated":{"line":3628,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3626,"column":0},"generated":{"line":3629,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3627,"column":0},"generated":{"line":3630,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3628,"column":0},"generated":{"line":3631,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3629,"column":0},"generated":{"line":3632,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3630,"column":0},"generated":{"line":3633,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3631,"column":0},"generated":{"line":3634,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3632,"column":0},"generated":{"line":3635,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3633,"column":0},"generated":{"line":3636,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3634,"column":0},"generated":{"line":3637,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3635,"column":0},"generated":{"line":3638,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3636,"column":0},"generated":{"line":3639,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3637,"column":0},"generated":{"line":3640,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3638,"column":0},"generated":{"line":3641,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3639,"column":0},"generated":{"line":3642,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3640,"column":0},"generated":{"line":3643,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3641,"column":0},"generated":{"line":3644,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3642,"column":0},"generated":{"line":3645,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3643,"column":0},"generated":{"line":3646,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3644,"column":0},"generated":{"line":3647,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3645,"column":0},"generated":{"line":3648,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3646,"column":0},"generated":{"line":3649,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3647,"column":0},"generated":{"line":3650,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3648,"column":0},"generated":{"line":3651,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3649,"column":0},"generated":{"line":3652,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3650,"column":0},"generated":{"line":3653,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3651,"column":0},"generated":{"line":3654,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3652,"column":0},"generated":{"line":3655,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3653,"column":0},"generated":{"line":3656,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3654,"column":0},"generated":{"line":3657,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3655,"column":0},"generated":{"line":3658,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3656,"column":0},"generated":{"line":3659,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3657,"column":0},"generated":{"line":3660,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3658,"column":0},"generated":{"line":3661,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3659,"column":0},"generated":{"line":3662,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3660,"column":0},"generated":{"line":3663,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3661,"column":0},"generated":{"line":3664,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3662,"column":0},"generated":{"line":3665,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3663,"column":0},"generated":{"line":3666,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3664,"column":0},"generated":{"line":3667,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3665,"column":0},"generated":{"line":3668,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3666,"column":0},"generated":{"line":3669,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3667,"column":0},"generated":{"line":3670,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3668,"column":0},"generated":{"line":3671,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3669,"column":0},"generated":{"line":3672,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3670,"column":0},"generated":{"line":3673,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3671,"column":0},"generated":{"line":3674,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3672,"column":0},"generated":{"line":3675,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3673,"column":0},"generated":{"line":3676,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3674,"column":0},"generated":{"line":3677,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3675,"column":0},"generated":{"line":3678,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3676,"column":0},"generated":{"line":3679,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3677,"column":0},"generated":{"line":3680,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3678,"column":0},"generated":{"line":3681,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3679,"column":0},"generated":{"line":3682,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3680,"column":0},"generated":{"line":3683,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3681,"column":0},"generated":{"line":3684,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3682,"column":0},"generated":{"line":3685,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3683,"column":0},"generated":{"line":3686,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3684,"column":0},"generated":{"line":3687,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3685,"column":0},"generated":{"line":3688,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3686,"column":0},"generated":{"line":3689,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3687,"column":0},"generated":{"line":3690,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3688,"column":0},"generated":{"line":3691,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3689,"column":0},"generated":{"line":3692,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3690,"column":0},"generated":{"line":3693,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3691,"column":0},"generated":{"line":3694,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3692,"column":0},"generated":{"line":3695,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3693,"column":0},"generated":{"line":3696,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3694,"column":0},"generated":{"line":3697,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3695,"column":0},"generated":{"line":3698,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3696,"column":0},"generated":{"line":3699,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3697,"column":0},"generated":{"line":3700,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3698,"column":0},"generated":{"line":3701,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3699,"column":0},"generated":{"line":3702,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3700,"column":0},"generated":{"line":3703,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3701,"column":0},"generated":{"line":3704,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3702,"column":0},"generated":{"line":3705,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3703,"column":0},"generated":{"line":3706,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3704,"column":0},"generated":{"line":3707,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3705,"column":0},"generated":{"line":3708,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3706,"column":0},"generated":{"line":3709,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3707,"column":0},"generated":{"line":3710,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3708,"column":0},"generated":{"line":3711,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3709,"column":0},"generated":{"line":3712,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3710,"column":0},"generated":{"line":3713,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3711,"column":0},"generated":{"line":3714,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3712,"column":0},"generated":{"line":3715,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3713,"column":0},"generated":{"line":3716,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3714,"column":0},"generated":{"line":3717,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3715,"column":0},"generated":{"line":3718,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3716,"column":0},"generated":{"line":3719,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3717,"column":0},"generated":{"line":3720,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3718,"column":0},"generated":{"line":3721,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3719,"column":0},"generated":{"line":3722,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3720,"column":0},"generated":{"line":3723,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3721,"column":0},"generated":{"line":3724,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3722,"column":0},"generated":{"line":3725,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3723,"column":0},"generated":{"line":3726,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3724,"column":0},"generated":{"line":3727,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3725,"column":0},"generated":{"line":3728,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3726,"column":0},"generated":{"line":3729,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3727,"column":0},"generated":{"line":3730,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3728,"column":0},"generated":{"line":3731,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3729,"column":0},"generated":{"line":3732,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3730,"column":0},"generated":{"line":3733,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3731,"column":0},"generated":{"line":3734,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3732,"column":0},"generated":{"line":3735,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3733,"column":0},"generated":{"line":3736,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3734,"column":0},"generated":{"line":3737,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3735,"column":0},"generated":{"line":3738,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3736,"column":0},"generated":{"line":3739,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3737,"column":0},"generated":{"line":3740,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3738,"column":0},"generated":{"line":3741,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3739,"column":0},"generated":{"line":3742,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3740,"column":0},"generated":{"line":3743,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3741,"column":0},"generated":{"line":3744,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3742,"column":0},"generated":{"line":3745,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3743,"column":0},"generated":{"line":3746,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3744,"column":0},"generated":{"line":3747,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3745,"column":0},"generated":{"line":3748,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3746,"column":0},"generated":{"line":3749,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3747,"column":0},"generated":{"line":3750,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3748,"column":0},"generated":{"line":3751,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3749,"column":0},"generated":{"line":3752,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3750,"column":0},"generated":{"line":3753,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3751,"column":0},"generated":{"line":3754,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3752,"column":0},"generated":{"line":3755,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3753,"column":0},"generated":{"line":3756,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3754,"column":0},"generated":{"line":3757,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3755,"column":0},"generated":{"line":3758,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3756,"column":0},"generated":{"line":3759,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3757,"column":0},"generated":{"line":3760,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3758,"column":0},"generated":{"line":3761,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3759,"column":0},"generated":{"line":3762,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3760,"column":0},"generated":{"line":3763,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3761,"column":0},"generated":{"line":3764,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3762,"column":0},"generated":{"line":3765,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3763,"column":0},"generated":{"line":3766,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3764,"column":0},"generated":{"line":3767,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3765,"column":0},"generated":{"line":3768,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3766,"column":0},"generated":{"line":3769,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3767,"column":0},"generated":{"line":3770,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3768,"column":0},"generated":{"line":3771,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3769,"column":0},"generated":{"line":3772,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3770,"column":0},"generated":{"line":3773,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3771,"column":0},"generated":{"line":3774,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3772,"column":0},"generated":{"line":3775,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3773,"column":0},"generated":{"line":3776,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3774,"column":0},"generated":{"line":3777,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3775,"column":0},"generated":{"line":3778,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3776,"column":0},"generated":{"line":3779,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3777,"column":0},"generated":{"line":3780,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3778,"column":0},"generated":{"line":3781,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3779,"column":0},"generated":{"line":3782,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3780,"column":0},"generated":{"line":3783,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3781,"column":0},"generated":{"line":3784,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3782,"column":0},"generated":{"line":3785,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3783,"column":0},"generated":{"line":3786,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3784,"column":0},"generated":{"line":3787,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3785,"column":0},"generated":{"line":3788,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3786,"column":0},"generated":{"line":3789,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3787,"column":0},"generated":{"line":3790,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3788,"column":0},"generated":{"line":3791,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3789,"column":0},"generated":{"line":3792,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3790,"column":0},"generated":{"line":3793,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3791,"column":0},"generated":{"line":3794,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3792,"column":0},"generated":{"line":3795,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3793,"column":0},"generated":{"line":3796,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3794,"column":0},"generated":{"line":3797,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3795,"column":0},"generated":{"line":3798,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3796,"column":0},"generated":{"line":3799,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3797,"column":0},"generated":{"line":3800,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3798,"column":0},"generated":{"line":3801,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3799,"column":0},"generated":{"line":3802,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3800,"column":0},"generated":{"line":3803,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3801,"column":0},"generated":{"line":3804,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3802,"column":0},"generated":{"line":3805,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3803,"column":0},"generated":{"line":3806,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3804,"column":0},"generated":{"line":3807,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3805,"column":0},"generated":{"line":3808,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3806,"column":0},"generated":{"line":3809,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3807,"column":0},"generated":{"line":3810,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3808,"column":0},"generated":{"line":3811,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3809,"column":0},"generated":{"line":3812,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3810,"column":0},"generated":{"line":3813,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3811,"column":0},"generated":{"line":3814,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3812,"column":0},"generated":{"line":3815,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3813,"column":0},"generated":{"line":3816,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3814,"column":0},"generated":{"line":3817,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3815,"column":0},"generated":{"line":3818,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3816,"column":0},"generated":{"line":3819,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3817,"column":0},"generated":{"line":3820,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3818,"column":0},"generated":{"line":3821,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3819,"column":0},"generated":{"line":3822,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3820,"column":0},"generated":{"line":3823,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3821,"column":0},"generated":{"line":3824,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3822,"column":0},"generated":{"line":3825,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3823,"column":0},"generated":{"line":3826,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3824,"column":0},"generated":{"line":3827,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3825,"column":0},"generated":{"line":3828,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3826,"column":0},"generated":{"line":3829,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3827,"column":0},"generated":{"line":3830,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3828,"column":0},"generated":{"line":3831,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3829,"column":0},"generated":{"line":3832,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3830,"column":0},"generated":{"line":3833,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3831,"column":0},"generated":{"line":3834,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3832,"column":0},"generated":{"line":3835,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3833,"column":0},"generated":{"line":3836,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3834,"column":0},"generated":{"line":3837,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3835,"column":0},"generated":{"line":3838,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3836,"column":0},"generated":{"line":3839,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3837,"column":0},"generated":{"line":3840,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3838,"column":0},"generated":{"line":3841,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3839,"column":0},"generated":{"line":3842,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3840,"column":0},"generated":{"line":3843,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3841,"column":0},"generated":{"line":3844,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3842,"column":0},"generated":{"line":3845,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3843,"column":0},"generated":{"line":3846,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3844,"column":0},"generated":{"line":3847,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3845,"column":0},"generated":{"line":3848,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3846,"column":0},"generated":{"line":3849,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3847,"column":0},"generated":{"line":3850,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3848,"column":0},"generated":{"line":3851,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3849,"column":0},"generated":{"line":3852,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3850,"column":0},"generated":{"line":3853,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3851,"column":0},"generated":{"line":3854,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3852,"column":0},"generated":{"line":3855,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3853,"column":0},"generated":{"line":3856,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3854,"column":0},"generated":{"line":3857,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3855,"column":0},"generated":{"line":3858,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3856,"column":0},"generated":{"line":3859,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3857,"column":0},"generated":{"line":3860,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3858,"column":0},"generated":{"line":3861,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3859,"column":0},"generated":{"line":3862,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3860,"column":0},"generated":{"line":3863,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3861,"column":0},"generated":{"line":3864,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3862,"column":0},"generated":{"line":3865,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3863,"column":0},"generated":{"line":3866,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3864,"column":0},"generated":{"line":3867,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3865,"column":0},"generated":{"line":3868,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3866,"column":0},"generated":{"line":3869,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3867,"column":0},"generated":{"line":3870,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3868,"column":0},"generated":{"line":3871,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3869,"column":0},"generated":{"line":3872,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3870,"column":0},"generated":{"line":3873,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3871,"column":0},"generated":{"line":3874,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3872,"column":0},"generated":{"line":3875,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3873,"column":0},"generated":{"line":3876,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3874,"column":0},"generated":{"line":3877,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3875,"column":0},"generated":{"line":3878,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3876,"column":0},"generated":{"line":3879,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3877,"column":0},"generated":{"line":3880,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3878,"column":0},"generated":{"line":3881,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3879,"column":0},"generated":{"line":3882,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3880,"column":0},"generated":{"line":3883,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3881,"column":0},"generated":{"line":3884,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3882,"column":0},"generated":{"line":3885,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3883,"column":0},"generated":{"line":3886,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3884,"column":0},"generated":{"line":3887,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3885,"column":0},"generated":{"line":3888,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3886,"column":0},"generated":{"line":3889,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3887,"column":0},"generated":{"line":3890,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3888,"column":0},"generated":{"line":3891,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3889,"column":0},"generated":{"line":3892,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3890,"column":0},"generated":{"line":3893,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3891,"column":0},"generated":{"line":3894,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3892,"column":0},"generated":{"line":3895,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3893,"column":0},"generated":{"line":3896,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3894,"column":0},"generated":{"line":3897,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3895,"column":0},"generated":{"line":3898,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3896,"column":0},"generated":{"line":3899,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3897,"column":0},"generated":{"line":3900,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3898,"column":0},"generated":{"line":3901,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3899,"column":0},"generated":{"line":3902,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3900,"column":0},"generated":{"line":3903,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3901,"column":0},"generated":{"line":3904,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3902,"column":0},"generated":{"line":3905,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3903,"column":0},"generated":{"line":3906,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3904,"column":0},"generated":{"line":3907,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3905,"column":0},"generated":{"line":3908,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3906,"column":0},"generated":{"line":3909,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3907,"column":0},"generated":{"line":3910,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3908,"column":0},"generated":{"line":3911,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3909,"column":0},"generated":{"line":3912,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3910,"column":0},"generated":{"line":3913,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3911,"column":0},"generated":{"line":3914,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3912,"column":0},"generated":{"line":3915,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3913,"column":0},"generated":{"line":3916,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3914,"column":0},"generated":{"line":3917,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3915,"column":0},"generated":{"line":3918,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3916,"column":0},"generated":{"line":3919,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3917,"column":0},"generated":{"line":3920,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3918,"column":0},"generated":{"line":3921,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3919,"column":0},"generated":{"line":3922,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3920,"column":0},"generated":{"line":3923,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3921,"column":0},"generated":{"line":3924,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3922,"column":0},"generated":{"line":3925,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3923,"column":0},"generated":{"line":3926,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3924,"column":0},"generated":{"line":3927,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3925,"column":0},"generated":{"line":3928,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3926,"column":0},"generated":{"line":3929,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3927,"column":0},"generated":{"line":3930,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3928,"column":0},"generated":{"line":3931,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3929,"column":0},"generated":{"line":3932,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3930,"column":0},"generated":{"line":3933,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3931,"column":0},"generated":{"line":3934,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3932,"column":0},"generated":{"line":3935,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3933,"column":0},"generated":{"line":3936,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3934,"column":0},"generated":{"line":3937,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3935,"column":0},"generated":{"line":3938,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3936,"column":0},"generated":{"line":3939,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3937,"column":0},"generated":{"line":3940,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3938,"column":0},"generated":{"line":3941,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3939,"column":0},"generated":{"line":3942,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3940,"column":0},"generated":{"line":3943,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3941,"column":0},"generated":{"line":3944,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3942,"column":0},"generated":{"line":3945,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3943,"column":0},"generated":{"line":3946,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3944,"column":0},"generated":{"line":3947,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3945,"column":0},"generated":{"line":3948,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3946,"column":0},"generated":{"line":3949,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3947,"column":0},"generated":{"line":3950,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3948,"column":0},"generated":{"line":3951,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3949,"column":0},"generated":{"line":3952,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3950,"column":0},"generated":{"line":3953,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3951,"column":0},"generated":{"line":3954,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3952,"column":0},"generated":{"line":3955,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3953,"column":0},"generated":{"line":3956,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3954,"column":0},"generated":{"line":3957,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3955,"column":0},"generated":{"line":3958,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3956,"column":0},"generated":{"line":3959,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3957,"column":0},"generated":{"line":3960,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3958,"column":0},"generated":{"line":3961,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3959,"column":0},"generated":{"line":3962,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3960,"column":0},"generated":{"line":3963,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3961,"column":0},"generated":{"line":3964,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3962,"column":0},"generated":{"line":3965,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3963,"column":0},"generated":{"line":3966,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3964,"column":0},"generated":{"line":3967,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3965,"column":0},"generated":{"line":3968,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3966,"column":0},"generated":{"line":3969,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3967,"column":0},"generated":{"line":3970,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3968,"column":0},"generated":{"line":3971,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3969,"column":0},"generated":{"line":3972,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3970,"column":0},"generated":{"line":3973,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3971,"column":0},"generated":{"line":3974,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3972,"column":0},"generated":{"line":3975,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3973,"column":0},"generated":{"line":3976,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3974,"column":0},"generated":{"line":3977,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3975,"column":0},"generated":{"line":3978,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3976,"column":0},"generated":{"line":3979,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3977,"column":0},"generated":{"line":3980,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3978,"column":0},"generated":{"line":3981,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3979,"column":0},"generated":{"line":3982,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3980,"column":0},"generated":{"line":3983,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3981,"column":0},"generated":{"line":3984,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3982,"column":0},"generated":{"line":3985,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3983,"column":0},"generated":{"line":3986,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3984,"column":0},"generated":{"line":3987,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3985,"column":0},"generated":{"line":3988,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3986,"column":0},"generated":{"line":3989,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3987,"column":0},"generated":{"line":3990,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3988,"column":0},"generated":{"line":3991,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3989,"column":0},"generated":{"line":3992,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3990,"column":0},"generated":{"line":3993,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3991,"column":0},"generated":{"line":3994,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3992,"column":0},"generated":{"line":3995,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3993,"column":0},"generated":{"line":3996,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3994,"column":0},"generated":{"line":3997,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3995,"column":0},"generated":{"line":3998,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3996,"column":0},"generated":{"line":3999,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3997,"column":0},"generated":{"line":4000,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3998,"column":0},"generated":{"line":4001,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":3999,"column":0},"generated":{"line":4002,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4000,"column":0},"generated":{"line":4003,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4001,"column":0},"generated":{"line":4004,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4002,"column":0},"generated":{"line":4005,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4003,"column":0},"generated":{"line":4006,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4004,"column":0},"generated":{"line":4007,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4005,"column":0},"generated":{"line":4008,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4006,"column":0},"generated":{"line":4009,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4007,"column":0},"generated":{"line":4010,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4008,"column":0},"generated":{"line":4011,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4009,"column":0},"generated":{"line":4012,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4010,"column":0},"generated":{"line":4013,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4011,"column":0},"generated":{"line":4014,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4012,"column":0},"generated":{"line":4015,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4013,"column":0},"generated":{"line":4016,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4014,"column":0},"generated":{"line":4017,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4015,"column":0},"generated":{"line":4018,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4016,"column":0},"generated":{"line":4019,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4017,"column":0},"generated":{"line":4020,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4018,"column":0},"generated":{"line":4021,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4019,"column":0},"generated":{"line":4022,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4020,"column":0},"generated":{"line":4023,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4021,"column":0},"generated":{"line":4024,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4022,"column":0},"generated":{"line":4025,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4023,"column":0},"generated":{"line":4026,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4024,"column":0},"generated":{"line":4027,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4025,"column":0},"generated":{"line":4028,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4026,"column":0},"generated":{"line":4029,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4027,"column":0},"generated":{"line":4030,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4028,"column":0},"generated":{"line":4031,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4029,"column":0},"generated":{"line":4032,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4030,"column":0},"generated":{"line":4033,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4031,"column":0},"generated":{"line":4034,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4032,"column":0},"generated":{"line":4035,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4033,"column":0},"generated":{"line":4036,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4034,"column":0},"generated":{"line":4037,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4035,"column":0},"generated":{"line":4038,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4036,"column":0},"generated":{"line":4039,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4037,"column":0},"generated":{"line":4040,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4038,"column":0},"generated":{"line":4041,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4039,"column":0},"generated":{"line":4042,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4040,"column":0},"generated":{"line":4043,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4041,"column":0},"generated":{"line":4044,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4042,"column":0},"generated":{"line":4045,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4043,"column":0},"generated":{"line":4046,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4044,"column":0},"generated":{"line":4047,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4045,"column":0},"generated":{"line":4048,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4046,"column":0},"generated":{"line":4049,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4047,"column":0},"generated":{"line":4050,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4048,"column":0},"generated":{"line":4051,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4049,"column":0},"generated":{"line":4052,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4050,"column":0},"generated":{"line":4053,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4051,"column":0},"generated":{"line":4054,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4052,"column":0},"generated":{"line":4055,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4053,"column":0},"generated":{"line":4056,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4054,"column":0},"generated":{"line":4057,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4055,"column":0},"generated":{"line":4058,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4056,"column":0},"generated":{"line":4059,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4057,"column":0},"generated":{"line":4060,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4058,"column":0},"generated":{"line":4061,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4059,"column":0},"generated":{"line":4062,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4060,"column":0},"generated":{"line":4063,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4061,"column":0},"generated":{"line":4064,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4062,"column":0},"generated":{"line":4065,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4063,"column":0},"generated":{"line":4066,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4064,"column":0},"generated":{"line":4067,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4065,"column":0},"generated":{"line":4068,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4066,"column":0},"generated":{"line":4069,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4067,"column":0},"generated":{"line":4070,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4068,"column":0},"generated":{"line":4071,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4069,"column":0},"generated":{"line":4072,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4070,"column":0},"generated":{"line":4073,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4071,"column":0},"generated":{"line":4074,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4072,"column":0},"generated":{"line":4075,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4073,"column":0},"generated":{"line":4076,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4074,"column":0},"generated":{"line":4077,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4075,"column":0},"generated":{"line":4078,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4076,"column":0},"generated":{"line":4079,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4077,"column":0},"generated":{"line":4080,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4078,"column":0},"generated":{"line":4081,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4079,"column":0},"generated":{"line":4082,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4080,"column":0},"generated":{"line":4083,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4081,"column":0},"generated":{"line":4084,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4082,"column":0},"generated":{"line":4085,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4083,"column":0},"generated":{"line":4086,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4084,"column":0},"generated":{"line":4087,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4085,"column":0},"generated":{"line":4088,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4086,"column":0},"generated":{"line":4089,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4087,"column":0},"generated":{"line":4090,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4088,"column":0},"generated":{"line":4091,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4089,"column":0},"generated":{"line":4092,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4090,"column":0},"generated":{"line":4093,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4091,"column":0},"generated":{"line":4094,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4092,"column":0},"generated":{"line":4095,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4093,"column":0},"generated":{"line":4096,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4094,"column":0},"generated":{"line":4097,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4095,"column":0},"generated":{"line":4098,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4096,"column":0},"generated":{"line":4099,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4097,"column":0},"generated":{"line":4100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4098,"column":0},"generated":{"line":4101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4099,"column":0},"generated":{"line":4102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4100,"column":0},"generated":{"line":4103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4101,"column":0},"generated":{"line":4104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4102,"column":0},"generated":{"line":4105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4103,"column":0},"generated":{"line":4106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4104,"column":0},"generated":{"line":4107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4105,"column":0},"generated":{"line":4108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4106,"column":0},"generated":{"line":4109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4107,"column":0},"generated":{"line":4110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4108,"column":0},"generated":{"line":4111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4109,"column":0},"generated":{"line":4112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4110,"column":0},"generated":{"line":4113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4111,"column":0},"generated":{"line":4114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4112,"column":0},"generated":{"line":4115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4113,"column":0},"generated":{"line":4116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4114,"column":0},"generated":{"line":4117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4115,"column":0},"generated":{"line":4118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4116,"column":0},"generated":{"line":4119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4117,"column":0},"generated":{"line":4120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4118,"column":0},"generated":{"line":4121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4119,"column":0},"generated":{"line":4122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4120,"column":0},"generated":{"line":4123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4121,"column":0},"generated":{"line":4124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4122,"column":0},"generated":{"line":4125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4123,"column":0},"generated":{"line":4126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4124,"column":0},"generated":{"line":4127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4125,"column":0},"generated":{"line":4128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4126,"column":0},"generated":{"line":4129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4127,"column":0},"generated":{"line":4130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4128,"column":0},"generated":{"line":4131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4129,"column":0},"generated":{"line":4132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4130,"column":0},"generated":{"line":4133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4131,"column":0},"generated":{"line":4134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4132,"column":0},"generated":{"line":4135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4133,"column":0},"generated":{"line":4136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4134,"column":0},"generated":{"line":4137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4135,"column":0},"generated":{"line":4138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4136,"column":0},"generated":{"line":4139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4137,"column":0},"generated":{"line":4140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4138,"column":0},"generated":{"line":4141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4139,"column":0},"generated":{"line":4142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4140,"column":0},"generated":{"line":4143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4141,"column":0},"generated":{"line":4144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4142,"column":0},"generated":{"line":4145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4143,"column":0},"generated":{"line":4146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4144,"column":0},"generated":{"line":4147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4145,"column":0},"generated":{"line":4148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4146,"column":0},"generated":{"line":4149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4147,"column":0},"generated":{"line":4150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4148,"column":0},"generated":{"line":4151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4149,"column":0},"generated":{"line":4152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4150,"column":0},"generated":{"line":4153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4151,"column":0},"generated":{"line":4154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4152,"column":0},"generated":{"line":4155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4153,"column":0},"generated":{"line":4156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4154,"column":0},"generated":{"line":4157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4155,"column":0},"generated":{"line":4158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4156,"column":0},"generated":{"line":4159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4157,"column":0},"generated":{"line":4160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4158,"column":0},"generated":{"line":4161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4159,"column":0},"generated":{"line":4162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4160,"column":0},"generated":{"line":4163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4161,"column":0},"generated":{"line":4164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4162,"column":0},"generated":{"line":4165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4163,"column":0},"generated":{"line":4166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4164,"column":0},"generated":{"line":4167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4165,"column":0},"generated":{"line":4168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4166,"column":0},"generated":{"line":4169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4167,"column":0},"generated":{"line":4170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4168,"column":0},"generated":{"line":4171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4169,"column":0},"generated":{"line":4172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4170,"column":0},"generated":{"line":4173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4171,"column":0},"generated":{"line":4174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4172,"column":0},"generated":{"line":4175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4173,"column":0},"generated":{"line":4176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4174,"column":0},"generated":{"line":4177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4175,"column":0},"generated":{"line":4178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4176,"column":0},"generated":{"line":4179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4177,"column":0},"generated":{"line":4180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4178,"column":0},"generated":{"line":4181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4179,"column":0},"generated":{"line":4182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4180,"column":0},"generated":{"line":4183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4181,"column":0},"generated":{"line":4184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4182,"column":0},"generated":{"line":4185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4183,"column":0},"generated":{"line":4186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4184,"column":0},"generated":{"line":4187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4185,"column":0},"generated":{"line":4188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4186,"column":0},"generated":{"line":4189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4187,"column":0},"generated":{"line":4190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4188,"column":0},"generated":{"line":4191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4189,"column":0},"generated":{"line":4192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4190,"column":0},"generated":{"line":4193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4191,"column":0},"generated":{"line":4194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4192,"column":0},"generated":{"line":4195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4193,"column":0},"generated":{"line":4196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4194,"column":0},"generated":{"line":4197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4195,"column":0},"generated":{"line":4198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4196,"column":0},"generated":{"line":4199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4197,"column":0},"generated":{"line":4200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4198,"column":0},"generated":{"line":4201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4199,"column":0},"generated":{"line":4202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4200,"column":0},"generated":{"line":4203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4201,"column":0},"generated":{"line":4204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4202,"column":0},"generated":{"line":4205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4203,"column":0},"generated":{"line":4206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4204,"column":0},"generated":{"line":4207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4205,"column":0},"generated":{"line":4208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4206,"column":0},"generated":{"line":4209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4207,"column":0},"generated":{"line":4210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4208,"column":0},"generated":{"line":4211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4209,"column":0},"generated":{"line":4212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4210,"column":0},"generated":{"line":4213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4211,"column":0},"generated":{"line":4214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4212,"column":0},"generated":{"line":4215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4213,"column":0},"generated":{"line":4216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4214,"column":0},"generated":{"line":4217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4215,"column":0},"generated":{"line":4218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4216,"column":0},"generated":{"line":4219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4217,"column":0},"generated":{"line":4220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4218,"column":0},"generated":{"line":4221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4219,"column":0},"generated":{"line":4222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4220,"column":0},"generated":{"line":4223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4221,"column":0},"generated":{"line":4224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4222,"column":0},"generated":{"line":4225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4223,"column":0},"generated":{"line":4226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4224,"column":0},"generated":{"line":4227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4225,"column":0},"generated":{"line":4228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4226,"column":0},"generated":{"line":4229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4227,"column":0},"generated":{"line":4230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4228,"column":0},"generated":{"line":4231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4229,"column":0},"generated":{"line":4232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4230,"column":0},"generated":{"line":4233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4231,"column":0},"generated":{"line":4234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4232,"column":0},"generated":{"line":4235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4233,"column":0},"generated":{"line":4236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4234,"column":0},"generated":{"line":4237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4235,"column":0},"generated":{"line":4238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4236,"column":0},"generated":{"line":4239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4237,"column":0},"generated":{"line":4240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4238,"column":0},"generated":{"line":4241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4239,"column":0},"generated":{"line":4242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4240,"column":0},"generated":{"line":4243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4241,"column":0},"generated":{"line":4244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4242,"column":0},"generated":{"line":4245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4243,"column":0},"generated":{"line":4246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4244,"column":0},"generated":{"line":4247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4245,"column":0},"generated":{"line":4248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4246,"column":0},"generated":{"line":4249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4247,"column":0},"generated":{"line":4250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4248,"column":0},"generated":{"line":4251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4249,"column":0},"generated":{"line":4252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4250,"column":0},"generated":{"line":4253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4251,"column":0},"generated":{"line":4254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4252,"column":0},"generated":{"line":4255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4253,"column":0},"generated":{"line":4256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4254,"column":0},"generated":{"line":4257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4255,"column":0},"generated":{"line":4258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4256,"column":0},"generated":{"line":4259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4257,"column":0},"generated":{"line":4260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4258,"column":0},"generated":{"line":4261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4259,"column":0},"generated":{"line":4262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4260,"column":0},"generated":{"line":4263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4261,"column":0},"generated":{"line":4264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4262,"column":0},"generated":{"line":4265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4263,"column":0},"generated":{"line":4266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4264,"column":0},"generated":{"line":4267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4265,"column":0},"generated":{"line":4268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4266,"column":0},"generated":{"line":4269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4267,"column":0},"generated":{"line":4270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4268,"column":0},"generated":{"line":4271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4269,"column":0},"generated":{"line":4272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4270,"column":0},"generated":{"line":4273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4271,"column":0},"generated":{"line":4274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4272,"column":0},"generated":{"line":4275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4273,"column":0},"generated":{"line":4276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4274,"column":0},"generated":{"line":4277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4275,"column":0},"generated":{"line":4278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4276,"column":0},"generated":{"line":4279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4277,"column":0},"generated":{"line":4280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4278,"column":0},"generated":{"line":4281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4279,"column":0},"generated":{"line":4282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4280,"column":0},"generated":{"line":4283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4281,"column":0},"generated":{"line":4284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4282,"column":0},"generated":{"line":4285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4283,"column":0},"generated":{"line":4286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4284,"column":0},"generated":{"line":4287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4285,"column":0},"generated":{"line":4288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4286,"column":0},"generated":{"line":4289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4287,"column":0},"generated":{"line":4290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4288,"column":0},"generated":{"line":4291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4289,"column":0},"generated":{"line":4292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4290,"column":0},"generated":{"line":4293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4291,"column":0},"generated":{"line":4294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4292,"column":0},"generated":{"line":4295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4293,"column":0},"generated":{"line":4296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4294,"column":0},"generated":{"line":4297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4295,"column":0},"generated":{"line":4298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4296,"column":0},"generated":{"line":4299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4297,"column":0},"generated":{"line":4300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4298,"column":0},"generated":{"line":4301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4299,"column":0},"generated":{"line":4302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4300,"column":0},"generated":{"line":4303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4301,"column":0},"generated":{"line":4304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4302,"column":0},"generated":{"line":4305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4303,"column":0},"generated":{"line":4306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4304,"column":0},"generated":{"line":4307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4305,"column":0},"generated":{"line":4308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4306,"column":0},"generated":{"line":4309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4307,"column":0},"generated":{"line":4310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4308,"column":0},"generated":{"line":4311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4309,"column":0},"generated":{"line":4312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4310,"column":0},"generated":{"line":4313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4311,"column":0},"generated":{"line":4314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4312,"column":0},"generated":{"line":4315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4313,"column":0},"generated":{"line":4316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4314,"column":0},"generated":{"line":4317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4315,"column":0},"generated":{"line":4318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4316,"column":0},"generated":{"line":4319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4317,"column":0},"generated":{"line":4320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4318,"column":0},"generated":{"line":4321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4319,"column":0},"generated":{"line":4322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4320,"column":0},"generated":{"line":4323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4321,"column":0},"generated":{"line":4324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4322,"column":0},"generated":{"line":4325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4323,"column":0},"generated":{"line":4326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4324,"column":0},"generated":{"line":4327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4325,"column":0},"generated":{"line":4328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4326,"column":0},"generated":{"line":4329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4327,"column":0},"generated":{"line":4330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4328,"column":0},"generated":{"line":4331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4329,"column":0},"generated":{"line":4332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4330,"column":0},"generated":{"line":4333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4331,"column":0},"generated":{"line":4334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4332,"column":0},"generated":{"line":4335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4333,"column":0},"generated":{"line":4336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4334,"column":0},"generated":{"line":4337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4335,"column":0},"generated":{"line":4338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4336,"column":0},"generated":{"line":4339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4337,"column":0},"generated":{"line":4340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4338,"column":0},"generated":{"line":4341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4339,"column":0},"generated":{"line":4342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4340,"column":0},"generated":{"line":4343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4341,"column":0},"generated":{"line":4344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4342,"column":0},"generated":{"line":4345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4343,"column":0},"generated":{"line":4346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4344,"column":0},"generated":{"line":4347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4345,"column":0},"generated":{"line":4348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4346,"column":0},"generated":{"line":4349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4347,"column":0},"generated":{"line":4350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4348,"column":0},"generated":{"line":4351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4349,"column":0},"generated":{"line":4352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4350,"column":0},"generated":{"line":4353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4351,"column":0},"generated":{"line":4354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4352,"column":0},"generated":{"line":4355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4353,"column":0},"generated":{"line":4356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4354,"column":0},"generated":{"line":4357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4355,"column":0},"generated":{"line":4358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4356,"column":0},"generated":{"line":4359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4357,"column":0},"generated":{"line":4360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4358,"column":0},"generated":{"line":4361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4359,"column":0},"generated":{"line":4362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4360,"column":0},"generated":{"line":4363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4361,"column":0},"generated":{"line":4364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4362,"column":0},"generated":{"line":4365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4363,"column":0},"generated":{"line":4366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4364,"column":0},"generated":{"line":4367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4365,"column":0},"generated":{"line":4368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4366,"column":0},"generated":{"line":4369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4367,"column":0},"generated":{"line":4370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4368,"column":0},"generated":{"line":4371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4369,"column":0},"generated":{"line":4372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4370,"column":0},"generated":{"line":4373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4371,"column":0},"generated":{"line":4374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4372,"column":0},"generated":{"line":4375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4373,"column":0},"generated":{"line":4376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4374,"column":0},"generated":{"line":4377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4375,"column":0},"generated":{"line":4378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4376,"column":0},"generated":{"line":4379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4377,"column":0},"generated":{"line":4380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4378,"column":0},"generated":{"line":4381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4379,"column":0},"generated":{"line":4382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4380,"column":0},"generated":{"line":4383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4381,"column":0},"generated":{"line":4384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4382,"column":0},"generated":{"line":4385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4383,"column":0},"generated":{"line":4386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4384,"column":0},"generated":{"line":4387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4385,"column":0},"generated":{"line":4388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4386,"column":0},"generated":{"line":4389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4387,"column":0},"generated":{"line":4390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4388,"column":0},"generated":{"line":4391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4389,"column":0},"generated":{"line":4392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4390,"column":0},"generated":{"line":4393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4391,"column":0},"generated":{"line":4394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4392,"column":0},"generated":{"line":4395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4393,"column":0},"generated":{"line":4396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4394,"column":0},"generated":{"line":4397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4395,"column":0},"generated":{"line":4398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4396,"column":0},"generated":{"line":4399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4397,"column":0},"generated":{"line":4400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4398,"column":0},"generated":{"line":4401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4399,"column":0},"generated":{"line":4402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4400,"column":0},"generated":{"line":4403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4401,"column":0},"generated":{"line":4404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4402,"column":0},"generated":{"line":4405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4403,"column":0},"generated":{"line":4406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4404,"column":0},"generated":{"line":4407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4405,"column":0},"generated":{"line":4408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4406,"column":0},"generated":{"line":4409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4407,"column":0},"generated":{"line":4410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4408,"column":0},"generated":{"line":4411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4409,"column":0},"generated":{"line":4412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4410,"column":0},"generated":{"line":4413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4411,"column":0},"generated":{"line":4414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4412,"column":0},"generated":{"line":4415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4413,"column":0},"generated":{"line":4416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4414,"column":0},"generated":{"line":4417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4415,"column":0},"generated":{"line":4418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4416,"column":0},"generated":{"line":4419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4417,"column":0},"generated":{"line":4420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4418,"column":0},"generated":{"line":4421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4419,"column":0},"generated":{"line":4422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4420,"column":0},"generated":{"line":4423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4421,"column":0},"generated":{"line":4424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4422,"column":0},"generated":{"line":4425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4423,"column":0},"generated":{"line":4426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4424,"column":0},"generated":{"line":4427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4425,"column":0},"generated":{"line":4428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4426,"column":0},"generated":{"line":4429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4427,"column":0},"generated":{"line":4430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4428,"column":0},"generated":{"line":4431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4429,"column":0},"generated":{"line":4432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4430,"column":0},"generated":{"line":4433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4431,"column":0},"generated":{"line":4434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4432,"column":0},"generated":{"line":4435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4433,"column":0},"generated":{"line":4436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4434,"column":0},"generated":{"line":4437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4435,"column":0},"generated":{"line":4438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4436,"column":0},"generated":{"line":4439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4437,"column":0},"generated":{"line":4440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4438,"column":0},"generated":{"line":4441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4439,"column":0},"generated":{"line":4442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4440,"column":0},"generated":{"line":4443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4441,"column":0},"generated":{"line":4444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4442,"column":0},"generated":{"line":4445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4443,"column":0},"generated":{"line":4446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4444,"column":0},"generated":{"line":4447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4445,"column":0},"generated":{"line":4448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4446,"column":0},"generated":{"line":4449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4447,"column":0},"generated":{"line":4450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4448,"column":0},"generated":{"line":4451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4449,"column":0},"generated":{"line":4452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4450,"column":0},"generated":{"line":4453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4451,"column":0},"generated":{"line":4454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4452,"column":0},"generated":{"line":4455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4453,"column":0},"generated":{"line":4456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4454,"column":0},"generated":{"line":4457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4455,"column":0},"generated":{"line":4458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4456,"column":0},"generated":{"line":4459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4457,"column":0},"generated":{"line":4460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4458,"column":0},"generated":{"line":4461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4459,"column":0},"generated":{"line":4462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4460,"column":0},"generated":{"line":4463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4461,"column":0},"generated":{"line":4464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4462,"column":0},"generated":{"line":4465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4463,"column":0},"generated":{"line":4466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4464,"column":0},"generated":{"line":4467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4465,"column":0},"generated":{"line":4468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4466,"column":0},"generated":{"line":4469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4467,"column":0},"generated":{"line":4470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4468,"column":0},"generated":{"line":4471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4469,"column":0},"generated":{"line":4472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4470,"column":0},"generated":{"line":4473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4471,"column":0},"generated":{"line":4474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4472,"column":0},"generated":{"line":4475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4473,"column":0},"generated":{"line":4476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4474,"column":0},"generated":{"line":4477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4475,"column":0},"generated":{"line":4478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4476,"column":0},"generated":{"line":4479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4477,"column":0},"generated":{"line":4480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4478,"column":0},"generated":{"line":4481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4479,"column":0},"generated":{"line":4482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4480,"column":0},"generated":{"line":4483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4481,"column":0},"generated":{"line":4484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4482,"column":0},"generated":{"line":4485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4483,"column":0},"generated":{"line":4486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4484,"column":0},"generated":{"line":4487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4485,"column":0},"generated":{"line":4488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4486,"column":0},"generated":{"line":4489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4487,"column":0},"generated":{"line":4490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4488,"column":0},"generated":{"line":4491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4489,"column":0},"generated":{"line":4492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4490,"column":0},"generated":{"line":4493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4491,"column":0},"generated":{"line":4494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4492,"column":0},"generated":{"line":4495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4493,"column":0},"generated":{"line":4496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4494,"column":0},"generated":{"line":4497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4495,"column":0},"generated":{"line":4498,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4496,"column":0},"generated":{"line":4499,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4497,"column":0},"generated":{"line":4500,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4498,"column":0},"generated":{"line":4501,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4499,"column":0},"generated":{"line":4502,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4500,"column":0},"generated":{"line":4503,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4501,"column":0},"generated":{"line":4504,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4502,"column":0},"generated":{"line":4505,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4503,"column":0},"generated":{"line":4506,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4504,"column":0},"generated":{"line":4507,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4505,"column":0},"generated":{"line":4508,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4506,"column":0},"generated":{"line":4509,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4507,"column":0},"generated":{"line":4510,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4508,"column":0},"generated":{"line":4511,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4509,"column":0},"generated":{"line":4512,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4510,"column":0},"generated":{"line":4513,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4511,"column":0},"generated":{"line":4514,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4512,"column":0},"generated":{"line":4515,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4513,"column":0},"generated":{"line":4516,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4514,"column":0},"generated":{"line":4517,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4515,"column":0},"generated":{"line":4518,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4516,"column":0},"generated":{"line":4519,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4517,"column":0},"generated":{"line":4520,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4518,"column":0},"generated":{"line":4521,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4519,"column":0},"generated":{"line":4522,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4520,"column":0},"generated":{"line":4523,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4521,"column":0},"generated":{"line":4524,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4522,"column":0},"generated":{"line":4525,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4523,"column":0},"generated":{"line":4526,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4524,"column":0},"generated":{"line":4527,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4525,"column":0},"generated":{"line":4528,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4526,"column":0},"generated":{"line":4529,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4527,"column":0},"generated":{"line":4530,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4528,"column":0},"generated":{"line":4531,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4529,"column":0},"generated":{"line":4532,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4530,"column":0},"generated":{"line":4533,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4531,"column":0},"generated":{"line":4534,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4532,"column":0},"generated":{"line":4535,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4533,"column":0},"generated":{"line":4536,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4534,"column":0},"generated":{"line":4537,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4535,"column":0},"generated":{"line":4538,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4536,"column":0},"generated":{"line":4539,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4537,"column":0},"generated":{"line":4540,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4538,"column":0},"generated":{"line":4541,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4539,"column":0},"generated":{"line":4542,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4540,"column":0},"generated":{"line":4543,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4541,"column":0},"generated":{"line":4544,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4542,"column":0},"generated":{"line":4545,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4543,"column":0},"generated":{"line":4546,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4544,"column":0},"generated":{"line":4547,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4545,"column":0},"generated":{"line":4548,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4546,"column":0},"generated":{"line":4549,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4547,"column":0},"generated":{"line":4550,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4548,"column":0},"generated":{"line":4551,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4549,"column":0},"generated":{"line":4552,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4550,"column":0},"generated":{"line":4553,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4551,"column":0},"generated":{"line":4554,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4552,"column":0},"generated":{"line":4555,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4553,"column":0},"generated":{"line":4556,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4554,"column":0},"generated":{"line":4557,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4555,"column":0},"generated":{"line":4558,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4556,"column":0},"generated":{"line":4559,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4557,"column":0},"generated":{"line":4560,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4558,"column":0},"generated":{"line":4561,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4559,"column":0},"generated":{"line":4562,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4560,"column":0},"generated":{"line":4563,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4561,"column":0},"generated":{"line":4564,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4562,"column":0},"generated":{"line":4565,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4563,"column":0},"generated":{"line":4566,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4564,"column":0},"generated":{"line":4567,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4565,"column":0},"generated":{"line":4568,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4566,"column":0},"generated":{"line":4569,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4567,"column":0},"generated":{"line":4570,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4568,"column":0},"generated":{"line":4571,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4569,"column":0},"generated":{"line":4572,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4570,"column":0},"generated":{"line":4573,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4571,"column":0},"generated":{"line":4574,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4572,"column":0},"generated":{"line":4575,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4573,"column":0},"generated":{"line":4576,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4574,"column":0},"generated":{"line":4577,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4575,"column":0},"generated":{"line":4578,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4576,"column":0},"generated":{"line":4579,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4577,"column":0},"generated":{"line":4580,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4578,"column":0},"generated":{"line":4581,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4579,"column":0},"generated":{"line":4582,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4580,"column":0},"generated":{"line":4583,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4581,"column":0},"generated":{"line":4584,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4582,"column":0},"generated":{"line":4585,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4583,"column":0},"generated":{"line":4586,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4584,"column":0},"generated":{"line":4587,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4585,"column":0},"generated":{"line":4588,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4586,"column":0},"generated":{"line":4589,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4587,"column":0},"generated":{"line":4590,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4588,"column":0},"generated":{"line":4591,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4589,"column":0},"generated":{"line":4592,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4590,"column":0},"generated":{"line":4593,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4591,"column":0},"generated":{"line":4594,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4592,"column":0},"generated":{"line":4595,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4593,"column":0},"generated":{"line":4596,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4594,"column":0},"generated":{"line":4597,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4595,"column":0},"generated":{"line":4598,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4596,"column":0},"generated":{"line":4599,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4597,"column":0},"generated":{"line":4600,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4598,"column":0},"generated":{"line":4601,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4599,"column":0},"generated":{"line":4602,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4600,"column":0},"generated":{"line":4603,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4601,"column":0},"generated":{"line":4604,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4602,"column":0},"generated":{"line":4605,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4603,"column":0},"generated":{"line":4606,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4604,"column":0},"generated":{"line":4607,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4605,"column":0},"generated":{"line":4608,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4606,"column":0},"generated":{"line":4609,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4607,"column":0},"generated":{"line":4610,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4608,"column":0},"generated":{"line":4611,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4609,"column":0},"generated":{"line":4612,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4610,"column":0},"generated":{"line":4613,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4611,"column":0},"generated":{"line":4614,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4612,"column":0},"generated":{"line":4615,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4613,"column":0},"generated":{"line":4616,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4614,"column":0},"generated":{"line":4617,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4615,"column":0},"generated":{"line":4618,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4616,"column":0},"generated":{"line":4619,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4617,"column":0},"generated":{"line":4620,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4618,"column":0},"generated":{"line":4621,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4619,"column":0},"generated":{"line":4622,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4620,"column":0},"generated":{"line":4623,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4621,"column":0},"generated":{"line":4624,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4622,"column":0},"generated":{"line":4625,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4623,"column":0},"generated":{"line":4626,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4624,"column":0},"generated":{"line":4627,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4625,"column":0},"generated":{"line":4628,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4626,"column":0},"generated":{"line":4629,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4627,"column":0},"generated":{"line":4630,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4628,"column":0},"generated":{"line":4631,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4629,"column":0},"generated":{"line":4632,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4630,"column":0},"generated":{"line":4633,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4631,"column":0},"generated":{"line":4634,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4632,"column":0},"generated":{"line":4635,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4633,"column":0},"generated":{"line":4636,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4634,"column":0},"generated":{"line":4637,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4635,"column":0},"generated":{"line":4638,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4636,"column":0},"generated":{"line":4639,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4637,"column":0},"generated":{"line":4640,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4638,"column":0},"generated":{"line":4641,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4639,"column":0},"generated":{"line":4642,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4640,"column":0},"generated":{"line":4643,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4641,"column":0},"generated":{"line":4644,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4642,"column":0},"generated":{"line":4645,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4643,"column":0},"generated":{"line":4646,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4644,"column":0},"generated":{"line":4647,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4645,"column":0},"generated":{"line":4648,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4646,"column":0},"generated":{"line":4649,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4647,"column":0},"generated":{"line":4650,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4648,"column":0},"generated":{"line":4651,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4649,"column":0},"generated":{"line":4652,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4650,"column":0},"generated":{"line":4653,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4651,"column":0},"generated":{"line":4654,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4652,"column":0},"generated":{"line":4655,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4653,"column":0},"generated":{"line":4656,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4654,"column":0},"generated":{"line":4657,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4655,"column":0},"generated":{"line":4658,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4656,"column":0},"generated":{"line":4659,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4657,"column":0},"generated":{"line":4660,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4658,"column":0},"generated":{"line":4661,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4659,"column":0},"generated":{"line":4662,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4660,"column":0},"generated":{"line":4663,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4661,"column":0},"generated":{"line":4664,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4662,"column":0},"generated":{"line":4665,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4663,"column":0},"generated":{"line":4666,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4664,"column":0},"generated":{"line":4667,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4665,"column":0},"generated":{"line":4668,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4666,"column":0},"generated":{"line":4669,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4667,"column":0},"generated":{"line":4670,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4668,"column":0},"generated":{"line":4671,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4669,"column":0},"generated":{"line":4672,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4670,"column":0},"generated":{"line":4673,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4671,"column":0},"generated":{"line":4674,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4672,"column":0},"generated":{"line":4675,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4673,"column":0},"generated":{"line":4676,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4674,"column":0},"generated":{"line":4677,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4675,"column":0},"generated":{"line":4678,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4676,"column":0},"generated":{"line":4679,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4677,"column":0},"generated":{"line":4680,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4678,"column":0},"generated":{"line":4681,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4679,"column":0},"generated":{"line":4682,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4680,"column":0},"generated":{"line":4683,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4681,"column":0},"generated":{"line":4684,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4682,"column":0},"generated":{"line":4685,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4683,"column":0},"generated":{"line":4686,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4684,"column":0},"generated":{"line":4687,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4685,"column":0},"generated":{"line":4688,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4686,"column":0},"generated":{"line":4689,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4687,"column":0},"generated":{"line":4690,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4688,"column":0},"generated":{"line":4691,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4689,"column":0},"generated":{"line":4692,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4690,"column":0},"generated":{"line":4693,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4691,"column":0},"generated":{"line":4694,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4692,"column":0},"generated":{"line":4695,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4693,"column":0},"generated":{"line":4696,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4694,"column":0},"generated":{"line":4697,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4695,"column":0},"generated":{"line":4698,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4696,"column":0},"generated":{"line":4699,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4697,"column":0},"generated":{"line":4700,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4698,"column":0},"generated":{"line":4701,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4699,"column":0},"generated":{"line":4702,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4700,"column":0},"generated":{"line":4703,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4701,"column":0},"generated":{"line":4704,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4702,"column":0},"generated":{"line":4705,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4703,"column":0},"generated":{"line":4706,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4704,"column":0},"generated":{"line":4707,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4705,"column":0},"generated":{"line":4708,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4706,"column":0},"generated":{"line":4709,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4707,"column":0},"generated":{"line":4710,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4708,"column":0},"generated":{"line":4711,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4709,"column":0},"generated":{"line":4712,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4710,"column":0},"generated":{"line":4713,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4711,"column":0},"generated":{"line":4714,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4712,"column":0},"generated":{"line":4715,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4713,"column":0},"generated":{"line":4716,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4714,"column":0},"generated":{"line":4717,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4715,"column":0},"generated":{"line":4718,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4716,"column":0},"generated":{"line":4719,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4717,"column":0},"generated":{"line":4720,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4718,"column":0},"generated":{"line":4721,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4719,"column":0},"generated":{"line":4722,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4720,"column":0},"generated":{"line":4723,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4721,"column":0},"generated":{"line":4724,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4722,"column":0},"generated":{"line":4725,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4723,"column":0},"generated":{"line":4726,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4724,"column":0},"generated":{"line":4727,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4725,"column":0},"generated":{"line":4728,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4726,"column":0},"generated":{"line":4729,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4727,"column":0},"generated":{"line":4730,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4728,"column":0},"generated":{"line":4731,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4729,"column":0},"generated":{"line":4732,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4730,"column":0},"generated":{"line":4733,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4731,"column":0},"generated":{"line":4734,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4732,"column":0},"generated":{"line":4735,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4733,"column":0},"generated":{"line":4736,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4734,"column":0},"generated":{"line":4737,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4735,"column":0},"generated":{"line":4738,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4736,"column":0},"generated":{"line":4739,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4737,"column":0},"generated":{"line":4740,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4738,"column":0},"generated":{"line":4741,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4739,"column":0},"generated":{"line":4742,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4740,"column":0},"generated":{"line":4743,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4741,"column":0},"generated":{"line":4744,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4742,"column":0},"generated":{"line":4745,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4743,"column":0},"generated":{"line":4746,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4744,"column":0},"generated":{"line":4747,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4745,"column":0},"generated":{"line":4748,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4746,"column":0},"generated":{"line":4749,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4747,"column":0},"generated":{"line":4750,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4748,"column":0},"generated":{"line":4751,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4749,"column":0},"generated":{"line":4752,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4750,"column":0},"generated":{"line":4753,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4751,"column":0},"generated":{"line":4754,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4752,"column":0},"generated":{"line":4755,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4753,"column":0},"generated":{"line":4756,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4754,"column":0},"generated":{"line":4757,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4755,"column":0},"generated":{"line":4758,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4756,"column":0},"generated":{"line":4759,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4757,"column":0},"generated":{"line":4760,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4758,"column":0},"generated":{"line":4761,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4759,"column":0},"generated":{"line":4762,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4760,"column":0},"generated":{"line":4763,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4761,"column":0},"generated":{"line":4764,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4762,"column":0},"generated":{"line":4765,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4763,"column":0},"generated":{"line":4766,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4764,"column":0},"generated":{"line":4767,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4765,"column":0},"generated":{"line":4768,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4766,"column":0},"generated":{"line":4769,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4767,"column":0},"generated":{"line":4770,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4768,"column":0},"generated":{"line":4771,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4769,"column":0},"generated":{"line":4772,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4770,"column":0},"generated":{"line":4773,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4771,"column":0},"generated":{"line":4774,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4772,"column":0},"generated":{"line":4775,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4773,"column":0},"generated":{"line":4776,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4774,"column":0},"generated":{"line":4777,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4775,"column":0},"generated":{"line":4778,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4776,"column":0},"generated":{"line":4779,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4777,"column":0},"generated":{"line":4780,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4778,"column":0},"generated":{"line":4781,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4779,"column":0},"generated":{"line":4782,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4780,"column":0},"generated":{"line":4783,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4781,"column":0},"generated":{"line":4784,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4782,"column":0},"generated":{"line":4785,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4783,"column":0},"generated":{"line":4786,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4784,"column":0},"generated":{"line":4787,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4785,"column":0},"generated":{"line":4788,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4786,"column":0},"generated":{"line":4789,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4787,"column":0},"generated":{"line":4790,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4788,"column":0},"generated":{"line":4791,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4789,"column":0},"generated":{"line":4792,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4790,"column":0},"generated":{"line":4793,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4791,"column":0},"generated":{"line":4794,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4792,"column":0},"generated":{"line":4795,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4793,"column":0},"generated":{"line":4796,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4794,"column":0},"generated":{"line":4797,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4795,"column":0},"generated":{"line":4798,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4796,"column":0},"generated":{"line":4799,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4797,"column":0},"generated":{"line":4800,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4798,"column":0},"generated":{"line":4801,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4799,"column":0},"generated":{"line":4802,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4800,"column":0},"generated":{"line":4803,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4801,"column":0},"generated":{"line":4804,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4802,"column":0},"generated":{"line":4805,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4803,"column":0},"generated":{"line":4806,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4804,"column":0},"generated":{"line":4807,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4805,"column":0},"generated":{"line":4808,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4806,"column":0},"generated":{"line":4809,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4807,"column":0},"generated":{"line":4810,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4808,"column":0},"generated":{"line":4811,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4809,"column":0},"generated":{"line":4812,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4810,"column":0},"generated":{"line":4813,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4811,"column":0},"generated":{"line":4814,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4812,"column":0},"generated":{"line":4815,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4813,"column":0},"generated":{"line":4816,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4814,"column":0},"generated":{"line":4817,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4815,"column":0},"generated":{"line":4818,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4816,"column":0},"generated":{"line":4819,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4817,"column":0},"generated":{"line":4820,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4818,"column":0},"generated":{"line":4821,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4819,"column":0},"generated":{"line":4822,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4820,"column":0},"generated":{"line":4823,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4821,"column":0},"generated":{"line":4824,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4822,"column":0},"generated":{"line":4825,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4823,"column":0},"generated":{"line":4826,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4824,"column":0},"generated":{"line":4827,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4825,"column":0},"generated":{"line":4828,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4826,"column":0},"generated":{"line":4829,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4827,"column":0},"generated":{"line":4830,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4828,"column":0},"generated":{"line":4831,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4829,"column":0},"generated":{"line":4832,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4830,"column":0},"generated":{"line":4833,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4831,"column":0},"generated":{"line":4834,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4832,"column":0},"generated":{"line":4835,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4833,"column":0},"generated":{"line":4836,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4834,"column":0},"generated":{"line":4837,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4835,"column":0},"generated":{"line":4838,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4836,"column":0},"generated":{"line":4839,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4837,"column":0},"generated":{"line":4840,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4838,"column":0},"generated":{"line":4841,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4839,"column":0},"generated":{"line":4842,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4840,"column":0},"generated":{"line":4843,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4841,"column":0},"generated":{"line":4844,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4842,"column":0},"generated":{"line":4845,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4843,"column":0},"generated":{"line":4846,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4844,"column":0},"generated":{"line":4847,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4845,"column":0},"generated":{"line":4848,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4846,"column":0},"generated":{"line":4849,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4847,"column":0},"generated":{"line":4850,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4848,"column":0},"generated":{"line":4851,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4849,"column":0},"generated":{"line":4852,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4850,"column":0},"generated":{"line":4853,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4851,"column":0},"generated":{"line":4854,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4852,"column":0},"generated":{"line":4855,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4853,"column":0},"generated":{"line":4856,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4854,"column":0},"generated":{"line":4857,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4855,"column":0},"generated":{"line":4858,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4856,"column":0},"generated":{"line":4859,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4857,"column":0},"generated":{"line":4860,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4858,"column":0},"generated":{"line":4861,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4859,"column":0},"generated":{"line":4862,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4860,"column":0},"generated":{"line":4863,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4861,"column":0},"generated":{"line":4864,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4862,"column":0},"generated":{"line":4865,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4863,"column":0},"generated":{"line":4866,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4864,"column":0},"generated":{"line":4867,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4865,"column":0},"generated":{"line":4868,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4866,"column":0},"generated":{"line":4869,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4867,"column":0},"generated":{"line":4870,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4868,"column":0},"generated":{"line":4871,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4869,"column":0},"generated":{"line":4872,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4870,"column":0},"generated":{"line":4873,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4871,"column":0},"generated":{"line":4874,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4872,"column":0},"generated":{"line":4875,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4873,"column":0},"generated":{"line":4876,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4874,"column":0},"generated":{"line":4877,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4875,"column":0},"generated":{"line":4878,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4876,"column":0},"generated":{"line":4879,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4877,"column":0},"generated":{"line":4880,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4878,"column":0},"generated":{"line":4881,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4879,"column":0},"generated":{"line":4882,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4880,"column":0},"generated":{"line":4883,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4881,"column":0},"generated":{"line":4884,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4882,"column":0},"generated":{"line":4885,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4883,"column":0},"generated":{"line":4886,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4884,"column":0},"generated":{"line":4887,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4885,"column":0},"generated":{"line":4888,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4886,"column":0},"generated":{"line":4889,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4887,"column":0},"generated":{"line":4890,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4888,"column":0},"generated":{"line":4891,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4889,"column":0},"generated":{"line":4892,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4890,"column":0},"generated":{"line":4893,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4891,"column":0},"generated":{"line":4894,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4892,"column":0},"generated":{"line":4895,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4893,"column":0},"generated":{"line":4896,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4894,"column":0},"generated":{"line":4897,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4895,"column":0},"generated":{"line":4898,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4896,"column":0},"generated":{"line":4899,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4897,"column":0},"generated":{"line":4900,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4898,"column":0},"generated":{"line":4901,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4899,"column":0},"generated":{"line":4902,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4900,"column":0},"generated":{"line":4903,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4901,"column":0},"generated":{"line":4904,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4902,"column":0},"generated":{"line":4905,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4903,"column":0},"generated":{"line":4906,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4904,"column":0},"generated":{"line":4907,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4905,"column":0},"generated":{"line":4908,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4906,"column":0},"generated":{"line":4909,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4907,"column":0},"generated":{"line":4910,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4908,"column":0},"generated":{"line":4911,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4909,"column":0},"generated":{"line":4912,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4910,"column":0},"generated":{"line":4913,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4911,"column":0},"generated":{"line":4914,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4912,"column":0},"generated":{"line":4915,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4913,"column":0},"generated":{"line":4916,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4914,"column":0},"generated":{"line":4917,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4915,"column":0},"generated":{"line":4918,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4916,"column":0},"generated":{"line":4919,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4917,"column":0},"generated":{"line":4920,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4918,"column":0},"generated":{"line":4921,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4919,"column":0},"generated":{"line":4922,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4920,"column":0},"generated":{"line":4923,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4921,"column":0},"generated":{"line":4924,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4922,"column":0},"generated":{"line":4925,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4923,"column":0},"generated":{"line":4926,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4924,"column":0},"generated":{"line":4927,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4925,"column":0},"generated":{"line":4928,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4926,"column":0},"generated":{"line":4929,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4927,"column":0},"generated":{"line":4930,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4928,"column":0},"generated":{"line":4931,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4929,"column":0},"generated":{"line":4932,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4930,"column":0},"generated":{"line":4933,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4931,"column":0},"generated":{"line":4934,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4932,"column":0},"generated":{"line":4935,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4933,"column":0},"generated":{"line":4936,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4934,"column":0},"generated":{"line":4937,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4935,"column":0},"generated":{"line":4938,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4936,"column":0},"generated":{"line":4939,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4937,"column":0},"generated":{"line":4940,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4938,"column":0},"generated":{"line":4941,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4939,"column":0},"generated":{"line":4942,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4940,"column":0},"generated":{"line":4943,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4941,"column":0},"generated":{"line":4944,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4942,"column":0},"generated":{"line":4945,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4943,"column":0},"generated":{"line":4946,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4944,"column":0},"generated":{"line":4947,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4945,"column":0},"generated":{"line":4948,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4946,"column":0},"generated":{"line":4949,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4947,"column":0},"generated":{"line":4950,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4948,"column":0},"generated":{"line":4951,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4949,"column":0},"generated":{"line":4952,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4950,"column":0},"generated":{"line":4953,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4951,"column":0},"generated":{"line":4954,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4952,"column":0},"generated":{"line":4955,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4953,"column":0},"generated":{"line":4956,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4954,"column":0},"generated":{"line":4957,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4955,"column":0},"generated":{"line":4958,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4956,"column":0},"generated":{"line":4959,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4957,"column":0},"generated":{"line":4960,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4958,"column":0},"generated":{"line":4961,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4959,"column":0},"generated":{"line":4962,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4960,"column":0},"generated":{"line":4963,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4961,"column":0},"generated":{"line":4964,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4962,"column":0},"generated":{"line":4965,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4963,"column":0},"generated":{"line":4966,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4964,"column":0},"generated":{"line":4967,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4965,"column":0},"generated":{"line":4968,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4966,"column":0},"generated":{"line":4969,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4967,"column":0},"generated":{"line":4970,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4968,"column":0},"generated":{"line":4971,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4969,"column":0},"generated":{"line":4972,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4970,"column":0},"generated":{"line":4973,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4971,"column":0},"generated":{"line":4974,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4972,"column":0},"generated":{"line":4975,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4973,"column":0},"generated":{"line":4976,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4974,"column":0},"generated":{"line":4977,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4975,"column":0},"generated":{"line":4978,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4976,"column":0},"generated":{"line":4979,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4977,"column":0},"generated":{"line":4980,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4978,"column":0},"generated":{"line":4981,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4979,"column":0},"generated":{"line":4982,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4980,"column":0},"generated":{"line":4983,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4981,"column":0},"generated":{"line":4984,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4982,"column":0},"generated":{"line":4985,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4983,"column":0},"generated":{"line":4986,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4984,"column":0},"generated":{"line":4987,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4985,"column":0},"generated":{"line":4988,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4986,"column":0},"generated":{"line":4989,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4987,"column":0},"generated":{"line":4990,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4988,"column":0},"generated":{"line":4991,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4989,"column":0},"generated":{"line":4992,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4990,"column":0},"generated":{"line":4993,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4991,"column":0},"generated":{"line":4994,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4992,"column":0},"generated":{"line":4995,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4993,"column":0},"generated":{"line":4996,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4994,"column":0},"generated":{"line":4997,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4995,"column":0},"generated":{"line":4998,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4996,"column":0},"generated":{"line":4999,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4997,"column":0},"generated":{"line":5000,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4998,"column":0},"generated":{"line":5001,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":4999,"column":0},"generated":{"line":5002,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5000,"column":0},"generated":{"line":5003,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5001,"column":0},"generated":{"line":5004,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5002,"column":0},"generated":{"line":5005,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5003,"column":0},"generated":{"line":5006,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5004,"column":0},"generated":{"line":5007,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5005,"column":0},"generated":{"line":5008,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5006,"column":0},"generated":{"line":5009,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5007,"column":0},"generated":{"line":5010,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5008,"column":0},"generated":{"line":5011,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5009,"column":0},"generated":{"line":5012,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5010,"column":0},"generated":{"line":5013,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5011,"column":0},"generated":{"line":5014,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5012,"column":0},"generated":{"line":5015,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5013,"column":0},"generated":{"line":5016,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5014,"column":0},"generated":{"line":5017,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5015,"column":0},"generated":{"line":5018,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5016,"column":0},"generated":{"line":5019,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5017,"column":0},"generated":{"line":5020,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5018,"column":0},"generated":{"line":5021,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5019,"column":0},"generated":{"line":5022,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5020,"column":0},"generated":{"line":5023,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5021,"column":0},"generated":{"line":5024,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5022,"column":0},"generated":{"line":5025,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5023,"column":0},"generated":{"line":5026,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5024,"column":0},"generated":{"line":5027,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5025,"column":0},"generated":{"line":5028,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5026,"column":0},"generated":{"line":5029,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5027,"column":0},"generated":{"line":5030,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5028,"column":0},"generated":{"line":5031,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5029,"column":0},"generated":{"line":5032,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5030,"column":0},"generated":{"line":5033,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5031,"column":0},"generated":{"line":5034,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5032,"column":0},"generated":{"line":5035,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5033,"column":0},"generated":{"line":5036,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5034,"column":0},"generated":{"line":5037,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5035,"column":0},"generated":{"line":5038,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5036,"column":0},"generated":{"line":5039,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5037,"column":0},"generated":{"line":5040,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5038,"column":0},"generated":{"line":5041,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5039,"column":0},"generated":{"line":5042,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5040,"column":0},"generated":{"line":5043,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5041,"column":0},"generated":{"line":5044,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5042,"column":0},"generated":{"line":5045,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5043,"column":0},"generated":{"line":5046,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5044,"column":0},"generated":{"line":5047,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5045,"column":0},"generated":{"line":5048,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5046,"column":0},"generated":{"line":5049,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5047,"column":0},"generated":{"line":5050,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5048,"column":0},"generated":{"line":5051,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5049,"column":0},"generated":{"line":5052,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5050,"column":0},"generated":{"line":5053,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5051,"column":0},"generated":{"line":5054,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5052,"column":0},"generated":{"line":5055,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5053,"column":0},"generated":{"line":5056,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5054,"column":0},"generated":{"line":5057,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5055,"column":0},"generated":{"line":5058,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5056,"column":0},"generated":{"line":5059,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5057,"column":0},"generated":{"line":5060,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5058,"column":0},"generated":{"line":5061,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5059,"column":0},"generated":{"line":5062,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5060,"column":0},"generated":{"line":5063,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5061,"column":0},"generated":{"line":5064,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5062,"column":0},"generated":{"line":5065,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5063,"column":0},"generated":{"line":5066,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5064,"column":0},"generated":{"line":5067,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5065,"column":0},"generated":{"line":5068,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5066,"column":0},"generated":{"line":5069,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5067,"column":0},"generated":{"line":5070,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5068,"column":0},"generated":{"line":5071,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5069,"column":0},"generated":{"line":5072,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5070,"column":0},"generated":{"line":5073,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5071,"column":0},"generated":{"line":5074,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5072,"column":0},"generated":{"line":5075,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5073,"column":0},"generated":{"line":5076,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5074,"column":0},"generated":{"line":5077,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5075,"column":0},"generated":{"line":5078,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5076,"column":0},"generated":{"line":5079,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5077,"column":0},"generated":{"line":5080,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5078,"column":0},"generated":{"line":5081,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5079,"column":0},"generated":{"line":5082,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5080,"column":0},"generated":{"line":5083,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5081,"column":0},"generated":{"line":5084,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5082,"column":0},"generated":{"line":5085,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5083,"column":0},"generated":{"line":5086,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5084,"column":0},"generated":{"line":5087,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5085,"column":0},"generated":{"line":5088,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5086,"column":0},"generated":{"line":5089,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5087,"column":0},"generated":{"line":5090,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5088,"column":0},"generated":{"line":5091,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5089,"column":0},"generated":{"line":5092,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5090,"column":0},"generated":{"line":5093,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5091,"column":0},"generated":{"line":5094,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5092,"column":0},"generated":{"line":5095,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5093,"column":0},"generated":{"line":5096,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5094,"column":0},"generated":{"line":5097,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5095,"column":0},"generated":{"line":5098,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5096,"column":0},"generated":{"line":5099,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5097,"column":0},"generated":{"line":5100,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5098,"column":0},"generated":{"line":5101,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5099,"column":0},"generated":{"line":5102,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5100,"column":0},"generated":{"line":5103,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5101,"column":0},"generated":{"line":5104,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5102,"column":0},"generated":{"line":5105,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5103,"column":0},"generated":{"line":5106,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5104,"column":0},"generated":{"line":5107,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5105,"column":0},"generated":{"line":5108,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5106,"column":0},"generated":{"line":5109,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5107,"column":0},"generated":{"line":5110,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5108,"column":0},"generated":{"line":5111,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5109,"column":0},"generated":{"line":5112,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5110,"column":0},"generated":{"line":5113,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5111,"column":0},"generated":{"line":5114,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5112,"column":0},"generated":{"line":5115,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5113,"column":0},"generated":{"line":5116,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5114,"column":0},"generated":{"line":5117,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5115,"column":0},"generated":{"line":5118,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5116,"column":0},"generated":{"line":5119,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5117,"column":0},"generated":{"line":5120,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5118,"column":0},"generated":{"line":5121,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5119,"column":0},"generated":{"line":5122,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5120,"column":0},"generated":{"line":5123,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5121,"column":0},"generated":{"line":5124,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5122,"column":0},"generated":{"line":5125,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5123,"column":0},"generated":{"line":5126,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5124,"column":0},"generated":{"line":5127,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5125,"column":0},"generated":{"line":5128,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5126,"column":0},"generated":{"line":5129,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5127,"column":0},"generated":{"line":5130,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5128,"column":0},"generated":{"line":5131,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5129,"column":0},"generated":{"line":5132,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5130,"column":0},"generated":{"line":5133,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5131,"column":0},"generated":{"line":5134,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5132,"column":0},"generated":{"line":5135,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5133,"column":0},"generated":{"line":5136,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5134,"column":0},"generated":{"line":5137,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5135,"column":0},"generated":{"line":5138,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5136,"column":0},"generated":{"line":5139,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5137,"column":0},"generated":{"line":5140,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5138,"column":0},"generated":{"line":5141,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5139,"column":0},"generated":{"line":5142,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5140,"column":0},"generated":{"line":5143,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5141,"column":0},"generated":{"line":5144,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5142,"column":0},"generated":{"line":5145,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5143,"column":0},"generated":{"line":5146,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5144,"column":0},"generated":{"line":5147,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5145,"column":0},"generated":{"line":5148,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5146,"column":0},"generated":{"line":5149,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5147,"column":0},"generated":{"line":5150,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5148,"column":0},"generated":{"line":5151,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5149,"column":0},"generated":{"line":5152,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5150,"column":0},"generated":{"line":5153,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5151,"column":0},"generated":{"line":5154,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5152,"column":0},"generated":{"line":5155,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5153,"column":0},"generated":{"line":5156,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5154,"column":0},"generated":{"line":5157,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5155,"column":0},"generated":{"line":5158,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5156,"column":0},"generated":{"line":5159,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5157,"column":0},"generated":{"line":5160,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5158,"column":0},"generated":{"line":5161,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5159,"column":0},"generated":{"line":5162,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5160,"column":0},"generated":{"line":5163,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5161,"column":0},"generated":{"line":5164,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5162,"column":0},"generated":{"line":5165,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5163,"column":0},"generated":{"line":5166,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5164,"column":0},"generated":{"line":5167,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5165,"column":0},"generated":{"line":5168,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5166,"column":0},"generated":{"line":5169,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5167,"column":0},"generated":{"line":5170,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5168,"column":0},"generated":{"line":5171,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5169,"column":0},"generated":{"line":5172,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5170,"column":0},"generated":{"line":5173,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5171,"column":0},"generated":{"line":5174,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5172,"column":0},"generated":{"line":5175,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5173,"column":0},"generated":{"line":5176,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5174,"column":0},"generated":{"line":5177,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5175,"column":0},"generated":{"line":5178,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5176,"column":0},"generated":{"line":5179,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5177,"column":0},"generated":{"line":5180,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5178,"column":0},"generated":{"line":5181,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5179,"column":0},"generated":{"line":5182,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5180,"column":0},"generated":{"line":5183,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5181,"column":0},"generated":{"line":5184,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5182,"column":0},"generated":{"line":5185,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5183,"column":0},"generated":{"line":5186,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5184,"column":0},"generated":{"line":5187,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5185,"column":0},"generated":{"line":5188,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5186,"column":0},"generated":{"line":5189,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5187,"column":0},"generated":{"line":5190,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5188,"column":0},"generated":{"line":5191,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5189,"column":0},"generated":{"line":5192,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5190,"column":0},"generated":{"line":5193,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5191,"column":0},"generated":{"line":5194,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5192,"column":0},"generated":{"line":5195,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5193,"column":0},"generated":{"line":5196,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5194,"column":0},"generated":{"line":5197,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5195,"column":0},"generated":{"line":5198,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5196,"column":0},"generated":{"line":5199,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5197,"column":0},"generated":{"line":5200,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5198,"column":0},"generated":{"line":5201,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5199,"column":0},"generated":{"line":5202,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5200,"column":0},"generated":{"line":5203,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5201,"column":0},"generated":{"line":5204,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5202,"column":0},"generated":{"line":5205,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5203,"column":0},"generated":{"line":5206,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5204,"column":0},"generated":{"line":5207,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5205,"column":0},"generated":{"line":5208,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5206,"column":0},"generated":{"line":5209,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5207,"column":0},"generated":{"line":5210,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5208,"column":0},"generated":{"line":5211,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5209,"column":0},"generated":{"line":5212,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5210,"column":0},"generated":{"line":5213,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5211,"column":0},"generated":{"line":5214,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5212,"column":0},"generated":{"line":5215,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5213,"column":0},"generated":{"line":5216,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5214,"column":0},"generated":{"line":5217,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5215,"column":0},"generated":{"line":5218,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5216,"column":0},"generated":{"line":5219,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5217,"column":0},"generated":{"line":5220,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5218,"column":0},"generated":{"line":5221,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5219,"column":0},"generated":{"line":5222,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5220,"column":0},"generated":{"line":5223,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5221,"column":0},"generated":{"line":5224,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5222,"column":0},"generated":{"line":5225,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5223,"column":0},"generated":{"line":5226,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5224,"column":0},"generated":{"line":5227,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5225,"column":0},"generated":{"line":5228,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5226,"column":0},"generated":{"line":5229,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5227,"column":0},"generated":{"line":5230,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5228,"column":0},"generated":{"line":5231,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5229,"column":0},"generated":{"line":5232,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5230,"column":0},"generated":{"line":5233,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5231,"column":0},"generated":{"line":5234,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5232,"column":0},"generated":{"line":5235,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5233,"column":0},"generated":{"line":5236,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5234,"column":0},"generated":{"line":5237,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5235,"column":0},"generated":{"line":5238,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5236,"column":0},"generated":{"line":5239,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5237,"column":0},"generated":{"line":5240,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5238,"column":0},"generated":{"line":5241,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5239,"column":0},"generated":{"line":5242,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5240,"column":0},"generated":{"line":5243,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5241,"column":0},"generated":{"line":5244,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5242,"column":0},"generated":{"line":5245,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5243,"column":0},"generated":{"line":5246,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5244,"column":0},"generated":{"line":5247,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5245,"column":0},"generated":{"line":5248,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5246,"column":0},"generated":{"line":5249,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5247,"column":0},"generated":{"line":5250,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5248,"column":0},"generated":{"line":5251,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5249,"column":0},"generated":{"line":5252,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5250,"column":0},"generated":{"line":5253,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5251,"column":0},"generated":{"line":5254,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5252,"column":0},"generated":{"line":5255,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5253,"column":0},"generated":{"line":5256,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5254,"column":0},"generated":{"line":5257,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5255,"column":0},"generated":{"line":5258,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5256,"column":0},"generated":{"line":5259,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5257,"column":0},"generated":{"line":5260,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5258,"column":0},"generated":{"line":5261,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5259,"column":0},"generated":{"line":5262,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5260,"column":0},"generated":{"line":5263,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5261,"column":0},"generated":{"line":5264,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5262,"column":0},"generated":{"line":5265,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5263,"column":0},"generated":{"line":5266,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5264,"column":0},"generated":{"line":5267,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5265,"column":0},"generated":{"line":5268,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5266,"column":0},"generated":{"line":5269,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5267,"column":0},"generated":{"line":5270,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5268,"column":0},"generated":{"line":5271,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5269,"column":0},"generated":{"line":5272,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5270,"column":0},"generated":{"line":5273,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5271,"column":0},"generated":{"line":5274,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5272,"column":0},"generated":{"line":5275,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5273,"column":0},"generated":{"line":5276,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5274,"column":0},"generated":{"line":5277,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5275,"column":0},"generated":{"line":5278,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5276,"column":0},"generated":{"line":5279,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5277,"column":0},"generated":{"line":5280,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5278,"column":0},"generated":{"line":5281,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5279,"column":0},"generated":{"line":5282,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5280,"column":0},"generated":{"line":5283,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5281,"column":0},"generated":{"line":5284,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5282,"column":0},"generated":{"line":5285,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5283,"column":0},"generated":{"line":5286,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5284,"column":0},"generated":{"line":5287,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5285,"column":0},"generated":{"line":5288,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5286,"column":0},"generated":{"line":5289,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5287,"column":0},"generated":{"line":5290,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5288,"column":0},"generated":{"line":5291,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5289,"column":0},"generated":{"line":5292,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5290,"column":0},"generated":{"line":5293,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5291,"column":0},"generated":{"line":5294,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5292,"column":0},"generated":{"line":5295,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5293,"column":0},"generated":{"line":5296,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5294,"column":0},"generated":{"line":5297,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5295,"column":0},"generated":{"line":5298,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5296,"column":0},"generated":{"line":5299,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5297,"column":0},"generated":{"line":5300,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5298,"column":0},"generated":{"line":5301,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5299,"column":0},"generated":{"line":5302,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5300,"column":0},"generated":{"line":5303,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5301,"column":0},"generated":{"line":5304,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5302,"column":0},"generated":{"line":5305,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5303,"column":0},"generated":{"line":5306,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5304,"column":0},"generated":{"line":5307,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5305,"column":0},"generated":{"line":5308,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5306,"column":0},"generated":{"line":5309,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5307,"column":0},"generated":{"line":5310,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5308,"column":0},"generated":{"line":5311,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5309,"column":0},"generated":{"line":5312,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5310,"column":0},"generated":{"line":5313,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5311,"column":0},"generated":{"line":5314,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5312,"column":0},"generated":{"line":5315,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5313,"column":0},"generated":{"line":5316,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5314,"column":0},"generated":{"line":5317,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5315,"column":0},"generated":{"line":5318,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5316,"column":0},"generated":{"line":5319,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5317,"column":0},"generated":{"line":5320,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5318,"column":0},"generated":{"line":5321,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5319,"column":0},"generated":{"line":5322,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5320,"column":0},"generated":{"line":5323,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5321,"column":0},"generated":{"line":5324,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5322,"column":0},"generated":{"line":5325,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5323,"column":0},"generated":{"line":5326,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5324,"column":0},"generated":{"line":5327,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5325,"column":0},"generated":{"line":5328,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5326,"column":0},"generated":{"line":5329,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5327,"column":0},"generated":{"line":5330,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5328,"column":0},"generated":{"line":5331,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5329,"column":0},"generated":{"line":5332,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5330,"column":0},"generated":{"line":5333,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5331,"column":0},"generated":{"line":5334,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5332,"column":0},"generated":{"line":5335,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5333,"column":0},"generated":{"line":5336,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5334,"column":0},"generated":{"line":5337,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5335,"column":0},"generated":{"line":5338,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5336,"column":0},"generated":{"line":5339,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5337,"column":0},"generated":{"line":5340,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5338,"column":0},"generated":{"line":5341,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5339,"column":0},"generated":{"line":5342,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5340,"column":0},"generated":{"line":5343,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5341,"column":0},"generated":{"line":5344,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5342,"column":0},"generated":{"line":5345,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5343,"column":0},"generated":{"line":5346,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5344,"column":0},"generated":{"line":5347,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5345,"column":0},"generated":{"line":5348,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5346,"column":0},"generated":{"line":5349,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5347,"column":0},"generated":{"line":5350,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5348,"column":0},"generated":{"line":5351,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5349,"column":0},"generated":{"line":5352,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5350,"column":0},"generated":{"line":5353,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5351,"column":0},"generated":{"line":5354,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5352,"column":0},"generated":{"line":5355,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5353,"column":0},"generated":{"line":5356,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5354,"column":0},"generated":{"line":5357,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5355,"column":0},"generated":{"line":5358,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5356,"column":0},"generated":{"line":5359,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5357,"column":0},"generated":{"line":5360,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5358,"column":0},"generated":{"line":5361,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5359,"column":0},"generated":{"line":5362,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5360,"column":0},"generated":{"line":5363,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5361,"column":0},"generated":{"line":5364,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5362,"column":0},"generated":{"line":5365,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5363,"column":0},"generated":{"line":5366,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5364,"column":0},"generated":{"line":5367,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5365,"column":0},"generated":{"line":5368,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5366,"column":0},"generated":{"line":5369,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5367,"column":0},"generated":{"line":5370,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5368,"column":0},"generated":{"line":5371,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5369,"column":0},"generated":{"line":5372,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5370,"column":0},"generated":{"line":5373,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5371,"column":0},"generated":{"line":5374,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5372,"column":0},"generated":{"line":5375,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5373,"column":0},"generated":{"line":5376,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5374,"column":0},"generated":{"line":5377,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5375,"column":0},"generated":{"line":5378,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5376,"column":0},"generated":{"line":5379,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5377,"column":0},"generated":{"line":5380,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5378,"column":0},"generated":{"line":5381,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5379,"column":0},"generated":{"line":5382,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5380,"column":0},"generated":{"line":5383,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5381,"column":0},"generated":{"line":5384,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5382,"column":0},"generated":{"line":5385,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5383,"column":0},"generated":{"line":5386,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5384,"column":0},"generated":{"line":5387,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5385,"column":0},"generated":{"line":5388,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5386,"column":0},"generated":{"line":5389,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5387,"column":0},"generated":{"line":5390,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5388,"column":0},"generated":{"line":5391,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5389,"column":0},"generated":{"line":5392,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5390,"column":0},"generated":{"line":5393,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5391,"column":0},"generated":{"line":5394,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5392,"column":0},"generated":{"line":5395,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5393,"column":0},"generated":{"line":5396,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5394,"column":0},"generated":{"line":5397,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5395,"column":0},"generated":{"line":5398,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5396,"column":0},"generated":{"line":5399,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5397,"column":0},"generated":{"line":5400,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5398,"column":0},"generated":{"line":5401,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5399,"column":0},"generated":{"line":5402,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5400,"column":0},"generated":{"line":5403,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5401,"column":0},"generated":{"line":5404,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5402,"column":0},"generated":{"line":5405,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5403,"column":0},"generated":{"line":5406,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5404,"column":0},"generated":{"line":5407,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5405,"column":0},"generated":{"line":5408,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5406,"column":0},"generated":{"line":5409,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5407,"column":0},"generated":{"line":5410,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5408,"column":0},"generated":{"line":5411,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5409,"column":0},"generated":{"line":5412,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5410,"column":0},"generated":{"line":5413,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5411,"column":0},"generated":{"line":5414,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5412,"column":0},"generated":{"line":5415,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5413,"column":0},"generated":{"line":5416,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5414,"column":0},"generated":{"line":5417,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5415,"column":0},"generated":{"line":5418,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5416,"column":0},"generated":{"line":5419,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5417,"column":0},"generated":{"line":5420,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5418,"column":0},"generated":{"line":5421,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5419,"column":0},"generated":{"line":5422,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5420,"column":0},"generated":{"line":5423,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5421,"column":0},"generated":{"line":5424,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5422,"column":0},"generated":{"line":5425,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5423,"column":0},"generated":{"line":5426,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5424,"column":0},"generated":{"line":5427,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5425,"column":0},"generated":{"line":5428,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5426,"column":0},"generated":{"line":5429,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5427,"column":0},"generated":{"line":5430,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5428,"column":0},"generated":{"line":5431,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5429,"column":0},"generated":{"line":5432,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5430,"column":0},"generated":{"line":5433,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5431,"column":0},"generated":{"line":5434,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5432,"column":0},"generated":{"line":5435,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5433,"column":0},"generated":{"line":5436,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5434,"column":0},"generated":{"line":5437,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5435,"column":0},"generated":{"line":5438,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5436,"column":0},"generated":{"line":5439,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5437,"column":0},"generated":{"line":5440,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5438,"column":0},"generated":{"line":5441,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5439,"column":0},"generated":{"line":5442,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5440,"column":0},"generated":{"line":5443,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5441,"column":0},"generated":{"line":5444,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5442,"column":0},"generated":{"line":5445,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5443,"column":0},"generated":{"line":5446,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5444,"column":0},"generated":{"line":5447,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5445,"column":0},"generated":{"line":5448,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5446,"column":0},"generated":{"line":5449,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5447,"column":0},"generated":{"line":5450,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5448,"column":0},"generated":{"line":5451,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5449,"column":0},"generated":{"line":5452,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5450,"column":0},"generated":{"line":5453,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5451,"column":0},"generated":{"line":5454,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5452,"column":0},"generated":{"line":5455,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5453,"column":0},"generated":{"line":5456,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5454,"column":0},"generated":{"line":5457,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5455,"column":0},"generated":{"line":5458,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5456,"column":0},"generated":{"line":5459,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5457,"column":0},"generated":{"line":5460,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5458,"column":0},"generated":{"line":5461,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5459,"column":0},"generated":{"line":5462,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5460,"column":0},"generated":{"line":5463,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5461,"column":0},"generated":{"line":5464,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5462,"column":0},"generated":{"line":5465,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5463,"column":0},"generated":{"line":5466,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5464,"column":0},"generated":{"line":5467,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5465,"column":0},"generated":{"line":5468,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5466,"column":0},"generated":{"line":5469,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5467,"column":0},"generated":{"line":5470,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5468,"column":0},"generated":{"line":5471,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5469,"column":0},"generated":{"line":5472,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5470,"column":0},"generated":{"line":5473,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5471,"column":0},"generated":{"line":5474,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5472,"column":0},"generated":{"line":5475,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5473,"column":0},"generated":{"line":5476,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5474,"column":0},"generated":{"line":5477,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5475,"column":0},"generated":{"line":5478,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5476,"column":0},"generated":{"line":5479,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5477,"column":0},"generated":{"line":5480,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5478,"column":0},"generated":{"line":5481,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5479,"column":0},"generated":{"line":5482,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5480,"column":0},"generated":{"line":5483,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5481,"column":0},"generated":{"line":5484,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5482,"column":0},"generated":{"line":5485,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5483,"column":0},"generated":{"line":5486,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5484,"column":0},"generated":{"line":5487,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5485,"column":0},"generated":{"line":5488,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5486,"column":0},"generated":{"line":5489,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5487,"column":0},"generated":{"line":5490,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5488,"column":0},"generated":{"line":5491,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5489,"column":0},"generated":{"line":5492,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5490,"column":0},"generated":{"line":5493,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5491,"column":0},"generated":{"line":5494,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5492,"column":0},"generated":{"line":5495,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5493,"column":0},"generated":{"line":5496,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5494,"column":0},"generated":{"line":5497,"column":0}},{"source":"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js","original":{"line":5495,"column":0},"generated":{"line":5498,"column":0}}],"sources":{"node_modules/troika-3d-text/dist/textmesh-standalone.umd.js":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('three'), require('troika-worker-utils'), require('troika-three-utils')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'three', 'troika-worker-utils', 'troika-three-utils'], factory) :\n  (global = global || self, factory(global.troika_3d_text = {}, global.THREE, global.troika_worker_utils, global.troika_three_utils));\n}(this, (function (exports, three, troikaWorkerUtils, troikaThreeUtils) { 'use strict';\n\n  /**\n   * Initializes and returns a function to generate an SDF texture for a given glyph.\n   * @param {function} createGlyphSegmentsQuadtree - factory for a GlyphSegmentsQuadtree implementation.\n   * @param {number} config.sdfTextureSize - the length of one side of the resulting texture image.\n   *                 Larger images encode more details. Should be a power of 2.\n   * @param {number} config.sdfDistancePercent - see docs for SDF_DISTANCE_PERCENT in TextBuilder.js\n   *\n   * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\n   */\n  function createSDFGenerator(createGlyphSegmentsQuadtree, config) {\n    var sdfTextureSize = config.sdfTextureSize;\n    var sdfDistancePercent = config.sdfDistancePercent;\n\n    /**\n     * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n     */\n    var CURVE_POINTS = 16;\n\n    /**\n     * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n        y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n      }\n    }\n\n    /**\n     * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n        y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n      }\n    }\n\n    /**\n     * Generate an SDF texture segment for a single glyph.\n     * @param {object} glyphObj\n     * @return {{textureData: Uint8Array, renderingBounds: *[]}}\n     */\n    function generateSDF(glyphObj) {\n      //console.time('glyphSDF')\n\n      var textureData = new Uint8Array(sdfTextureSize * sdfTextureSize);\n\n      // Determine mapping between glyph grid coords and sdf grid coords\n      var glyphW = glyphObj.xMax - glyphObj.xMin;\n      var glyphH = glyphObj.yMax - glyphObj.yMin;\n\n      // Choose a maximum distance radius in font units, based on the glyph's max dimensions\n      var fontUnitsMaxDist = Math.max(glyphW, glyphH) * sdfDistancePercent;\n\n      // Use that, extending to the texture edges, to find conversion ratios between texture units and font units\n      var fontUnitsPerXTexel = (glyphW + fontUnitsMaxDist * 2) / sdfTextureSize;\n      var fontUnitsPerYTexel = (glyphH + fontUnitsMaxDist * 2) / sdfTextureSize;\n\n      var textureMinFontX = glyphObj.xMin - fontUnitsMaxDist - fontUnitsPerXTexel;\n      var textureMinFontY = glyphObj.yMin - fontUnitsMaxDist - fontUnitsPerYTexel;\n      var textureMaxFontX = glyphObj.xMax + fontUnitsMaxDist + fontUnitsPerXTexel;\n      var textureMaxFontY = glyphObj.yMax + fontUnitsMaxDist + fontUnitsPerYTexel;\n\n      function textureXToFontX(x) {\n        return textureMinFontX + (textureMaxFontX - textureMinFontX) * x / sdfTextureSize\n      }\n\n      function textureYToFontY(y) {\n        return textureMinFontY + (textureMaxFontY - textureMinFontY) * y / sdfTextureSize\n      }\n\n      if (glyphObj.pathCommandCount) { //whitespace chars will have no commands, so we can skip all this\n        // Decompose all paths into straight line segments and add them to a quadtree\n        var lineSegmentsIndex = createGlyphSegmentsQuadtree(glyphObj);\n        var firstX, firstY, prevX, prevY;\n        glyphObj.forEachPathCommand(function (type, x0, y0, x1, y1, x2, y2) {\n          switch (type) {\n            case 'M':\n              prevX = firstX = x0;\n              prevY = firstY = y0;\n              break\n            case 'L':\n              if (x0 !== prevX || y0 !== prevY) { //yup, some fonts have zero-length line commands\n                lineSegmentsIndex.addLineSegment(prevX, prevY, (prevX = x0), (prevY = y0));\n              }\n              break\n            case 'Q': {\n              var prevPoint = {x: prevX, y: prevY};\n              for (var i = 1; i < CURVE_POINTS; i++) {\n                var nextPoint = pointOnQuadraticBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  i / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n                prevPoint = nextPoint;\n              }\n              prevX = x1;\n              prevY = y1;\n              break\n            }\n            case 'C': {\n              var prevPoint$1 = {x: prevX, y: prevY};\n              for (var i$1 = 1; i$1 < CURVE_POINTS; i$1++) {\n                var nextPoint$1 = pointOnCubicBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  x2, y2,\n                  i$1 / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint$1.x, prevPoint$1.y, nextPoint$1.x, nextPoint$1.y);\n                prevPoint$1 = nextPoint$1;\n              }\n              prevX = x2;\n              prevY = y2;\n              break\n            }\n            case 'Z':\n              if (prevX !== firstX || prevY !== firstY) {\n                lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n              }\n              break\n          }\n        });\n\n        // For each target SDF texel, find the distance from its center to its nearest line segment,\n        // map that distance to an alpha value, and write that alpha to the texel\n        for (var sdfX = 0; sdfX < sdfTextureSize; sdfX++) {\n          for (var sdfY = 0; sdfY < sdfTextureSize; sdfY++) {\n            var signedDist = lineSegmentsIndex.findNearestSignedDistance(\n              textureXToFontX(sdfX + 0.5),\n              textureYToFontY(sdfY + 0.5),\n              fontUnitsMaxDist\n            );\n            //if (!isFinite(signedDist)) throw 'infinite distance!'\n            var alpha = isFinite(signedDist) ? Math.round(255 * (1 + signedDist / fontUnitsMaxDist) * 0.5) : signedDist;\n            alpha = Math.max(0, Math.min(255, alpha)); //clamp\n            textureData[sdfY * sdfTextureSize + sdfX] = alpha;\n          }\n        }\n      }\n\n      //console.timeEnd('glyphSDF')\n\n      return {\n        textureData: textureData,\n\n        renderingBounds: [\n          textureMinFontX,\n          textureMinFontY,\n          textureMaxFontX,\n          textureMaxFontY\n        ]\n      }\n    }\n\n\n    return generateSDF\n  }\n\n  /**\n   * Creates a self-contained environment for processing text rendering requests.\n   *\n   * It is important that this function has no closure dependencies, so that it can be easily injected\n   * into the source for a Worker without requiring a build step or complex dependency loading. All its\n   * dependencies must be passed in at initialization.\n   *\n   * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n   * a standardized structure giving access to the font and its glyphs:\n   *   {\n   *     unitsPerEm: number,\n   *     ascender: number,\n   *     descender: number,\n   *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n   *       //invokes callback for each glyph to render, passing it an object:\n   *       callback({\n   *         index: number,\n   *         advanceWidth: number,\n   *         xMin: number,\n   *         yMin: number,\n   *         xMax: number,\n   *         yMax: number,\n   *         pathCommandCount: number,\n   *         forEachPathCommand(callback) {\n   *           //invokes callback for each path command, with args:\n   *           callback(\n   *             type: 'M|L|C|Q|Z',\n   *             ...args //0 to 6 args depending on the type\n   *           )\n   *         }\n   *       })\n   *     }\n   *   }\n   * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\n   * from it.\n   * @param {Object} config\n   * @return {Object}\n   */\n  function createFontProcessor(fontParser, sdfGenerator, config) {\n\n    var defaultFontUrl = config.defaultFontUrl;\n\n\n    /**\n     * @private\n     * Holds the loaded data for all fonts\n     *\n     * {\n     *   fontUrl: {\n     *     fontObj: {}, //result of the fontParser\n     *     glyphs: {\n     *       [glyphIndex]: {\n     *         atlasIndex: 0,\n     *         glyphObj: {}, //glyph object from the fontParser\n     *         renderingBounds: [x0, y0, x1, y1]\n     *       },\n     *       ...\n     *     },\n     *     glyphCount: 123\n     *   }\n     * }\n     */\n    var fonts = Object.create(null);\n\n    var INF = Infinity;\n\n\n    /**\n     * Load a given font url\n     */\n    function doLoadFont(url, callback) {\n      function tryLoad() {\n        var onError = function (err) {\n          console.error((\"Failure loading font \" + url + (url === defaultFontUrl ? '' : '; trying fallback')), err);\n          if (url !== defaultFontUrl) {\n            url = defaultFontUrl;\n            tryLoad();\n          }\n        };\n        try {\n          var request = new XMLHttpRequest();\n          request.open('get', url, true);\n          request.responseType = 'arraybuffer';\n          request.onload = function () {\n            if (request.status >= 400) {\n              onError(new Error(request.statusText));\n            }\n            else if (request.status > 0) {\n              try {\n                var fontObj = fontParser(request.response);\n                callback(fontObj);\n              } catch (e) {\n                onError(e);\n              }\n            }\n          };\n          request.onerror = onError;\n          request.send();\n        } catch(err) {\n          onError(err);\n        }\n      }\n      tryLoad();\n    }\n\n\n    /**\n     * Load a given font url if needed, invoking a callback when it's loaded. If already\n     * loaded, the callback will be called synchronously.\n     */\n    function loadFont(fontUrl, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      var atlas = fonts[fontUrl];\n      if (atlas) {\n        // if currently loading font, add to callbacks, otherwise execute immediately\n        if (atlas.onload) {\n          atlas.onload.push(callback);\n        } else {\n          callback();\n        }\n      } else {\n        var loadingAtlas = fonts[fontUrl] = {onload: [callback]};\n        doLoadFont(fontUrl, function (fontObj) {\n          atlas = fonts[fontUrl] = {\n            fontObj: fontObj,\n            glyphs: {},\n            glyphCount: 0\n          };\n          loadingAtlas.onload.forEach(function (cb) { return cb(); });\n        });\n      }\n    }\n\n\n    /**\n     * Get the atlas data for a given font url, loading it from the network and initializing\n     * its atlas data objects if necessary.\n     */\n    function getSdfAtlas(fontUrl, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      loadFont(fontUrl, function () {\n        callback(fonts[fontUrl]);\n      });\n    }\n\n\n    /**\n     * Main entry point.\n     * Process a text string with given font and formatting parameters, and return all info\n     * necessary to render all its glyphs.\n     */\n    function process(\n      ref,\n      callback,\n      metricsOnly\n    ) {\n      var text = ref.text; if ( text === void 0 ) text = '';\n      var font = ref.font; if ( font === void 0 ) font = defaultFontUrl;\n      var fontSize = ref.fontSize; if ( fontSize === void 0 ) fontSize = 1;\n      var letterSpacing = ref.letterSpacing; if ( letterSpacing === void 0 ) letterSpacing = 0;\n      var lineHeight = ref.lineHeight; if ( lineHeight === void 0 ) lineHeight = 'normal';\n      var maxWidth = ref.maxWidth; if ( maxWidth === void 0 ) maxWidth = INF;\n      var textAlign = ref.textAlign; if ( textAlign === void 0 ) textAlign = 'left';\n      var whiteSpace = ref.whiteSpace; if ( whiteSpace === void 0 ) whiteSpace = 'normal';\n      var overflowWrap = ref.overflowWrap; if ( overflowWrap === void 0 ) overflowWrap = 'normal';\n      var anchorX = ref.anchorX; if ( anchorX === void 0 ) anchorX = 0;\n      var anchorY = ref.anchorY; if ( anchorY === void 0 ) anchorY = 0;\n      var includeCaretPositions = ref.includeCaretPositions; if ( includeCaretPositions === void 0 ) includeCaretPositions = false;\n      var chunkedBoundsSize = ref.chunkedBoundsSize; if ( chunkedBoundsSize === void 0 ) chunkedBoundsSize = 8192;\n      var colorRanges = ref.colorRanges; if ( colorRanges === void 0 ) colorRanges = null;\n      if ( metricsOnly === void 0 ) metricsOnly=false;\n\n      var mainStart = now();\n      var timings = {total: 0, fontLoad: 0, layout: 0, sdf: {}, sdfTotal: 0};\n\n      // Ensure newlines are normalized\n      if (text.indexOf('\\r') > -1) {\n        console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\n        text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      }\n\n      // Ensure we've got numbers not strings\n      fontSize = +fontSize;\n      letterSpacing = +letterSpacing;\n      maxWidth = +maxWidth;\n      lineHeight = lineHeight || 'normal';\n\n      getSdfAtlas(font, function (atlas) {\n        var fontObj = atlas.fontObj;\n        var hasMaxWidth = isFinite(maxWidth);\n        var newGlyphs = null;\n        var glyphBounds = null;\n        var glyphAtlasIndices = null;\n        var glyphColors = null;\n        var caretPositions = null;\n        var totalBounds = null;\n        var chunkedBounds = null;\n        var maxLineWidth = 0;\n        var renderableGlyphCount = 0;\n        var canWrap = whiteSpace !== 'nowrap';\n        var ascender = fontObj.ascender;\n        var descender = fontObj.descender;\n        var unitsPerEm = fontObj.unitsPerEm;\n        timings.fontLoad = now() - mainStart;\n        var layoutStart = now();\n\n        // Find conversion between native font units and fontSize units; this will already be done\n        // for the gx/gy values below but everything else we'll need to convert\n        var fontSizeMult = fontSize / unitsPerEm;\n\n        // Determine appropriate value for 'normal' line height based on the font's actual metrics\n        // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n        if (lineHeight === 'normal') {\n          lineHeight = (ascender - descender) / unitsPerEm;\n        }\n\n        // Determine line height and leading adjustments\n        lineHeight = lineHeight * fontSize;\n        var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n        var topBaseline = -(fontSize + halfLeading);\n        var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n        var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n        // Distribute glyphs into lines based on wrapping\n        var lineXOffset = 0;\n        var currentLine = new TextLine();\n        var lines = [currentLine];\n        fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n          var char = text.charAt(charIndex);\n          var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n          var curLineCount = currentLine.count;\n          var nextLine;\n\n          // Calc isWhitespace and isEmpty once per glyphObj\n          if (!('isEmpty' in glyphObj)) {\n            glyphObj.isWhitespace = !!char && /\\s/.test(char);\n            glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax;\n          }\n          if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n            renderableGlyphCount++;\n          }\n\n          // If a non-whitespace character overflows the max width, we need to soft-wrap\n          if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n            // If it's the first char after a whitespace, start a new line\n            if (currentLine.glyphAt(curLineCount - 1).glyphObj.isWhitespace) {\n              nextLine = new TextLine();\n              lineXOffset = -glyphX;\n            } else {\n              // Back up looking for a whitespace character to wrap at\n              for (var i = curLineCount; i--;) {\n                // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n                if (i === 0 && overflowWrap === 'break-word') {\n                  nextLine = new TextLine();\n                  lineXOffset = -glyphX;\n                  break\n                }\n                // Found a soft break point; move all chars since it to a new line\n                else if (currentLine.glyphAt(i).glyphObj.isWhitespace) {\n                  nextLine = currentLine.splitAt(i + 1);\n                  var adjustX = nextLine.glyphAt(0).x;\n                  lineXOffset -= adjustX;\n                  for (var j = nextLine.count; j--;) {\n                    nextLine.glyphAt(j).x -= adjustX;\n                  }\n                  break\n                }\n              }\n            }\n            if (nextLine) {\n              currentLine.isSoftWrapped = true;\n              currentLine = nextLine;\n              lines.push(currentLine);\n              maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n            }\n          }\n\n          var fly = currentLine.glyphAt(currentLine.count);\n          fly.glyphObj = glyphObj;\n          fly.x = glyphX + lineXOffset;\n          fly.width = glyphWidth;\n          fly.charIndex = charIndex;\n\n          // Handle hard line breaks\n          if (char === '\\n') {\n            currentLine = new TextLine();\n            lines.push(currentLine);\n            lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize));\n          }\n        });\n\n        // Calculate width of each line (excluding trailing whitespace) and maximum block width\n        lines.forEach(function (line) {\n          for (var i = line.count; i--;) {\n            var ref = line.glyphAt(i);\n            var glyphObj = ref.glyphObj;\n            var x = ref.x;\n            var width = ref.width;\n            if (!glyphObj.isWhitespace) {\n              line.width = x + width;\n              if (line.width > maxLineWidth) {\n                maxLineWidth = line.width;\n              }\n              return\n            }\n          }\n        });\n\n        if (!metricsOnly) {\n          // Find overall position adjustments for anchoring\n          var anchorXOffset = 0;\n          var anchorYOffset = 0;\n          if (anchorX) {\n            if (typeof anchorX === 'number') {\n              anchorXOffset = -anchorX;\n            }\n            else if (typeof anchorX === 'string') {\n              anchorXOffset = -maxLineWidth * (\n                anchorX === 'left' ? 0 :\n                anchorX === 'center' ? 0.5 :\n                anchorX === 'right' ? 1 :\n                parsePercent(anchorX)\n              );\n            }\n          }\n          if (anchorY) {\n            if (typeof anchorY === 'number') {\n              anchorYOffset = -anchorY;\n            }\n            else if (typeof anchorY === 'string') {\n              var height = lines.length * lineHeight;\n              anchorYOffset = anchorY === 'top' ? 0 :\n                anchorY === 'top-baseline' ? -topBaseline :\n                anchorY === 'middle' ? height / 2 :\n                anchorY === 'bottom' ? height :\n                anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\n                parsePercent(anchorY) * height;\n            }\n          }\n\n          // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n          // collecting all renderable glyphs into a single collection.\n          glyphBounds = new Float32Array(renderableGlyphCount * 4);\n          glyphAtlasIndices = new Float32Array(renderableGlyphCount);\n          totalBounds = [INF, INF, -INF, -INF];\n          chunkedBounds = [];\n          var lineYOffset = topBaseline;\n          if (includeCaretPositions) {\n            caretPositions = new Float32Array(text.length * 3);\n          }\n          if (colorRanges) {\n            glyphColors = new Uint8Array(renderableGlyphCount * 3);\n          }\n          var renderableGlyphIndex = 0;\n          var prevCharIndex = -1;\n          var colorCharIndex = -1;\n          var chunk;\n          var currentColor;\n          lines.forEach(function (line) {\n            var lineGlyphCount = line.count;\n            var lineWidth = line.width;\n\n            // Ignore empty lines\n            if (lineGlyphCount > 0) {\n              // Find x offset for horizontal alignment\n              var lineXOffset = 0;\n              var justifyAdjust = 0;\n              if (textAlign === 'center') {\n                lineXOffset = (maxLineWidth - lineWidth) / 2;\n              } else if (textAlign === 'right') {\n                lineXOffset = maxLineWidth - lineWidth;\n              } else if (textAlign === 'justify' && line.isSoftWrapped) {\n                // just count the non-trailing whitespace characters, and we'll adjust the offsets per\n                // character in the next loop\n                var whitespaceCount = 0;\n                for (var i = lineGlyphCount; i--;) {\n                  if (!line.glyphAt(i).glyphObj.isWhitespace) {\n                    while (i--) {\n                      if (!line.glyphAt(i).glyphObj) {\n                        debugger\n                      }\n                      if (line.glyphAt(i).glyphObj.isWhitespace) {\n                        whitespaceCount++;\n                      }\n                    }\n                    break\n                  }\n                }\n                justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n              }\n\n              for (var i$1 = 0; i$1 < lineGlyphCount; i$1++) {\n                var glyphInfo = line.glyphAt(i$1);\n                var glyphObj = glyphInfo.glyphObj;\n\n                // Apply position adjustments\n                if (lineXOffset) { glyphInfo.x += lineXOffset; }\n\n                // Expand whitespaces for justify alignment\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace) {\n                  lineXOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n\n                // Add caret positions\n                if (includeCaretPositions) {\n                  var charIndex = glyphInfo.charIndex;\n                  caretPositions[charIndex * 3] = glyphInfo.x + anchorXOffset; //left edge x\n                  caretPositions[charIndex * 3 + 1] = glyphInfo.x + glyphInfo.width + anchorXOffset; //right edge x\n                  caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n\n                  // If we skipped any chars from the previous glyph (due to ligature subs), copy the\n                  // previous glyph's info to those missing char indices. In the future we may try to\n                  // use the font's LigatureCaretList table to get interior caret positions.\n                  while (charIndex - prevCharIndex > 1) {\n                    caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\n                    prevCharIndex++;\n                  }\n                  prevCharIndex = charIndex;\n                }\n\n                // Track current color range\n                if (colorRanges) {\n                  var charIndex$1 = glyphInfo.charIndex;\n                  while(charIndex$1 > colorCharIndex) {\n                    colorCharIndex++;\n                    if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                      currentColor = colorRanges[colorCharIndex];\n                    }\n                  }\n                }\n\n                // Get atlas data for renderable glyphs\n                if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                  var idx = renderableGlyphIndex++;\n\n                  // If we haven't seen this glyph yet, generate its SDF\n                  var glyphAtlasInfo = atlas.glyphs[glyphObj.index];\n                  if (!glyphAtlasInfo) {\n                    var sdfStart = now();\n                    var glyphSDFData = sdfGenerator(glyphObj);\n                    timings.sdf[text.charAt(glyphInfo.charIndex)] = now() - sdfStart;\n\n                    // Assign this glyph the next available atlas index\n                    glyphSDFData.atlasIndex = atlas.glyphCount++;\n\n                    // Queue it up in the response's newGlyphs list\n                    if (!newGlyphs) { newGlyphs = []; }\n                    newGlyphs.push(glyphSDFData);\n\n                    // Store its metadata (not the texture) in our atlas info\n                    glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\n                      atlasIndex: glyphSDFData.atlasIndex,\n                      glyphObj: glyphObj,\n                      renderingBounds: glyphSDFData.renderingBounds\n                    };\n                  }\n\n                  // Determine final glyph bounds and add them to the glyphBounds array\n                  var bounds = glyphAtlasInfo.renderingBounds;\n                  var start = idx * 4;\n                  var x0 = glyphBounds[start] = glyphInfo.x + bounds[0] * fontSizeMult + anchorXOffset;\n                  var y0 = glyphBounds[start + 1] = lineYOffset + bounds[1] * fontSizeMult + anchorYOffset;\n                  var x1 = glyphBounds[start + 2] = glyphInfo.x + bounds[2] * fontSizeMult + anchorXOffset;\n                  var y1 = glyphBounds[start + 3] = lineYOffset + bounds[3] * fontSizeMult + anchorYOffset;\n\n                  // Track total bounds\n                  if (x0 < totalBounds[0]) { totalBounds[0] = x0; }\n                  if (y0 < totalBounds[1]) { totalBounds[1] = y0; }\n                  if (x1 > totalBounds[2]) { totalBounds[2] = x1; }\n                  if (y1 > totalBounds[3]) { totalBounds[3] = y1; }\n\n                  // Track bounding rects for each chunk of N glyphs\n                  if (idx % chunkedBoundsSize === 0) {\n                    chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\n                    chunkedBounds.push(chunk);\n                  }\n                  chunk.end++;\n                  if (x0 < chunk.rect[0]) { chunk.rect[0] = x0; }\n                  if (y0 < chunk.rect[1]) { chunk.rect[1] = y0; }\n                  if (x1 > chunk.rect[2]) { chunk.rect[2] = x1; }\n                  if (y1 > chunk.rect[3]) { chunk.rect[3] = y1; }\n\n                  // Add to atlas indices array\n                  glyphAtlasIndices[idx] = glyphAtlasInfo.atlasIndex;\n\n                  // Add colors\n                  if (colorRanges) {\n                    var start$1 = idx * 3;\n                    glyphColors[start$1] = currentColor >> 16 & 255;\n                    glyphColors[start$1 + 1] = currentColor >> 8 & 255;\n                    glyphColors[start$1 + 2] = currentColor & 255;\n                  }\n                }\n              }\n            }\n\n            // Increment y offset for next line\n            lineYOffset -= lineHeight;\n          });\n        }\n\n        // Timing stats\n        for (var ch in timings.sdf) {\n          timings.sdfTotal += timings.sdf[ch];\n        }\n        timings.layout = now() - layoutStart - timings.sdfTotal;\n        timings.total = now() - mainStart;\n\n        callback({\n          glyphBounds: glyphBounds, //rendering quad bounds for each glyph [x1, y1, x2, y2]\n          glyphAtlasIndices: glyphAtlasIndices, //atlas indices for each glyph\n          caretPositions: caretPositions, //x,y of bottom of cursor position before each char, plus one after last char\n          caretHeight: caretHeight, //height of cursor from bottom to top\n          glyphColors: glyphColors, //color for each glyph, if color ranges supplied\n          chunkedBounds: chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\n          ascender: ascender * fontSizeMult, //font ascender\n          descender: descender * fontSizeMult, //font descender\n          lineHeight: lineHeight, //computed line height\n          topBaseline: topBaseline, //y coordinate of the top line's baseline\n          totalBounds: totalBounds, //total rect including all glyphBounds; will be slightly larger than glyph edges due to SDF padding\n          totalBlockSize: [maxLineWidth, lines.length * lineHeight], //width and height of the text block; accurate for layout measurement\n          newGlyphSDFs: newGlyphs, //if this request included any new SDFs for the atlas, they'll be included here\n          timings: timings\n        });\n      });\n    }\n\n\n    /**\n     * For a given text string and font parameters, determine the resulting block dimensions\n     * after wrapping for the given maxWidth.\n     * @param args\n     * @param callback\n     */\n    function measure(args, callback) {\n      process(args, function (result) {\n        callback({\n          width: result.totalBlockSize[0],\n          height: result.totalBlockSize[1]\n        });\n      }, {metricsOnly: true});\n    }\n\n    function parsePercent(str) {\n      var match = str.match(/^([\\d.]+)%$/);\n      var pct = match ? parseFloat(match[1]) : NaN;\n      return isNaN(pct) ? 0 : pct / 100\n    }\n\n    function now() {\n      return (self.performance || Date).now()\n    }\n\n    // Array-backed structure for a single line's glyphs data\n    function TextLine() {\n      this.data = [];\n    }\n    TextLine.prototype = {\n      width: 0,\n      isSoftWrapped: false,\n      get count() {\n        return Math.ceil(this.data.length / 4)\n      },\n      glyphAt: function glyphAt(i) {\n        var fly = TextLine.flyweight;\n        fly.data = this.data;\n        fly.index = i;\n        return fly\n      },\n      splitAt: function splitAt(i) {\n        var newLine = new TextLine();\n        newLine.data = this.data.splice(i * 4);\n        return newLine\n      }\n    };\n    TextLine.flyweight = ['glyphObj', 'x', 'width', 'charIndex'].reduce(function (obj, prop, i, all) {\n      Object.defineProperty(obj, prop, {\n        get: function get() {\n          return this.data[this.index * 4 + i]\n        },\n        set: function set(val) {\n          this.data[this.index * 4 + i] = val;\n        }\n      });\n      return obj\n    }, {data: null, index: 0});\n\n\n    return {\n      process: process,\n      measure: measure,\n      loadFont: loadFont\n    }\n  }\n\n  /**\n   * Basic quadtree impl for performing fast spatial searches of a glyph's line segments.\n   */\n  function createGlyphSegmentsQuadtree(glyphObj) {\n    // Pick a good initial power-of-two bounding box that will hold all possible segments\n    var xMin = glyphObj.xMin;\n    var yMin = glyphObj.yMin;\n    var xMax = glyphObj.xMax;\n    var yMax = glyphObj.yMax;\n    var dx = xMax - xMin;\n    var dy = yMax - yMin;\n    var cx = Math.round(xMin + dx / 2);\n    var cy = Math.round(yMin + dy / 2);\n    var r = Math.pow(2, Math.floor(Math.log(Math.max(dx, dy)) * Math.LOG2E));\n    var INF = Infinity;\n\n    var root = {\n      0: null,\n      1: null,\n      2: null,\n      3: null,\n      data: null,\n      cx: cx,\n      cy: cy,\n      r: r,\n      minX: INF,\n      minY: INF,\n      maxX: -INF,\n      maxY: -INF\n    };\n\n    /**\n     * Add a line segment to the quadtree.\n     * @param x0\n     * @param y0\n     * @param x1\n     * @param y1\n     */\n    function addLineSegment(x0, y0, x1, y1) {\n      var cx = (x0 + x1) / 2;\n      var cy = (y0 + y1) / 2;\n      var segment = {\n        x0: x0, y0: y0, x1: x1, y1: y1, cx: cx, cy: cy,\n        minX: Math.min(x0, x1),\n        minY: Math.min(y0, y1),\n        maxX: Math.max(x0, x1),\n        maxY: Math.max(y0, y1),\n        next: null\n      };\n      insertSegment(segment, root);\n    }\n\n    function insertSegment(segment, node) {\n      // update node min/max stats\n      var minX = segment.minX;\n      var minY = segment.minY;\n      var maxX = segment.maxX;\n      var maxY = segment.maxY;\n      var cx = segment.cx;\n      var cy = segment.cy;\n      if (minX < node.minX) { node.minX = minX; }\n      if (minY < node.minY) { node.minY = minY; }\n      if (maxX > node.maxX) { node.maxX = maxX; }\n      if (maxY > node.maxY) { node.maxY = maxY; }\n\n      // leaf\n      var leafSegment = node.data;\n      if (leafSegment) {\n        // coincident; push as linked list\n        if (leafSegment.cx === cx && leafSegment.cy === cy) {\n          while (leafSegment.next) { leafSegment = leafSegment.next; }\n          leafSegment.next = segment;\n        }\n        // non-coincident; split leaf to branch\n        else {\n          node.data = null;\n          insertSegment(leafSegment, node);\n          insertSegment(segment, node);\n        }\n      }\n      // branch\n      else {\n        // find target sub-index for the segment's centerpoint\n        var subIndex = (cy < node.cy ? 0 : 2) + (cx < node.cx ? 0 : 1);\n\n        // subnode already at index: recurse\n        if (node[subIndex]) {\n          insertSegment(segment, node[subIndex]);\n        }\n        // create new leaf\n        else {\n          node[subIndex] = {\n            0: null,\n            1: null,\n            2: null,\n            3: null,\n            data: segment,\n            cx: node.cx + node.r / 2 * (subIndex % 2 ? 1 : -1),\n            cy: node.cy + node.r / 2 * (subIndex < 2 ? -1 : 1),\n            r: node.r / 2,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY\n          };\n        }\n      }\n    }\n\n    function walkTree(callback) {\n      walkBranch(root, callback);\n    }\n\n    function walkBranch(root, callback) {\n      if (callback(root) !== false && !root.data) {\n        for (var i = 0; i < 4; i++) {\n          if (root[i] !== null) {\n            walkBranch(root[i], callback);\n          }\n        }\n      }\n    }\n\n    /**\n     * For a given x/y, search the quadtree for the closest line segment and return\n     * its signed distance.\n     * @param x\n     * @param y\n     * @param maxSearchRadius\n     * @returns {number}\n     */\n    function findNearestSignedDistance(x, y, maxSearchRadius) {\n      var closestDist = maxSearchRadius;\n      var closestDistSq = closestDist * closestDist;\n\n      walkTree(function visit(node) {\n        // Ignore nodes that can't possibly have segments closer than what we've already found. We base\n        // this on a simple rect bounds check; radial would be more accurate but much slower.\n        if (\n          x - closestDist > node.maxX || x + closestDist < node.minX ||\n          y - closestDist > node.maxY || y + closestDist < node.minY\n        ) {\n          return false\n        }\n\n        // Leaf - check each segment's actual distance\n        for (var segment = node.data; segment; segment = segment.next) {\n          var distSq = absSquareDistanceToLineSegment(x, y, segment.x0, segment.y0, segment.x1, segment.y1);\n          if (distSq < closestDistSq) {\n            closestDistSq = distSq;\n            closestDist = Math.sqrt(distSq);\n          }\n        }\n      });\n\n      // Flip to negative distance if outside the poly\n      if (!isPointInPoly(x, y)) {\n        closestDist = -closestDist;\n      }\n      return closestDist\n    }\n\n    // Determine whether the given point lies inside or outside the glyph. Uses a simple\n    // ray casting algorithm using a ray pointing east from the point, optimized by using\n    // the quadtree search to test as few lines as possible.\n    function isPointInPoly(x, y) {\n      var inside = false;\n      walkTree(function (node) {\n        // Ignore nodes whose bounds can't possibly cross our east-pointing ray\n        if (node.maxX < x || node.minY > y || node.maxY < y) {\n          return false\n        }\n\n        // Leaf - test each segment for whether it crosses our east-pointing ray\n        for (var segment = node.data; segment; segment = segment.next) {\n          var x0 = segment.x0;\n          var y0 = segment.y0;\n          var x1 = segment.x1;\n          var y1 = segment.y1;\n          var intersects = ((y0 > y) !== (y1 > y)) && (x < (x1 - x0) * (y - y0) / (y1 - y0) + x0);\n          if (intersects) {\n            inside = !inside;\n          }\n        }\n      });\n      return inside\n    }\n\n    // Find the absolute distance from a point to a line segment at closest approach\n    function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n      var ldx = lineX1 - lineX0;\n      var ldy = lineY1 - lineY0;\n      var lengthSq = ldx * ldx + ldy * ldy;\n      var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n      var dx = x - (lineX0 + t * ldx);\n      var dy = y - (lineY0 + t * ldy);\n      return dx * dx + dy * dy\n    }\n\n    return {\n      addLineSegment: addLineSegment,\n      findNearestSignedDistance: findNearestSignedDistance\n    }\n  }\n\n  // Custom bundle of Typr.js (https://github.com/photopea/Typr.js) for use in troika-3d-text. \n  // Original MIT license applies: https://github.com/photopea/Typr.js/blob/gh-pages/LICENSE\n\n  function typrFactory() {\n\n  var window = self;\n\n  // Begin Typr.js\n\n\n  var Typr = {};\n\n  Typr.parse = function(buff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = new Uint8Array(buff);\n  \t\n  \tvar tag = bin.readASCII(data, 0, 4);  \n  \tif(tag==\"ttcf\") {\n  \t\tvar offset = 4;\n  \t\tvar majV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar minV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar numF = bin.readUint  (data, offset);  offset+=4;\n  \t\tvar fnts = [];\n  \t\tfor(var i=0; i<numF; i++) {\n  \t\t\tvar foff = bin.readUint  (data, offset);  offset+=4;\n  \t\t\tfnts.push(Typr._readFont(data, foff));\n  \t\t}\n  \t\treturn fnts;\n  \t}\n  \telse { return [Typr._readFont(data, 0)]; }\n  };\n\n  Typr._readFont = function(data, offset) {\n  \tvar bin = Typr._bin;\n  \tvar ooff = offset;\n  \t\n  \tvar sfnt_version = bin.readFixed(data, offset);\n  \toffset += 4;\n  \tvar numTables = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar searchRange = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar entrySelector = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar rangeShift = bin.readUshort(data, offset);\n  \toffset += 2;\n  \t\n  \tvar tags = [\n  \t\t\"cmap\",\n  \t\t\"head\",\n  \t\t\"hhea\",\n  \t\t\"maxp\",\n  \t\t\"hmtx\",\n  \t\t\"name\",\n  \t\t\"OS/2\",\n  \t\t\"post\",\n  \t\t\n  \t\t//\"cvt\",\n  \t\t//\"fpgm\",\n  \t\t\"loca\",\n  \t\t\"glyf\",\n  \t\t\"kern\",\n  \t\t\n  \t\t//\"prep\"\n  \t\t//\"gasp\"\n  \t\t\n  \t\t\"CFF \",\n  \t\t\n  \t\t\n  \t\t\"GPOS\",\n  \t\t\"GSUB\",\n  \t\t\n  \t\t\"SVG \" ];\n  \t\n  \tvar obj = {_data:data, _offset:ooff};\n  \t//console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\n  \t\n  \tvar tabs = {};\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\ttabs[tag] = {offset:toffset, length:length};\n  \t\t\n  \t\t//if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag, length);\n  \t}\n  \t\n  \tfor(var i=0; i< tags.length; i++)\n  \t{\n  \t\tvar t = tags[i];\n  \t\t//console.log(t);\n  \t\t//if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\n  \t\tif(tabs[t]) { obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj); }\n  \t}\n  \t\n  \treturn obj;\n  };\n\n  Typr._tabOffset = function(data, tab, foff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar numTables = bin.readUshort(data, foff+4);\n  \tvar offset = foff+12;\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\tif(tag==tab) { return toffset; }\n  \t}\n  \treturn 0;\n  };\n\n\n\n\n\n  Typr._bin = {\n  \treadFixed : function(data, o)\n  \t{\n  \t\treturn ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\n  \t},\n  \treadF2dot14 : function(data, o)\n  \t{\n  \t\tvar num = Typr._bin.readShort(data, o);\n  \t\treturn num / 16384;\n  \t},\n  \treadInt : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p+3];\n  \t\ta[1] = buff[p+2];\n  \t\ta[2] = buff[p+1];\n  \t\ta[3] = buff[p];\n  \t\treturn Typr._bin.t.int32[0];\n  \t},\n  \t\n  \treadInt8 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p];\n  \t\treturn Typr._bin.t.int8[0];\n  \t},\n  \treadShort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[1] = buff[p]; a[0] = buff[p+1];\n  \t\treturn Typr._bin.t.int16[0];\n  \t},\n  \treadUshort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (buff[p]<<8) | buff[p+1];\n  \t},\n  \treadUshorts : function(buff, p, len)\n  \t{\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<len; i++) { arr.push(Typr._bin.readUshort(buff, p+i*2)); }\n  \t\treturn arr;\n  \t},\n  \treadUint : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\n  \t\treturn Typr._bin.t.uint32[0];\n  \t},\n  \treadUint64 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\n  \t},\n  \treadASCII : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++) { s += String.fromCharCode(buff[p+i]); }\n  \t\treturn s;\n  \t},\n  \treadUnicode : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t{\n  \t\t\tvar c = (buff[p++]<<8) | buff[p++];\n  \t\t\ts += String.fromCharCode(c);\n  \t\t}\n  \t\treturn s;\n  \t},\n  \t_tdec : window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\n  \treadUTF8 : function(buff, p, l) {\n  \t\tvar tdec = Typr._bin._tdec;\n  \t\tif(tdec && p==0 && l==buff.length) { return tdec[\"decode\"](buff); }\n  \t\treturn Typr._bin.readASCII(buff,p,l);\n  \t},\n  \treadBytes : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<l; i++) { arr.push(buff[p+i]); }\n  \t\treturn arr;\n  \t},\n  \treadASCIIArray : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = [];\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t\t{ s.push(String.fromCharCode(buff[p+i])); }\n  \t\treturn s;\n  \t}\n  };\n\n  Typr._bin.t = {\n  \tbuff: new ArrayBuffer(8),\n  };\n  Typr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\n  Typr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\n  Typr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\n  Typr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\n  Typr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\n  Typr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\n\n\n\n\n\n  // OpenType Layout Common Table Formats\n\n  Typr._lctf = {};\n\n  Typr._lctf.parse = function(data, offset, length, font, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar offset0 = offset;\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \t\n  \tvar offScriptList  = bin.readUshort(data, offset);  offset += 2;\n  \tvar offFeatureList = bin.readUshort(data, offset);  offset += 2;\n  \tvar offLookupList  = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t\n  \tobj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\n  \tobj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\n  \tobj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\n  \t\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupList = function(data, offset, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<count; i++) \n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\n  \t\tobj.push(lut);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupTable = function(data, offset, subt)\n  {\n  \t//console.log(\"Parsing lookup table\", offset);\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {tabs:[]};\n  \t\n  \tobj.ltype = bin.readUshort(data, offset);  offset+=2;\n  \tobj.flag  = bin.readUshort(data, offset);  offset+=2;\n  \tvar cnt   = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<cnt; i++)\n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tab = subt(data, obj.ltype, offset0 + noff);\n  \t\t//console.log(obj.type, tab);\n  \t\tobj.tabs.push(tab);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.numOfOnes = function(n)\n  {\n  \tvar num = 0;\n  \tfor(var i=0; i<32; i++) { if(((n>>>i)&1) != 0) { num++; } }\n  \treturn num;\n  };\n\n  Typr._lctf.readClassDef = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \tvar format = bin.readUshort(data, offset);  offset+=2;\n  \tif(format==1) \n  \t{\n  \t\tvar startGlyph  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar glyphCount  = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<glyphCount; i++)\n  \t\t{\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \tif(format==2)\n  \t{\n  \t\tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<count; i++)\n  \t\t{\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n  Typr._lctf.getInterval = function(tab, val)\n  {\n  \tfor(var i=0; i<tab.length; i+=3)\n  \t{\n  \t\tvar start = tab[i], end = tab[i+1], index = tab[i+2];\n  \t\tif(start<=val && val<=end) { return i; }\n  \t}\n  \treturn -1;\n  };\n\n\n  Typr._lctf.readCoverage = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar cvg = {};\n  \tcvg.fmt   = bin.readUshort(data, offset);  offset+=2;\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t//console.log(\"parsing coverage\", offset-4, format, count);\n  \tif(cvg.fmt==1) { cvg.tab = bin.readUshorts(data, offset, count); } \n  \tif(cvg.fmt==2) { cvg.tab = bin.readUshorts(data, offset, count*3); }\n  \treturn cvg;\n  };\n\n  Typr._lctf.coverageIndex = function(cvg, val)\n  {\n  \tvar tab = cvg.tab;\n  \tif(cvg.fmt==1) { return tab.indexOf(val); }\n  \tif(cvg.fmt==2) {\n  \t\tvar ind = Typr._lctf.getInterval(tab, val);\n  \t\tif(ind!=-1) { return tab[ind+2] + (val - tab[ind]); }\n  \t}\n  \treturn -1;\n  };\n\n  Typr._lctf.readFeatureList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readFeatureTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar featureParams = bin.readUshort(data, offset);  offset+=2;\t// = 0\n  \tvar lookupCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar indices = [];\n  \tfor(var i=0; i<lookupCount; i++) { indices.push(bin.readUshort(data, offset+2*i)); }\n  \treturn indices;\n  };\n\n\n  Typr._lctf.readScriptList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readScriptTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar defLangSysOff = bin.readUshort(data, offset);  offset+=2;\n  \tobj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\n  \t\n  \tvar langSysCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<langSysCount; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar langSysOff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLangSysTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tvar lookupOrder = bin.readUshort(data, offset);  offset+=2;\n  \t//if(lookupOrder!=0)  throw \"lookupOrder not 0\";\n  \tobj.reqFeature = bin.readUshort(data, offset);  offset+=2;\n  \t//if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\n  \t\n  \t//console.log(lookupOrder, obj.reqFeature);\n  \t\n  \tvar featureCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.features = bin.readUshorts(data, offset, featureCount);\n  \treturn obj;\n  };\n\n  \tTypr.CFF = {};\n  \tTypr.CFF.parse = function(data, offset, length)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tdata = new Uint8Array(data.buffer, offset, length);\n  \t\toffset = 0;\n  \t\t\n  \t\t// Header\n  \t\tvar major = data[offset];  offset++;\n  \t\tvar minor = data[offset];  offset++;\n  \t\tvar hdrSize = data[offset];  offset++;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t//console.log(major, minor, hdrSize, offsize);\n  \t\t\n  \t\t// Name INDEX\n  \t\tvar ninds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, ninds);\n  \t\tvar names = [];\n  \t\t\n  \t\tfor(var i=0; i<ninds.length-1; i++) { names.push(bin.readASCII(data, offset+ninds[i], ninds[i+1]-ninds[i])); }\n  \t\toffset += ninds[ninds.length-1];\n  \t\t\n  \t\t\n  \t\t// Top DICT INDEX\n  \t\tvar tdinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\n  \t\t// Top DICT Data\n  \t\tvar topDicts = [];\n  \t\tfor(var i=0; i<tdinds.length-1; i++) { topDicts.push( Typr.CFF.readDict(data, offset+tdinds[i], offset+tdinds[i+1]) ); }\n  \t\toffset += tdinds[tdinds.length-1];\n  \t\tvar topdict = topDicts[0];\n  \t\t//console.log(topdict);\n  \t\t\n  \t\t// String INDEX\n  \t\tvar sinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t// String Data\n  \t\tvar strings = [];\n  \t\tfor(var i=0; i<sinds.length-1; i++) { strings.push(bin.readASCII(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\toffset += sinds[sinds.length-1];\n  \t\t\n  \t\t// Global Subr INDEX  (subroutines)\t\t\n  \t\tTypr.CFF.readSubrs(data, offset, topdict);\n  \t\t\n  \t\t// charstrings\n  \t\tif(topdict.CharStrings)\n  \t\t{\n  \t\t\toffset = topdict.CharStrings;\n  \t\t\tvar sinds = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t\t\n  \t\t\tvar cstr = [];\n  \t\t\tfor(var i=0; i<sinds.length-1; i++) { cstr.push(bin.readBytes(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\t\t//offset += sinds[sinds.length-1];\n  \t\t\ttopdict.CharStrings = cstr;\n  \t\t\t//console.log(topdict.CharStrings);\n  \t\t}\n  \t\t\n  \t\t// CID font\n  \t\tif(topdict.ROS) {\n  \t\t\toffset = topdict.FDArray;\n  \t\t\tvar fdind = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, fdind);\n  \t\t\t\n  \t\t\ttopdict.FDArray = [];\n  \t\t\tfor(var i=0; i<fdind.length-1; i++) {\n  \t\t\t\tvar dict = Typr.CFF.readDict(data, offset+fdind[i], offset+fdind[i+1]);\n  \t\t\t\tTypr.CFF._readFDict(data, dict, strings);\n  \t\t\t\ttopdict.FDArray.push( dict );\n  \t\t\t}\n  \t\t\toffset += fdind[fdind.length-1];\n  \t\t\t\n  \t\t\toffset = topdict.FDSelect;\n  \t\t\ttopdict.FDSelect = [];\n  \t\t\tvar fmt = data[offset];  offset++;\n  \t\t\tif(fmt==3) {\n  \t\t\t\tvar rns = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tfor(var i=0; i<rns+1; i++) {\n  \t\t\t\t\ttopdict.FDSelect.push(bin.readUshort(data, offset), data[offset+2]);  offset+=3;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\telse { throw fmt; }\n  \t\t}\n  \t\t\n  \t\t// Encoding\n  \t\tif(topdict.Encoding) { topdict.Encoding = Typr.CFF.readEncoding(data, topdict.Encoding, topdict.CharStrings.length); }\n  \t\t\n  \t\t// charset\n  \t\tif(topdict.charset ) { topdict.charset  = Typr.CFF.readCharset (data, topdict.charset , topdict.CharStrings.length); }\n  \t\t\n  \t\tTypr.CFF._readFDict(data, topdict, strings);\n  \t\treturn topdict;\n  \t};\n  \tTypr.CFF._readFDict = function(data, dict, ss) {\n  \t\tvar offset;\n  \t\tif(dict.Private) {\n  \t\t\toffset = dict.Private[1];\n  \t\t\tdict.Private = Typr.CFF.readDict(data, offset, offset+dict.Private[0]);\n  \t\t\tif(dict.Private.Subrs)  { Typr.CFF.readSubrs(data, offset+dict.Private.Subrs, dict.Private); }\n  \t\t}\n  \t\tfor(var p in dict) { if([\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(p)!=-1)  { dict[p]=ss[dict[p] -426 + 35]; } }\n  \t};\n  \t\n  \tTypr.CFF.readSubrs = function(data, offset, obj)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\tvar gsubinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, gsubinds);\n  \t\t\n  \t\tvar bias, nSubrs = gsubinds.length;\n  \t\tif (nSubrs <  1240) { bias = 107; }\n  \t\telse if (nSubrs < 33900) { bias = 1131; }\n  \t\telse { bias = 32768; }\n  \t\tobj.Bias = bias;\n  \t\t\n  \t\tobj.Subrs = [];\n  \t\tfor(var i=0; i<gsubinds.length-1; i++) { obj.Subrs.push(bin.readBytes(data, offset+gsubinds[i], gsubinds[i+1]-gsubinds[i])); }\n  \t\t//offset += gsubinds[gsubinds.length-1];\n  \t};\n  \t\n  \tTypr.CFF.tableSE = [\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        1,   2,   3,   4,   5,   6,   7,   8,\n        9,  10,  11,  12,  13,  14,  15,  16,\n       17,  18,  19,  20,  21,  22,  23,  24,\n       25,  26,  27,  28,  29,  30,  31,  32,\n       33,  34,  35,  36,  37,  38,  39,  40,\n       41,  42,  43,  44,  45,  46,  47,  48,\n       49,  50,  51,  52,  53,  54,  55,  56,\n       57,  58,  59,  60,  61,  62,  63,  64,\n       65,  66,  67,  68,  69,  70,  71,  72,\n       73,  74,  75,  76,  77,  78,  79,  80,\n       81,  82,  83,  84,  85,  86,  87,  88,\n       89,  90,  91,  92,  93,  94,  95,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,  96,  97,  98,  99, 100, 101, 102,\n      103, 104, 105, 106, 107, 108, 109, 110,\n        0, 111, 112, 113, 114,   0, 115, 116,\n      117, 118, 119, 120, 121, 122,   0, 123,\n        0, 124, 125, 126, 127, 128, 129, 130,\n      131,   0, 132, 133,   0, 134, 135, 136,\n      137,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0, 138,   0, 139,   0,   0,   0,   0,\n      140, 141, 142, 143,   0,   0,   0,   0,\n        0, 144,   0,   0,   0, 145,   0,   0,\n      146, 147, 148, 149,   0,   0,   0,   0\n    ];\n    \n  \tTypr.CFF.glyphByUnicode = function(cff, code)\n  \t{\n  \t\tfor(var i=0; i<cff.charset.length; i++) { if(cff.charset[i]==code) { return i; } }\n  \t\treturn -1;\n  \t};\n  \t\n  \tTypr.CFF.glyphBySE = function(cff, charcode)\t// glyph by standard encoding\n  \t{\n  \t\tif ( charcode < 0 || charcode > 255 ) { return -1; }\n  \t\treturn Typr.CFF.glyphByUnicode(cff, Typr.CFF.tableSE[charcode]);\t\t\n  \t};\n  \t\n  \tTypr.CFF.readEncoding = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar array = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t//console.log(\"Encoding\");\n  \t\t//console.log(format);\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tvar nCodes = data[offset];  offset++;\n  \t\t\tfor(var i=0; i<nCodes; i++)  { array.push(data[offset+i]); }\n  \t\t}\n  \t\t/*\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\telse { throw \"error: unknown encoding format: \" + format; }\n  \t\t\n  \t\treturn array;\n  \t};\n\n  \tTypr.CFF.readCharset = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar charset = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tfor(var i=0; i<num; i++) \n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tcharset.push(first);\n  \t\t\t}\n  \t\t}\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\telse { throw \"error: format: \" + format; }\n  \t\t\n  \t\treturn charset;\n  \t};\n\n  \tTypr.CFF.readIndex = function(data, offset, inds)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar count = bin.readUshort(data, offset)+1;  offset+=2;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t\n  \t\tif     (offsize==1) { for(var i=0; i<count; i++) { inds.push( data[offset+i] ); } }\n  \t\telse if(offsize==2) { for(var i=0; i<count; i++) { inds.push( bin.readUshort(data, offset+i*2) ); } }\n  \t\telse if(offsize==3) { for(var i=0; i<count; i++) { inds.push( bin.readUint  (data, offset+i*3 - 1) & 0x00ffffff ); } }\n  \t\telse if(count!=1) { throw \"unsupported offset size: \" + offsize + \", count: \" + count; }\n  \t\t\n  \t\toffset += count*offsize;\n  \t\treturn offset-1;\n  \t};\n  \t\n  \tTypr.CFF.getCharString = function(data, offset, o)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\tvar vs = 1;\n  \t\tvar op=null, val=null;\n  \t\t// operand\n  \t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t//if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\n  \t\to.val = val!=null ? val : \"o\"+op;\n  \t\to.size = vs;\n  \t};\n  \t\n  \tTypr.CFF.readCharString = function(data, offset, length)\n  \t{\n  \t\tvar end = offset + length;\n  \t\tvar bin = Typr._bin;\n  \t\tvar arr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar op=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t\tif(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\t\n  \t\t\tarr.push(val!=null ? val : \"o\"+op);\n  \t\t\toffset += vs;\t\n\n  \t\t\t//var cv = arr[arr.length-1];\n  \t\t\t//if(cv==undefined) throw \"error\";\n  \t\t\t//console.log()\n  \t\t}\t\n  \t\treturn arr;\n  \t};\n\n  \tTypr.CFF.readDict = function(data, offset, end)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t//var dict = [];\n  \t\tvar dict = {};\n  \t\tvar carr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar key=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(b0==29) { val = bin.readInt  (data,offset+1);  vs=5; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;  throw \"unknown number\";  }\n  \t\t\t\n  \t\t\tif(b0==30) \n  \t\t\t{  \n  \t\t\t\tvar nibs = [];\n  \t\t\t\tvs = 1;\n  \t\t\t\twhile(true)\n  \t\t\t\t{\n  \t\t\t\t\tvar b = data[offset+vs];  vs++;\n  \t\t\t\t\tvar nib0 = b>>4, nib1 = b&0xf;\n  \t\t\t\t\tif(nib0 != 0xf) { nibs.push(nib0); }  if(nib1!=0xf) { nibs.push(nib1); }\n  \t\t\t\t\tif(nib1==0xf) { break; }\n  \t\t\t\t}\n  \t\t\t\tvar s = \"\";\n  \t\t\t\tvar chars = [0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"];\n  \t\t\t\tfor(var i=0; i<nibs.length; i++) { s += chars[nibs[i]]; }\n  \t\t\t\t//console.log(nibs);\n  \t\t\t\tval = parseFloat(s);\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(b0<=21)\t// operator\n  \t\t\t{\n  \t\t\t\tvar keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\",\"FamilyOtherBlues\",\n  \t\t\t\t\t\"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \n  \t\t\t\t\t\"defaultWidthX\", \"nominalWidthX\"];\n  \t\t\t\t\t\n  \t\t\t\tkey = keys[b0];  vs=1;\n  \t\t\t\tif(b0==12) { \n  \t\t\t\t\tvar keys = [ \"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\n  \t\t\t\t\t\"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0,0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\n  \t\t\t\t\t\"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0,0,0,0,0,0, \n  \t\t\t\t\t\"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\n  \t\t\t\t\tkey = keys[b1];  vs=2; \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(key!=null) {  dict[key] = carr.length==1 ? carr[0] : carr;  carr=[]; }\n  \t\t\telse  { carr.push(val); }  \n  \t\t\t\n  \t\t\toffset += vs;\t\t\n  \t\t}\t\n  \t\treturn dict;\n  \t};\n\n\n  Typr.cmap = {};\n  Typr.cmap.parse = function(data, offset, length)\n  {\n  \tdata = new Uint8Array(data.buffer, offset, length);\n  \toffset = 0;\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar version   = bin.readUshort(data, offset);  offset += 2;\n  \tvar numTables = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(version, numTables);\n  \t\n  \tvar offs = [];\n  \tobj.tables = [];\n  \t\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset = bin.readUint(data, offset);       offset += 4;\n  \t\t\n  \t\tvar id = \"p\"+platformID+\"e\"+encodingID;\n  \t\t\n  \t\t//console.log(\"cmap subtable\", platformID, encodingID, noffset);\n  \t\t\n  \t\t\n  \t\tvar tind = offs.indexOf(noffset);\n  \t\t\n  \t\tif(tind==-1)\n  \t\t{\n  \t\t\ttind = obj.tables.length;\n  \t\t\tvar subt;\n  \t\t\toffs.push(noffset);\n  \t\t\tvar format = bin.readUshort(data, noffset);\n  \t\t\tif     (format== 0) { subt = Typr.cmap.parse0(data, noffset); }\n  \t\t\telse if(format== 4) { subt = Typr.cmap.parse4(data, noffset); }\n  \t\t\telse if(format== 6) { subt = Typr.cmap.parse6(data, noffset); }\n  \t\t\telse if(format==12) { subt = Typr.cmap.parse12(data,noffset); }\n  \t\t\telse { console.log(\"unknown format: \"+format, platformID, encodingID, noffset); }\n  \t\t\tobj.tables.push(subt);\n  \t\t}\n  \t\t\n  \t\tif(obj[id]!=null) { throw \"multiple tables for one platform+encoding\"; }\n  \t\tobj[id] = tind;\n  \t}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse0 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tobj.format = bin.readUshort(data, offset);  offset += 2;\n  \tvar len    = bin.readUshort(data, offset);  offset += 2;\n  \tvar lang   = bin.readUshort(data, offset);  offset += 2;\n  \tobj.map = [];\n  \tfor(var i=0; i<len-6; i++) { obj.map.push(data[offset+i]); }\n  \treturn obj;\n  };\n\n  Typr.cmap.parse4 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCountX2 = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCount = segCountX2/2;\n  \tobj.searchRange = bin.readUshort(data, offset);  offset+=2;\n  \tobj.entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tobj.rangeShift = bin.readUshort(data, offset);  offset+=2;\n  \tobj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \toffset+=2;\n  \tobj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.idDelta = [];\n  \tfor(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\n  \tobj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.glyphIdArray = [];\n  \twhile(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse6 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tobj.firstCode = bin.readUshort(data, offset);  offset+=2;\n  \tvar entryCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.glyphIdArray = [];\n  \tfor(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \t\n  \treturn obj;\n  };\n\n  Typr.cmap.parse12 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \toffset += 2;\n  \tvar length = bin.readUint(data, offset);  offset+=4;\n  \tvar lang   = bin.readUint(data, offset);  offset+=4;\n  \tvar nGroups= bin.readUint(data, offset);  offset+=4;\n  \tobj.groups = [];\n  \t\n  \tfor(var i=0; i<nGroups; i++)  \n  \t{\n  \t\tvar off = offset + i * 12;\n  \t\tvar startCharCode = bin.readUint(data, off+0);\n  \t\tvar endCharCode   = bin.readUint(data, off+4);\n  \t\tvar startGlyphID  = bin.readUint(data, off+8);\n  \t\tobj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\n  \t}\n  \treturn obj;\n  };\n\n  Typr.glyf = {};\n  Typr.glyf.parse = function(data, offset, length, font)\n  {\n  \tvar obj = [];\n  \tfor(var g=0; g<font.maxp.numGlyphs; g++) { obj.push(null); }\n  \treturn obj;\n  };\n\n  Typr.glyf._parseGlyf = function(font, g)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = font._data;\n  \t\n  \tvar offset = Typr._tabOffset(data, \"glyf\", font._offset) + font.loca[g];\n  \t\t\n  \tif(font.loca[g]==font.loca[g+1]) { return null; }\n  \t\t\n  \tvar gl = {};\n  \t\t\n  \tgl.noc  = bin.readShort(data, offset);  offset+=2;\t\t// number of contours\n  \tgl.xMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.xMax = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMax = bin.readShort(data, offset);  offset+=2;\n  \t\n  \tif(gl.xMin>=gl.xMax || gl.yMin>=gl.yMax) { return null; }\n  \t\t\n  \tif(gl.noc>0)\n  \t{\n  \t\tgl.endPts = [];\n  \t\tfor(var i=0; i<gl.noc; i++) { gl.endPts.push(bin.readUshort(data,offset)); offset+=2; }\n  \t\t\n  \t\tvar instructionLength = bin.readUshort(data,offset); offset+=2;\n  \t\tif((data.length-offset)<instructionLength) { return null; }\n  \t\tgl.instructions = bin.readBytes(data, offset, instructionLength);   offset+=instructionLength;\n  \t\t\n  \t\tvar crdnum = gl.endPts[gl.noc-1]+1;\n  \t\tgl.flags = [];\n  \t\tfor(var i=0; i<crdnum; i++ ) \n  \t\t{ \n  \t\t\tvar flag = data[offset];  offset++; \n  \t\t\tgl.flags.push(flag); \n  \t\t\tif((flag&8)!=0)\n  \t\t\t{\n  \t\t\t\tvar rep = data[offset];  offset++;\n  \t\t\t\tfor(var j=0; j<rep; j++) { gl.flags.push(flag); i++; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.xs = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&2)!=0), same=((gl.flags[i]&16)!=0);  \n  \t\t\tif(i8) { gl.xs.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.xs.push(0); }\n  \t\t\t\telse { gl.xs.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.ys = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&4)!=0), same=((gl.flags[i]&32)!=0);  \n  \t\t\tif(i8) { gl.ys.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.ys.push(0); }\n  \t\t\t\telse { gl.ys.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tvar x = 0, y = 0;\n  \t\tfor(var i=0; i<crdnum; i++) { x += gl.xs[i]; y += gl.ys[i];  gl.xs[i]=x;  gl.ys[i]=y; }\n  \t\t//console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\n  \t}\n  \telse\n  \t{\n  \t\tvar ARG_1_AND_2_ARE_WORDS\t= 1<<0;\n  \t\tvar ARGS_ARE_XY_VALUES\t\t= 1<<1;\n  \t\tvar WE_HAVE_A_SCALE\t\t\t= 1<<3;\n  \t\tvar MORE_COMPONENTS\t\t\t= 1<<5;\n  \t\tvar WE_HAVE_AN_X_AND_Y_SCALE= 1<<6;\n  \t\tvar WE_HAVE_A_TWO_BY_TWO\t= 1<<7;\n  \t\tvar WE_HAVE_INSTRUCTIONS\t= 1<<8;\n  \t\t\n  \t\tgl.parts = [];\n  \t\tvar flags;\n  \t\tdo {\n  \t\t\tflags = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar part = { m:{a:1,b:0,c:0,d:1,tx:0,ty:0}, p1:-1, p2:-1 };  gl.parts.push(part);\n  \t\t\tpart.glyphIndex = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tif ( flags & ARG_1_AND_2_ARE_WORDS) {\n  \t\t\t\tvar arg1 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t\tvar arg2 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t} else {\n  \t\t\t\tvar arg1 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t\tvar arg2 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1;  part.m.ty = arg2; }\n  \t\t\telse  {  part.p1=arg1;  part.p2=arg2;  }\n  \t\t\t//part.m.tx = arg1;  part.m.ty = arg2;\n  \t\t\t//else { throw \"params are not XY values\"; }\n  \t\t\t\n  \t\t\tif ( flags & WE_HAVE_A_SCALE ) {\n  \t\t\t\tpart.m.a = part.m.d = bin.readF2dot14(data, offset);  offset += 2;    \n  \t\t\t} else if ( flags & WE_HAVE_AN_X_AND_Y_SCALE ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t} else if ( flags & WE_HAVE_A_TWO_BY_TWO ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.b = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.c = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t}\n  \t\t} while ( flags & MORE_COMPONENTS ) \n  \t\tif (flags & WE_HAVE_INSTRUCTIONS){\n  \t\t\tvar numInstr = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tgl.instr = [];\n  \t\t\tfor(var i=0; i<numInstr; i++) { gl.instr.push(data[offset]);  offset++; }\n  \t\t}\n  \t}\n  \treturn gl;\n  };\n\n\n  Typr.GPOS = {};\n  Typr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  };\n\n\n  Typr.GPOS.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \t//console.log(ltype, tab.fmt);\n  \t\n  \tif(ltype==1 || ltype==2 || ltype==3 || ltype==7 || (ltype==8 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\n  \t}\n  \tif(ltype==1 && tab.fmt==1) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tif(valFmt1!=0)  { tab.pos = Typr.GPOS.readValueRecord(data, offset, valFmt1); }\n  \t}\n  \telse if(ltype==2) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar valFmt2 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tvar ones2 = Typr._lctf.numOfOnes(valFmt2);\n  \t\tif(tab.fmt==1)\n  \t\t{\n  \t\t\ttab.pairsets = [];\n  \t\t\tvar psc = bin.readUshort(data, offset);  offset+=2;  // PairSetCount\n  \t\t\t\n  \t\t\tfor(var i=0; i<psc; i++)\n  \t\t\t{\n  \t\t\t\tvar psoff = offset0 + bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\t\n  \t\t\t\tvar pvc = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\tvar arr = [];\n  \t\t\t\tfor(var j=0; j<pvc; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar gid2 = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\t\tvar value1, value2;\n  \t\t\t\t\tif(valFmt1!=0) {  value1 = Typr.GPOS.readValueRecord(data, psoff, valFmt1);  psoff+=ones1*2;  }\n  \t\t\t\t\tif(valFmt2!=0) {  value2 = Typr.GPOS.readValueRecord(data, psoff, valFmt2);  psoff+=ones2*2;  }\n  \t\t\t\t\t//if(value1!=null) throw \"e\";\n  \t\t\t\t\tarr.push({gid2:gid2, val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.pairsets.push(arr);\n  \t\t\t}\n  \t\t}\n  \t\tif(tab.fmt==2)\n  \t\t{\n  \t\t\tvar classDef1 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar classDef2 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class1Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class2Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\n  \t\t\ttab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\n  \t\t\t\n  \t\t\ttab.matrix = [];\n  \t\t\tfor(var i=0; i<class1Count; i++)\n  \t\t\t{\n  \t\t\t\tvar row = [];\n  \t\t\t\tfor(var j=0; j<class2Count; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar value1 = null, value2 = null;\n  \t\t\t\t\tif(tab.valFmt1!=0) { value1 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\n  \t\t\t\t\tif(tab.valFmt2!=0) { value2 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\n  \t\t\t\t\trow.push({val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.matrix.push(row);\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn tab;\n  };\n\n\n  Typr.GPOS.readValueRecord = function(data, offset, valFmt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar arr = [];\n  \tarr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;  // X_PLACEMENT\n  \tarr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;  // Y_PLACEMENT\n  \tarr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;  // X_ADVANCE\n  \tarr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;  // Y_ADVANCE\n  \treturn arr;\n  };\n\n  Typr.GSUB = {};\n  Typr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  };\n\n\n  Typr.GSUB.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tif(ltype!=1 && ltype!=4 && ltype!=5 && ltype!=6) { return null; }\n  \t\n  \tif(ltype==1 || ltype==4 || (ltype==5 && tab.fmt<=2) || (ltype==6 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, offset0+covOff);\t// not always is coverage here\n  \t}\n  \t\n  \tif(ltype==1) {\t\n  \t\tif(tab.fmt==1) {\n  \t\t\ttab.delta = bin.readShort(data, offset);  offset+=2;\n  \t\t}\n  \t\telse if(tab.fmt==2) {\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\n  \t\t}\n  \t}\n  \t//  Ligature Substitution Subtable\n  \telse if(ltype==4) {\n  \t\ttab.vals = [];\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<cnt; i++) {\n  \t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\n  \t\t}\n  \t\t//console.log(tab.coverage);\n  \t\t//console.log(tab.vals);\n  \t} \n  \t//  Contextual Substitution Subtable\n  \telse if(ltype==5) {\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar cDefOffset = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.cDef = Typr._lctf.readClassDef(data, offset0 + cDefOffset);\n  \t\t\ttab.scset = [];\n  \t\t\tvar subClassSetCount = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<subClassSetCount; i++)\n  \t\t\t{\n  \t\t\t\tvar scsOff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(  scsOff==0 ? null : Typr.GSUB.readSubClassSet(data, offset0 + scsOff)  );\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"unknown table format\", tab.fmt);\n  \t}\n  \t//*\n  \telse if(ltype==6) {\n  \t\t/*\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar btDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar inDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar laDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.btDef = Typr._lctf.readClassDef(data, offset0 + btDef);\n  \t\t\ttab.inDef = Typr._lctf.readClassDef(data, offset0 + inDef);\n  \t\t\ttab.laDef = Typr._lctf.readClassDef(data, offset0 + laDef);\n  \t\t\t\n  \t\t\ttab.scset = [];\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<cnt; i++) {\n  \t\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(Typr.GSUB.readChainSubClassSet(data, offset0+loff));\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\tif(tab.fmt==3) {\n  \t\t\tfor(var i=0; i<3; i++) {\n  \t\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar cvgs = [];\n  \t\t\t\tfor(var j=0; j<cnt; j++) { cvgs.push(  Typr._lctf.readCoverage(data, offset0 + bin.readUshort(data, offset+j*2))   ); }\n  \t\t\t\toffset+=cnt*2;\n  \t\t\t\tif(i==0) { tab.backCvg = cvgs; }\n  \t\t\t\tif(i==1) { tab.inptCvg = cvgs; }\n  \t\t\t\tif(i==2) { tab.ahedCvg = cvgs; }\n  \t\t\t}\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.lookupRec = Typr.GSUB.readSubstLookupRecords(data, offset, cnt);\n  \t\t}\n  \t\t//console.log(tab);\n  \t} //*/\n  \t//if(tab.coverage.indexOf(3)!=-1) console.log(ltype, fmt, tab);\n  \t\n  \treturn tab;\n  };\n\n  Typr.GSUB.readSubClassSet = function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, offset0 = offset, lset = [];\n  \tvar cnt = rUs(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = rUs(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readSubClassRule= function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, rule = {};\n  \tvar gcount = rUs(data, offset);  offset+=2;\n  \tvar scount = rUs(data, offset);  offset+=2;\n  \trule.input = [];\n  \tfor(var i=0; i<gcount-1; i++) {\n  \t\trule.input.push(rUs(data, offset));  offset+=2;\n  \t}\n  \trule.substLookupRecords = Typr.GSUB.readSubstLookupRecords(data, offset, scount);\n  \treturn rule;\n  };\n  Typr.GSUB.readSubstLookupRecords = function(data, offset, cnt)\n  {\n  \tvar rUs = Typr._bin.readUshort;\n  \tvar out = [];\n  \tfor(var i=0; i<cnt; i++) {  out.push(rUs(data, offset), rUs(data, offset+2));  offset+=4;  }\n  \treturn out;\n  };\n\n  Typr.GSUB.readChainSubClassSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readChainSubClassRule= function(data, offset)\n  {\n  \tvar bin = Typr._bin, rule = {};\n  \tvar pps = [\"backtrack\", \"input\", \"lookahead\"];\n  \tfor(var pi=0; pi<pps.length; pi++) {\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) { cnt--; }\n  \t\trule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\n  \t}\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \trule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\n  \treturn rule;\n  };\n\n  Typr.GSUB.readLigatureSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar lcnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<lcnt; j++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readLigature(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readLigature = function(data, offset)\n  {\n  \tvar bin = Typr._bin, lig = {chain:[]};\n  \tlig.nglyph = bin.readUshort(data, offset);  offset+=2;\n  \tvar ccnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\n  \treturn lig;\n  };\n\n\n\n  Typr.head = {};\n  Typr.head.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.fontRevision = bin.readFixed(data, offset);  offset += 4;\n  \tvar checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\n  \tvar magicNumber = bin.readUint(data, offset);  offset += 4;\n  \tobj.flags = bin.readUshort(data, offset);  offset += 2;\n  \tobj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\n  \tobj.created  = bin.readUint64(data, offset);  offset += 8;\n  \tobj.modified = bin.readUint64(data, offset);  offset += 8;\n  \tobj.xMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.macStyle = bin.readUshort(data, offset);  offset += 2;\n  \tobj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\n  \tobj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\n  \tobj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\n  \tobj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hhea = {};\n  Typr.hhea.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.ascender  = bin.readShort(data, offset);  offset += 2;\n  \tobj.descender = bin.readShort(data, offset);  offset += 2;\n  \tobj.lineGap = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\n  \tobj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\n  \tobj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretOffset    = bin.readShort(data, offset);  offset += 2;\n  \t\n  \toffset += 4*2;\n  \t\n  \tobj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\n  \tobj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hmtx = {};\n  Typr.hmtx.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.aWidth = [];\n  \tobj.lsBearing = [];\n  \t\n  \t\n  \tvar aw = 0, lsb = 0;\n  \t\n  \tfor(var i=0; i<font.maxp.numGlyphs; i++)\n  \t{\n  \t\tif(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\n  \t\tobj.aWidth.push(aw);\n  \t\tobj.lsBearing.push(lsb);\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.kern = {};\n  Typr.kern.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readUshort(data, offset);  offset+=2;\n  \tif(version==1) { return Typr.kern.parseV1(data, offset-2, length, font); }\n  \tvar nTables = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\toffset+=2;\t// skip version\n  \t\tvar length  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.parseV1 = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readFixed(data, offset);  offset+=4;\n  \tvar nTables = bin.readUint(data, offset);  offset+=4;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\tvar length = bin.readUint(data, offset);   offset+=4;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tupleIndex = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.readFormat0 = function(data, offset, map)\n  {\n  \tvar bin = Typr._bin;\n  \tvar pleft = -1;\n  \tvar nPairs        = bin.readUshort(data, offset);  offset+=2;\n  \tvar searchRange   = bin.readUshort(data, offset);  offset+=2;\n  \tvar entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tvar rangeShift    = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<nPairs; j++)\n  \t{\n  \t\tvar left  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar right = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar value = bin.readShort (data, offset);  offset+=2;\n  \t\tif(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }); }\n  \t\tvar rval = map.rval[map.rval.length-1];\n  \t\trval.glyph2.push(right);   rval.vals.push(value);\n  \t\tpleft = left;\n  \t}\n  \treturn offset;\n  };\n\n\n\n  Typr.loca = {};\n  Typr.loca.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \t\n  \tvar ver = font.head.indexToLocFormat;\n  \t//console.log(\"loca\", ver, length, 4*font.maxp.numGlyphs);\n  \tvar len = font.maxp.numGlyphs+1;\n  \t\n  \tif(ver==0) { for(var i=0; i<len; i++) { obj.push(bin.readUshort(data, offset+(i<<1))<<1); } }\n  \tif(ver==1) { for(var i=0; i<len; i++) { obj.push(bin.readUint  (data, offset+(i<<2))   ); } }\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.maxp = {};\n  Typr.maxp.parse = function(data, offset, length)\n  {\n  \t//console.log(data.length, offset, length);\n  \t\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \t// both versions 0.5 and 1.0\n  \tvar ver = bin.readUint(data, offset); offset += 4;\n  \tobj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t// only 1.0\n  \tif(ver == 0x00010000)\n  \t{\n  \t\tobj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxContours           = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxZones              = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.name = {};\n  Typr.name.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar format = bin.readUshort(data, offset);  offset += 2;\n  \tvar count  = bin.readUshort(data, offset);  offset += 2;\n  \tvar stringOffset = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(format,count);\n  \t\n  \tvar names = [\n  \t\t\"copyright\",\n  \t\t\"fontFamily\",\n  \t\t\"fontSubfamily\",\n  \t\t\"ID\",\n  \t\t\"fullName\",\n  \t\t\"version\",\n  \t\t\"postScriptName\",\n  \t\t\"trademark\",\n  \t\t\"manufacturer\",\n  \t\t\"designer\",\n  \t\t\"description\",\n  \t\t\"urlVendor\",\n  \t\t\"urlDesigner\",\n  \t\t\"licence\",\n  \t\t\"licenceURL\",\n  \t\t\"---\",\n  \t\t\"typoFamilyName\",\n  \t\t\"typoSubfamilyName\",\n  \t\t\"compatibleFull\",\n  \t\t\"sampleText\",\n  \t\t\"postScriptCID\",\n  \t\t\"wwsFamilyName\",\n  \t\t\"wwsSubfamilyName\",\n  \t\t\"lightPalette\",\n  \t\t\"darkPalette\"\n  \t];\n  \t\n  \tvar offset0 = offset;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar languageID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar nameID     = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar slen       = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset    = bin.readUshort(data, offset);  offset += 2;\n  \t\t//console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\n  \t\t\n  \t\tvar cname = names[nameID];\n  \t\tvar soff = offset0 + count*12 + noffset;\n  \t\tvar str;\n  \t\tif(platformID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(platformID == 3 && encodingID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 0) { str = bin.readASCII  (data, soff, slen); }\n  \t\telse if(encodingID == 1) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 3) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\t\n  \t\telse if(platformID == 1) { str = bin.readASCII(data, soff, slen);  console.log(\"reading unknown MAC encoding \"+encodingID+\" as ASCII\"); }\n  \t\telse { throw \"unknown encoding \"+encodingID + \", platformID: \"+platformID; }\n  \t\t\n  \t\tvar tid = \"p\"+platformID+\",\"+(languageID).toString(16);//Typr._platforms[platformID];\n  \t\tif(obj[tid]==null) { obj[tid] = {}; }\n  \t\tobj[tid][cname] = str;\n  \t\tobj[tid]._lang = languageID;\n  \t\t//console.log(tid, obj[tid]);\n  \t}\n  \t/*\n  \tif(format == 1)\n  \t{\n  \t\tvar langTagCount = bin.readUshort(data, offset);  offset += 2;\n  \t\tfor(var i=0; i<langTagCount; i++)\n  \t\t{\n  \t\t\tvar length  = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar noffset = bin.readUshort(data, offset);  offset += 2;\n  \t\t}\n  \t}\n  \t*/\n  \t\n  \t//console.log(obj);\n  \t\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0409) { return obj[p]; } }\t\t// United States\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0000) { return obj[p]; } }\t\t// Universal\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0c0c) { return obj[p]; } }\t\t// Canada\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null) { return obj[p]; } }\n  \t\n  \tvar tname;\n  \tfor(var p in obj) { tname=p; break; }\n  \tconsole.log(\"returning name table with languageID \"+ obj[tname]._lang);\n  \treturn obj[tname];\n  };\n\n\n  Typr[\"OS/2\"] = {};\n  Typr[\"OS/2\"].parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar ver = bin.readUshort(data, offset); offset += 2;\n  \t\n  \tvar obj = {};\n  \tif     (ver==0) { Typr[\"OS/2\"].version0(data, offset, obj); }\n  \telse if(ver==1) { Typr[\"OS/2\"].version1(data, offset, obj); }\n  \telse if(ver==2 || ver==3 || ver==4) { Typr[\"OS/2\"].version2(data, offset, obj); }\n  \telse if(ver==5) { Typr[\"OS/2\"].version5(data, offset, obj); }\n  \telse { throw \"unknown OS/2 table version: \"+ver; }\n  \t\n  \treturn obj;\n  };\n\n  Typr[\"OS/2\"].version0 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \tobj.xAvgCharWidth = bin.readShort(data, offset); offset += 2;\n  \tobj.usWeightClass = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWidthClass  = bin.readUshort(data, offset); offset += 2;\n  \tobj.fsType = bin.readUshort(data, offset); offset += 2;\n  \tobj.ySubscriptXSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYOffset = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptYSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySuperscriptYOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutSize = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutPosition = bin.readShort(data, offset); offset += 2;\n  \tobj.sFamilyClass = bin.readShort(data, offset); offset += 2;\n  \tobj.panose = bin.readBytes(data, offset, 10);  offset += 10;\n  \tobj.ulUnicodeRange1\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange2\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange3\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange4\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.achVendID = [bin.readInt8(data, offset), bin.readInt8(data, offset+1),bin.readInt8(data, offset+2),bin.readInt8(data, offset+3)];  offset += 4;\n  \tobj.fsSelection\t = bin.readUshort(data, offset); offset += 2;\n  \tobj.usFirstCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.usLastCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.sTypoAscender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoDescender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoLineGap = bin.readShort(data, offset); offset += 2;\n  \tobj.usWinAscent = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWinDescent = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version1 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version0(data, offset, obj);\n  \t\n  \tobj.ulCodePageRange1 = bin.readUint(data, offset); offset += 4;\n  \tobj.ulCodePageRange2 = bin.readUint(data, offset); offset += 4;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version2 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version1(data, offset, obj);\n  \t\n  \tobj.sxHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.sCapHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.usDefault = bin.readUshort(data, offset); offset += 2;\n  \tobj.usBreak = bin.readUshort(data, offset); offset += 2;\n  \tobj.usMaxContext = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version5 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version2(data, offset, obj);\n\n  \tobj.usLowerOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \tobj.usUpperOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr.post = {};\n  Typr.post.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.version           = bin.readFixed(data, offset);  offset+=4;\n  \tobj.italicAngle       = bin.readFixed(data, offset);  offset+=4;\n  \tobj.underlinePosition = bin.readShort(data, offset);  offset+=2;\n  \tobj.underlineThickness = bin.readShort(data, offset);  offset+=2;\n\n  \treturn obj;\n  };\n  Typr.SVG = {};\n  Typr.SVG.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = { entries: []};\n\n  \tvar offset0 = offset;\n\n  \tvar tableVersion = bin.readUshort(data, offset);\toffset += 2;\n  \tvar svgDocIndexOffset = bin.readUint(data, offset);\toffset += 4;\n  \tvar reserved = bin.readUint(data, offset); offset += 4;\n\n  \toffset = svgDocIndexOffset + offset0;\n\n  \tvar numEntries = bin.readUshort(data, offset);\toffset += 2;\n\n  \tfor(var i=0; i<numEntries; i++)\n  \t{\n  \t\tvar startGlyphID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar endGlyphID   = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar svgDocOffset = bin.readUint  (data, offset);  offset += 4;\n  \t\tvar svgDocLength = bin.readUint  (data, offset);  offset += 4;\n\n  \t\tvar sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\n  \t\tvar svg = bin.readUTF8(sbuf, 0, sbuf.length);\n  \t\t\n  \t\tfor(var f=startGlyphID; f<=endGlyphID; f++) {\n  \t\t\tobj.entries[f] = svg;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n\n  Typr.SVG.toPath = function(str)\n  {\n  \tvar pth = {cmds:[], crds:[]};\n  \tif(str==null) { return pth; }\n  \t\n  \tvar prsr = new DOMParser();\n  \tvar doc = prsr[\"parseFromString\"](str,\"image/svg+xml\");\n  \t\n  \tvar svg = doc.firstChild;  while(svg.tagName!=\"svg\") { svg = svg.nextSibling; }\n  \tvar vb = svg.getAttribute(\"viewBox\");\n  \tif(vb) { vb = vb.trim().split(\" \").map(parseFloat); }  else   { vb = [0,0,1000,1000]; }\n  \tTypr.SVG._toPath(svg.children, pth);\n  \tfor(var i=0; i<pth.crds.length; i+=2) {\n  \t\tvar x = pth.crds[i], y = pth.crds[i+1];\n  \t\tx -= vb[0];\n  \t\ty -= vb[1];\n  \t\ty = -y;\n  \t\tpth.crds[i] = x;\n  \t\tpth.crds[i+1] = y;\n  \t}\n  \treturn pth;\n  };\n\n  Typr.SVG._toPath = function(nds, pth, fill) {\n  \tfor(var ni=0; ni<nds.length; ni++) {\n  \t\tvar nd = nds[ni], tn = nd.tagName;\n  \t\tvar cfl = nd.getAttribute(\"fill\");  if(cfl==null) { cfl = fill; }\n  \t\tif(tn==\"g\") { Typr.SVG._toPath(nd.children, pth, cfl); }\n  \t\telse if(tn==\"path\") {\n  \t\t\tpth.cmds.push(cfl?cfl:\"#000000\");\n  \t\t\tvar d = nd.getAttribute(\"d\");  //console.log(d);\n  \t\t\tvar toks = Typr.SVG._tokens(d);  //console.log(toks);\n  \t\t\tTypr.SVG._toksToPath(toks, pth);  pth.cmds.push(\"X\");\n  \t\t}\n  \t\telse if(tn==\"defs\") ;\n  \t\telse { console.log(tn, nd); }\n  \t}\n  };\n\n  Typr.SVG._tokens = function(d) {\n  \tvar ts = [], off = 0, rn=false, cn=\"\";  // reading number, current number\n  \twhile(off<d.length){\n  \t\tvar cc=d.charCodeAt(off), ch = d.charAt(off);  off++;\n  \t\tvar isNum = (48<=cc && cc<=57) || ch==\".\" || ch==\"-\";\n  \t\t\n  \t\tif(rn) {\n  \t\t\tif(ch==\"-\") {  ts.push(parseFloat(cn));  cn=ch;  }\n  \t\t\telse if(isNum) { cn+=ch; }\n  \t\t\telse {  ts.push(parseFloat(cn));  if(ch!=\",\" && ch!=\" \") { ts.push(ch); }  rn=false;  }\n  \t\t}\n  \t\telse {\n  \t\t\tif(isNum) {  cn=ch;  rn=true;  }\n  \t\t\telse if(ch!=\",\" && ch!=\" \") { ts.push(ch); }\n  \t\t}\n  \t}\n  \tif(rn) { ts.push(parseFloat(cn)); }\n  \treturn ts;\n  };\n\n  Typr.SVG._toksToPath = function(ts, pth) {\t\n  \tvar i = 0, x = 0, y = 0, ox = 0, oy = 0;\n  \tvar pc = {\"M\":2,\"L\":2,\"H\":1,\"V\":1,   \"S\":4,   \"C\":6};\n  \tvar cmds = pth.cmds, crds = pth.crds;\n  \t\n  \twhile(i<ts.length) {\n  \t\tvar cmd = ts[i];  i++;\n  \t\t\n  \t\tif(cmd==\"z\") {  cmds.push(\"Z\");  x=ox;  y=oy;  }\n  \t\telse {\n  \t\t\tvar cmu = cmd.toUpperCase();\n  \t\t\tvar ps = pc[cmu], reps = Typr.SVG._reps(ts, i, ps);\n  \t\t\n  \t\t\tfor(var j=0; j<reps; j++) {\n  \t\t\t\tvar xi = 0, yi = 0;   if(cmd!=cmu) {  xi=x;  yi=y;  }\n  \t\t\t\t\n  \t\t\t\tif(cmu==\"M\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"M\");  crds.push(x,y);  ox=x;  oy=y; }\n  \t\t\t\telse if(cmu==\"L\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"H\") {  x = xi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"V\") {  y = yi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"C\") {\n  \t\t\t\t\tvar x1=xi+ts[i++], y1=yi+ts[i++], x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];\n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse if(cmu==\"S\") {\n  \t\t\t\t\tvar co = Math.max(crds.length-4, 0);\n  \t\t\t\t\tvar x1 = x+x-crds[co], y1 = y+y-crds[co+1];\n  \t\t\t\t\tvar x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];  \n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse { console.log(\"Unknown SVG command \"+cmd); }\n  \t\t\t}\n  \t\t}\n  \t}\n  };\n  Typr.SVG._reps = function(ts, off, ps) {\n  \tvar i = off;\n  \twhile(i<ts.length) {  if((typeof ts[i]) == \"string\") { break; }  i+=ps;  }\n  \treturn (i-off)/ps;\n  };\n  // End Typr.js\n\n  // Begin Typr.U.js\n\n  if(Typr  ==null) { Typr   = {}; }\n  if(Typr.U==null) { Typr.U = {}; }\n\n\n  Typr.U.codeToGlyph = function(font, code)\n  {\n  \tvar cmap = font.cmap;\n  \t\n  \tvar tind = -1;\n  \tif(cmap.p0e4!=null) { tind = cmap.p0e4; }\n  \telse if(cmap.p3e1!=null) { tind = cmap.p3e1; }\n  \telse if(cmap.p1e0!=null) { tind = cmap.p1e0; }\n  \telse if(cmap.p0e3!=null) { tind = cmap.p0e3; }\n  \t\n  \tif(tind==-1) { throw \"no familiar platform and encoding!\"; }\n  \t\n  \tvar tab = cmap.tables[tind];\n  \t\n  \tif(tab.format==0)\n  \t{\n  \t\tif(code>=tab.map.length) { return 0; }\n  \t\treturn tab.map[code];\n  \t}\n  \telse if(tab.format==4)\n  \t{\n  \t\tvar sind = -1;\n  \t\tfor(var i=0; i<tab.endCount.length; i++)   { if(code<=tab.endCount[i]){  sind=i;  break;  } } \n  \t\tif(sind==-1) { return 0; }\n  \t\tif(tab.startCount[sind]>code) { return 0; }\n  \t\t\n  \t\tvar gli = 0;\n  \t\tif(tab.idRangeOffset[sind]!=0) { gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)]; }\n  \t\telse                           { gli = code + tab.idDelta[sind]; }\n  \t\treturn gli & 0xFFFF;\n  \t}\n  \telse if(tab.format==12)\n  \t{\n  \t\tif(code>tab.groups[tab.groups.length-1][1]) { return 0; }\n  \t\tfor(var i=0; i<tab.groups.length; i++)\n  \t\t{\n  \t\t\tvar grp = tab.groups[i];\n  \t\t\tif(grp[0]<=code && code<=grp[1]) { return grp[2] + (code-grp[0]); }\n  \t\t}\n  \t\treturn 0;\n  \t}\n  \telse { throw \"unknown cmap table format \"+tab.format; }\n  };\n\n\n  Typr.U.glyphToPath = function(font, gid)\n  {\n  \tvar path = { cmds:[], crds:[] };\n  \tif(font.SVG && font.SVG.entries[gid]) {\n  \t\tvar p = font.SVG.entries[gid];  if(p==null) { return path; }\n  \t\tif(typeof p == \"string\") {  p = Typr.SVG.toPath(p);  font.SVG.entries[gid]=p;  }\n  \t\treturn p;\n  \t}\n  \telse if(font.CFF) {\n  \t\tvar state = {x:0,y:0,stack:[],nStems:0,haveWidth:false,width: font.CFF.Private ? font.CFF.Private.defaultWidthX : 0,open:false};\n  \t\tvar cff=font.CFF, pdct = font.CFF.Private;\n  \t\tif(cff.ROS) {\n  \t\t\tvar gi = 0;\n  \t\t\twhile(cff.FDSelect[gi+2]<=gid) { gi+=2; }\n  \t\t\tpdct = cff.FDArray[cff.FDSelect[gi+1]].Private;\n  \t\t}\n  \t\tTypr.U._drawCFF(font.CFF.CharStrings[gid], state, cff, pdct, path);\n  \t}\n  \telse if(font.glyf) {  Typr.U._drawGlyf(gid, font, path);  }\n  \treturn path;\n  };\n\n  Typr.U._drawGlyf = function(gid, font, path)\n  {\n  \tvar gl = font.glyf[gid];\n  \tif(gl==null) { gl = font.glyf[gid] = Typr.glyf._parseGlyf(font, gid); }\n  \tif(gl!=null){\n  \t\tif(gl.noc>-1) { Typr.U._simpleGlyph(gl, path); }\n  \t\telse          { Typr.U._compoGlyph (gl, font, path); }\n  \t}\n  };\n  Typr.U._simpleGlyph = function(gl, p)\n  {\n  \tfor(var c=0; c<gl.noc; c++)\n  \t{\n  \t\tvar i0 = (c==0) ? 0 : (gl.endPts[c-1] + 1);\n  \t\tvar il = gl.endPts[c];\n  \t\t\n  \t\tfor(var i=i0; i<=il; i++)\n  \t\t{\n  \t\t\tvar pr = (i==i0)?il:(i-1);\n  \t\t\tvar nx = (i==il)?i0:(i+1);\n  \t\t\tvar onCurve = gl.flags[i]&1;\n  \t\t\tvar prOnCurve = gl.flags[pr]&1;\n  \t\t\tvar nxOnCurve = gl.flags[nx]&1;\n  \t\t\t\n  \t\t\tvar x = gl.xs[i], y = gl.ys[i];\n  \t\t\t\n  \t\t\tif(i==i0) { \n  \t\t\t\tif(onCurve)  \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p, gl.xs[pr], gl.ys[pr]); } \n  \t\t\t\t\telse          {  Typr.U.P.moveTo(p,x,y);  continue;  /*  will do curveTo at il  */  }\n  \t\t\t\t}\n  \t\t\t\telse        \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p,  gl.xs[pr],       gl.ys[pr]        ); }\n  \t\t\t\t\telse          { Typr.U.P.moveTo(p, (gl.xs[pr]+x)/2, (gl.ys[pr]+y)/2   ); } \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tif(onCurve)\n  \t\t\t{\n  \t\t\t\tif(prOnCurve) { Typr.U.P.lineTo(p,x,y); }\n  \t\t\t}\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(nxOnCurve) { Typr.U.P.qcurveTo(p, x, y, gl.xs[nx], gl.ys[nx]); } \n  \t\t\t\telse          { Typr.U.P.qcurveTo(p, x, y, (x+gl.xs[nx])/2, (y+gl.ys[nx])/2); } \n  \t\t\t}\n  \t\t}\n  \t\tTypr.U.P.closePath(p);\n  \t}\n  };\n  Typr.U._compoGlyph = function(gl, font, p)\n  {\n  \tfor(var j=0; j<gl.parts.length; j++)\n  \t{\n  \t\tvar path = { cmds:[], crds:[] };\n  \t\tvar prt = gl.parts[j];\n  \t\tTypr.U._drawGlyf(prt.glyphIndex, font, path);\n  \t\t\n  \t\tvar m = prt.m;\n  \t\tfor(var i=0; i<path.crds.length; i+=2)\n  \t\t{\n  \t\t\tvar x = path.crds[i  ], y = path.crds[i+1];\n  \t\t\tp.crds.push(x*m.a + y*m.b + m.tx);\n  \t\t\tp.crds.push(x*m.c + y*m.d + m.ty);\n  \t\t}\n  \t\tfor(var i=0; i<path.cmds.length; i++) { p.cmds.push(path.cmds[i]); }\n  \t}\n  };\n\n\n  Typr.U._getGlyphClass = function(g, cd)\n  {\n  \tvar intr = Typr._lctf.getInterval(cd, g);\n  \treturn intr==-1 ? 0 : cd[intr+2];\n  \t//for(var i=0; i<cd.start.length; i++) \n  \t//\tif(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\n  \t//return 0;\n  };\n\n  Typr.U.getPairAdjustment = function(font, g1, g2)\n  {\n  \t//return 0;\n  \tif(font.GPOS) {\n  \t\tvar gpos = font[\"GPOS\"];\n  \t\tvar llist = gpos.lookupList, flist = gpos.featureList;\n  \t\tvar tused = [];\n  \t\tfor(var i=0; i<flist.length; i++) \n  \t\t{\n  \t\t\tvar fl = flist[i];  //console.log(fl);\n  \t\t\tif(fl.tag!=\"kern\") { continue; }\n  \t\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t\t//console.log(tab);\n  \t\t\t\t\n  \t\t\t\tfor(var j=0; j<tab.tabs.length; j++)\n  \t\t\t\t{\n  \t\t\t\t\tif(tab.tabs[i]==null) { continue; }\n  \t\t\t\t\tvar ltab = tab.tabs[j], ind;\n  \t\t\t\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, g1);  if(ind==-1) { continue; }  }\n  \t\t\t\t\t\n  \t\t\t\t\tif(tab.ltype==1) ;\n  \t\t\t\t\telse if(tab.ltype==2)\n  \t\t\t\t\t{\n  \t\t\t\t\t\tvar adj;\n  \t\t\t\t\t\tif(ltab.fmt==1)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar right = ltab.pairsets[ind];\n  \t\t\t\t\t\t\tfor(var i=0; i<right.length; i++) { if(right[i].gid2==g2) { adj = right[i]; } }\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\telse if(ltab.fmt==2)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar c1 = Typr.U._getGlyphClass(g1, ltab.classDef1);\n  \t\t\t\t\t\t\tvar c2 = Typr.U._getGlyphClass(g2, ltab.classDef2);\n  \t\t\t\t\t\t\tadj = ltab.matrix[c1][c2];\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\t//if(adj) console.log(ltab, adj);\n  \t\t\t\t\t\tif(adj && adj.val2) { return adj.val2[2]; }\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \tif(font.kern)\n  \t{\n  \t\tvar ind1 = font.kern.glyph1.indexOf(g1);\n  \t\tif(ind1!=-1)\n  \t\t{\n  \t\t\tvar ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\n  \t\t\tif(ind2!=-1) { return font.kern.rval[ind1].vals[ind2]; }\n  \t\t}\n  \t}\n  \t\n  \treturn 0;\n  };\n\n  Typr.U.stringToGlyphs = function(font, str)\n  {\n  \tvar gls = [];\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  if(cc>0xffff) { i++; }\n  \t\tgls.push(Typr.U.codeToGlyph(font, cc));\n  \t}\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  //\n  \t\tif(cc==2367) {  var t=gls[i-1];  gls[i-1]=gls[i];  gls[i]=t;  }\n  \t\t//if(cc==2381) {  var t=gls[i+1];  gls[i+1]=gls[i];  gls[i]=t;  }\n  \t\tif(cc>0xffff) { i++; }\n  \t}\n  \t//console.log(gls.slice(0));\n  \t\n  \t//console.log(gls);  return gls;\n  \t\n  \tvar gsub = font[\"GSUB\"];  if(gsub==null) { return gls; }\n  \tvar llist = gsub.lookupList, flist = gsub.featureList;\n  \t\n  \tvar cligs = [\"rlig\", \"liga\", \"mset\",  \"isol\",\"init\",\"fina\",\"medi\",   \"half\", \"pres\", \n  \t\t\t\t\"blws\" /* Tibetan fonts like Himalaya.ttf */ ];\n  \t\n  \t//console.log(gls.slice(0));\n  \tvar tused = [];\n  \tfor(var fi=0; fi<flist.length; fi++)\n  \t{\n  \t\tvar fl = flist[fi];  if(cligs.indexOf(fl.tag)==-1) { continue; }\n  \t\t//if(fl.tag==\"blwf\") continue;\n  \t\t//console.log(fl);\n  \t\t//console.log(fl.tag);\n  \t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t//console.log(fl.tab[ti], tab.ltype);\n  \t\t\t//console.log(fl.tag, tab);\n  \t\t\tfor(var ci=0; ci<gls.length; ci++) {\n  \t\t\t\tvar feat = Typr.U._getWPfeature(str, ci);\n  \t\t\t\tif(\"isol,init,fina,medi\".indexOf(fl.tag)!=-1 && fl.tag!=feat) { continue; }\n  \t\t\t\t\n  \t\t\t\tTypr.U._applySubs(gls, ci, tab, llist);\n  \t\t\t}\n  \t\t}\n  \t}\n  \t\n  \treturn gls;\n  };\n  Typr.U._getWPfeature = function(str, ci) {  // get Word Position feature\n  \tvar wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\n  \tvar R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\n  \tvar L = \"ꡲ્૗\";\n  \t\n  \tvar slft = ci==0            || wsep.indexOf(str[ci-1])!=-1;\n  \tvar srgt = ci==str.length-1 || wsep.indexOf(str[ci+1])!=-1;\n  \t\t\n  \tif(!slft && R.indexOf(str[ci-1])!=-1) { slft=true; }\n  \tif(!srgt && R.indexOf(str[ci  ])!=-1) { srgt=true; }\n  \t\t\n  \tif(!srgt && L.indexOf(str[ci+1])!=-1) { srgt=true; }\n  \tif(!slft && L.indexOf(str[ci  ])!=-1) { slft=true; }\n  \t\t\n  \tvar feat = null;\n  \tif(slft) { feat = srgt ? \"isol\" : \"init\"; }\n  \telse     { feat = srgt ? \"fina\" : \"medi\"; }\n  \t\n  \treturn feat;\n  };\n  Typr.U._applySubs = function(gls, ci, tab, llist) {\n  \tvar rlim = gls.length-ci-1;\n  \t//if(ci==0) console.log(\"++++ \", tab.ltype);\n  \tfor(var j=0; j<tab.tabs.length; j++)\n  \t{\n  \t\tif(tab.tabs[j]==null) { continue; }\n  \t\tvar ltab = tab.tabs[j], ind;\n  \t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, gls[ci]);  if(ind==-1) { continue; }  }\n  \t\t//if(ci==0) console.log(ind, ltab);\n  \t\t//*\n  \t\tif(tab.ltype==1) {\n  \t\t\tvar gl = gls[ci];\n  \t\t\tif(ltab.fmt==1) { gls[ci] = gls[ci]+ltab.delta; }\n  \t\t\telse            { gls[ci] = ltab.newg[ind]; }\n  \t\t\t//console.log(\"applying ... 1\", ci, gl, gls[ci]);\n  \t\t}//*\n  \t\telse if(tab.ltype==4) {\n  \t\t\tvar vals = ltab.vals[ind];\n  \t\t\t\n  \t\t\tfor(var k=0; k<vals.length; k++) {\n  \t\t\t\tvar lig = vals[k], rl = lig.chain.length;  if(rl>rlim) { continue; }\n  \t\t\t\tvar good = true, em1 = 0;\n  \t\t\t\tfor(var l=0; l<rl; l++) {  while(gls[ci+em1+(1+l)]==-1){ em1++; }  if(lig.chain[l]!=gls[ci+em1+(1+l)]) { good=false; }  }\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\tgls[ci]=lig.nglyph;\n  \t\t\t\tfor(var l=0; l<rl+em1; l++) { gls[ci+l+1]=-1; }   break;  // first character changed, other ligatures do not apply anymore\n  \t\t\t\t//console.log(\"lig\", ci, lig.chain, lig.nglyph);\n  \t\t\t\t//console.log(\"applying ...\");\n  \t\t\t}\n  \t\t}\n  \t\telse  if(tab.ltype==5 && ltab.fmt==2) {\n  \t\t\tvar cind = Typr._lctf.getInterval(ltab.cDef, gls[ci]);\n  \t\t\tvar cls = ltab.cDef[cind+2], scs = ltab.scset[cls]; \n  \t\t\tfor(var i=0; i<scs.length; i++) {\n  \t\t\t\tvar sc = scs[i], inp = sc.input;\n  \t\t\t\tif(inp.length>rlim) { continue; }\n  \t\t\t\tvar good = true;\n  \t\t\t\tfor(var l=0; l<inp.length; l++) {\n  \t\t\t\t\tvar cind2 = Typr._lctf.getInterval(ltab.cDef, gls[ci+1+l]);\n  \t\t\t\t\tif(cind==-1 && ltab.cDef[cind2+2]!=inp[l]) {  good=false;  break;  }\n  \t\t\t\t}\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\t//console.log(ci, gl);\n  \t\t\t\tvar lrs = sc.substLookupRecords;\n  \t\t\t\tfor(var k=0; k<lrs.length; k+=2)\n  \t\t\t\t{\n  \t\t\t\t\tvar gi = lrs[k], tabi = lrs[k+1];\n  \t\t\t\t\t//Typr.U._applyType1(gls, ci+gi, llist[tabi]);\n  \t\t\t\t\t//console.log(tabi, gls[ci+gi], llist[tabi]);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\telse if(tab.ltype==6 && ltab.fmt==3) {\n  \t\t\t//if(ltab.backCvg.length==0) return;\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.backCvg, ci-ltab.backCvg.length)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.inptCvg, ci)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.ahedCvg, ci+ltab.inptCvg.length)) { continue; }\n  \t\t\t//console.log(ci, ltab);\n  \t\t\tvar lr = ltab.lookupRec;  //console.log(ci, gl, lr);\n  \t\t\tfor(var i=0; i<lr.length; i+=2) {\n  \t\t\t\tvar cind = lr[i], tab2 = llist[lr[i+1]];\n  \t\t\t\t//console.log(\"-\", lr[i+1], tab2);\n  \t\t\t\tTypr.U._applySubs(gls, ci+cind, tab2, llist);\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"Unknown table\", tab.ltype, ltab.fmt);\n  \t\t//*/\n  \t}\n  };\n\n  Typr.U._glsCovered = function(gls, cvgs, ci) {\n  \tfor(var i=0; i<cvgs.length; i++) {\n  \t\tvar ind = Typr._lctf.coverageIndex(cvgs[i], gls[ci+i]);  if(ind==-1) { return false; }\n  \t}\n  \treturn true;\n  };\n\n  Typr.U.glyphsToPath = function(font, gls, clr)\n  {\t\n  \t//gls = gls.reverse();//gls.slice(0,12).concat(gls.slice(12).reverse());\n  \t\n  \tvar tpath = {cmds:[], crds:[]};\n  \tvar x = 0;\n  \t\n  \tfor(var i=0; i<gls.length; i++)\n  \t{\n  \t\tvar gid = gls[i];  if(gid==-1) { continue; }\n  \t\tvar gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\n  \t\tvar path = Typr.U.glyphToPath(font, gid);\n  \t\tfor(var j=0; j<path.crds.length; j+=2)\n  \t\t{\n  \t\t\ttpath.crds.push(path.crds[j] + x);\n  \t\t\ttpath.crds.push(path.crds[j+1]);\n  \t\t}\n  \t\tif(clr) { tpath.cmds.push(clr); }\n  \t\tfor(var j=0; j<path.cmds.length; j++) { tpath.cmds.push(path.cmds[j]); }\n  \t\tif(clr) { tpath.cmds.push(\"X\"); }\n  \t\tx += font.hmtx.aWidth[gid];// - font.hmtx.lsBearing[gid];\n  \t\tif(i<gls.length-1) { x += Typr.U.getPairAdjustment(font, gid, gid2); }\n  \t}\n  \treturn tpath;\n  };\n\n  Typr.U.pathToSVG = function(path, prec)\n  {\n  \tif(prec==null) { prec = 5; }\n  \tvar out = [], co = 0, lmap = {\"M\":2,\"L\":2,\"Q\":4,\"C\":6};\n  \tfor(var i=0; i<path.cmds.length; i++)\n  \t{\n  \t\tvar cmd = path.cmds[i], cn = co+(lmap[cmd]?lmap[cmd]:0);  \n  \t\tout.push(cmd);\n  \t\twhile(co<cn) {  var c = path.crds[co++];  out.push(parseFloat(c.toFixed(prec))+(co==cn?\"\":\" \"));  }\n  \t}\n  \treturn out.join(\"\");\n  };\n\n  Typr.U.pathToContext = function(path, ctx)\n  {\n  \tvar c = 0, crds = path.crds;\n  \t\n  \tfor(var j=0; j<path.cmds.length; j++)\n  \t{\n  \t\tvar cmd = path.cmds[j];\n  \t\tif     (cmd==\"M\") {\n  \t\t\tctx.moveTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"L\") {\n  \t\t\tctx.lineTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"C\") {\n  \t\t\tctx.bezierCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3], crds[c+4], crds[c+5]);\n  \t\t\tc+=6;\n  \t\t}\n  \t\telse if(cmd==\"Q\") {\n  \t\t\tctx.quadraticCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3]);\n  \t\t\tc+=4;\n  \t\t}\n  \t\telse if(cmd.charAt(0)==\"#\") {\n  \t\t\tctx.beginPath();\n  \t\t\tctx.fillStyle = cmd;\n  \t\t}\n  \t\telse if(cmd==\"Z\") {\n  \t\t\tctx.closePath();\n  \t\t}\n  \t\telse if(cmd==\"X\") {\n  \t\t\tctx.fill();\n  \t\t}\n  \t}\n  };\n\n\n  Typr.U.P = {};\n  Typr.U.P.moveTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"M\");  p.crds.push(x,y);\n  };\n  Typr.U.P.lineTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"L\");  p.crds.push(x,y);\n  };\n  Typr.U.P.curveTo = function(p, a,b,c,d,e,f)\n  {\n  \tp.cmds.push(\"C\");  p.crds.push(a,b,c,d,e,f);\n  };\n  Typr.U.P.qcurveTo = function(p, a,b,c,d)\n  {\n  \tp.cmds.push(\"Q\");  p.crds.push(a,b,c,d);\n  };\n  Typr.U.P.closePath = function(p) {  p.cmds.push(\"Z\");  };\n\n\n\n\n  Typr.U._drawCFF = function(cmds, state, font, pdct, p)\n  {\n  \tvar stack = state.stack;\n  \tvar nStems = state.nStems, haveWidth=state.haveWidth, width=state.width, open=state.open;\n  \tvar i=0;\n  \tvar x=state.x, y=state.y, c1x=0, c1y=0, c2x=0, c2y=0, c3x=0, c3y=0, c4x=0, c4y=0, jpx=0, jpy=0;\n  \t\n  \tvar o = {val:0,size:0};\n  \t//console.log(cmds);\n  \twhile(i<cmds.length)\n  \t{\n  \t\tTypr.CFF.getCharString(cmds, i, o);\n  \t\tvar v = o.val;\n  \t\ti += o.size;\n  \t\t\t\n  \t\tif(v==\"o1\" || v==\"o18\")  //  hstem || hstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o3\" || v==\"o23\")  // vstem || vstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o4\")\n  \t\t{\n  \t\t\tif (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(open) { Typr.U.P.closePath(p); }\n\n                      y += stack.pop();\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o5\")\n  \t\t{\n  \t\t\twhile (stack.length > 0) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o6\" || v==\"o7\")  // hlineto || vlineto\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar isX = (v == \"o6\");\n  \t\t\t\n  \t\t\tfor(var j=0; j<count; j++) {\n  \t\t\t\tvar sval = stack.shift();\n  \t\t\t\t\n  \t\t\t\tif(isX) { x += sval; }  else  { y += sval; }\n  \t\t\t\tisX = !isX;\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o8\" || v==\"o24\")\t// rrcurveto || rcurveline\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\twhile(index+6 <= count) {\n  \t\t\t\tc1x = x + stack.shift();\n  \t\t\t\tc1y = y + stack.shift();\n  \t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\tx = c2x + stack.shift();\n  \t\t\t\ty = c2y + stack.shift();\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex+=6;\n  \t\t\t}\n  \t\t\tif(v==\"o24\")\n  \t\t\t{\n  \t\t\t\tx += stack.shift();\n  \t\t\t\ty += stack.shift();\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o11\")  { break; }\n  \t\telse if(v==\"o1234\" || v==\"o1235\" || v==\"o1236\" || v==\"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\n  \t\t{\n  \t\t\tif(v==\"o1234\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n                  c1y = y;                      // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = y;                      // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t\t\n  \t\t\t}\n  \t\t\tif(v==\"o1235\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\ty = c4y + stack.shift();      // dy6\n  \t\t\t\tstack.shift();                // flex depth\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1236\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1237\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tif (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n  \t\t\t\t    x = c4x + stack.shift();\n  \t\t\t\t} else {\n  \t\t\t\t    y = c4y + stack.shift();\n  \t\t\t\t}\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o14\")\n  \t\t{\n  \t\t\tif (stack.length > 0 && !haveWidth) {\n                          width = stack.shift() + font.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(stack.length==4) // seac = standard encoding accented character\n  \t\t\t{\n  \t\t\t\tvar adx = stack.shift();\n  \t\t\t\tvar ady = stack.shift();\n  \t\t\t\tvar bchar = stack.shift();\n  \t\t\t\tvar achar = stack.shift();\n  \t\t\t\n  \t\t\t\t\n  \t\t\t\tvar bind = Typr.CFF.glyphBySE(font, bchar);\n  \t\t\t\tvar aind = Typr.CFF.glyphBySE(font, achar);\n  \t\t\t\t\n  \t\t\t\t//console.log(bchar, bind);\n  \t\t\t\t//console.log(achar, aind);\n  \t\t\t\t//state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\t\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[bind], state,font,pdct,p);\n  \t\t\t\tstate.x = adx; state.y = ady;\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[aind], state,font,pdct,p);\n  \t\t\t\t\n  \t\t\t\t//x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t\tif(open) {  Typr.U.P.closePath(p);  open=false;  }\n  \t\t}\t\t\n  \t\telse if(v==\"o19\" || v==\"o20\") \n  \t\t{ \n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t\t\n  \t\t\ti += (nStems + 7) >> 3;\n  \t\t}\n  \t\t\n  \t\telse if(v==\"o21\") {\n  \t\t\tif (stack.length > 2 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n\n                      y += stack.pop();\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n                      Typr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o22\")\n  \t\t{\n  \t\t\t if (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\t\t\t\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;                    \n  \t\t}\n  \t\telse if(v==\"o25\")\n  \t\t{\n  \t\t\twhile (stack.length > 6) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n\n                      c1x = x + stack.shift();\n                      c1y = y + stack.shift();\n                      c2x = c1x + stack.shift();\n                      c2y = c1y + stack.shift();\n                      x = c2x + stack.shift();\n                      y = c2y + stack.shift();\n                      Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t}\n  \t\telse if(v==\"o26\") \n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          x += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x;\n                          c1y = y + stack.shift();\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x;\n                          y = c2y + stack.shift();\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n\n  \t\t}\n  \t\telse if(v==\"o27\")\n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          y += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x + stack.shift();\n                          c1y = y;\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x + stack.shift();\n                          y = c2y;\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o10\" || v==\"o29\")\t// callsubr || callgsubr\n  \t\t{\n  \t\t\tvar obj = (v==\"o10\" ? pdct : font);\n  \t\t\tif(stack.length==0) { console.log(\"error: empty stack\");  }\n  \t\t\telse {\n  \t\t\t\tvar ind = stack.pop();\n  \t\t\t\tvar subr = obj.Subrs[ ind + obj.Bias ];\n  \t\t\t\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\tTypr.U._drawCFF(subr, state,font,pdct,p);\n  \t\t\t\tx=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o30\" || v==\"o31\")   // vhcurveto || hvcurveto\n  \t\t{\n  \t\t\tvar count, count1 = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\tvar alternate = v == \"o31\";\n  \t\t\t\n  \t\t\tcount  = count1 & ~2;\n  \t\t\tindex += count1 - count;\n  \t\t\t\n  \t\t\twhile ( index < count ) \n  \t\t\t{\n  \t\t\t\tif(alternate)\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x + stack.shift();\n  \t\t\t\t\tc1y = y;\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\ty = c2y + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  x = c2x + stack.shift();  index++;  }\n  \t\t\t\t\telse { x = c2x; }\n  \t\t\t\t\talternate = false;\n  \t\t\t\t}\n  \t\t\t\telse\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x;\n  \t\t\t\t\tc1y = y + stack.shift();\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\tx = c2x + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  y = c2y + stack.shift();  index++;  }\n  \t\t\t\t\telse { y = c2y; }\n  \t\t\t\t\talternate = true;\n  \t\t\t\t}\n                  Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex += 4;\n  \t\t\t}\n  \t\t}\n  \t\t\n  \t\telse if((v+\"\").charAt(0)==\"o\") {   console.log(\"Unknown operation: \"+v, cmds); throw v;  }\n  \t\telse { stack.push(v); }\n  \t}\n  \t//console.log(cmds);\n  \tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width; state.open=open;\n  };\n\n  // End Typr.U.js\n\n  return Typr\n\n  }\n\n  // Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with tiny-inflate \n  // (https://github.com/foliojs/tiny-inflate) for use in troika-3d-text. \n  // Original licenses apply: \n  // - tiny-inflate: https://github.com/foliojs/tiny-inflate/blob/master/LICENSE (MIT)\n  // - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n\n  function woff2otfFactory() {\n\n  // Begin tinyInflate\n  var tinyInflate = (function() {\n    var module = {};\n    var TINF_OK = 0;\n  var TINF_DATA_ERROR = -3;\n\n  function Tree() {\n    this.table = new Uint16Array(16);   /* table of code length counts */\n    this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n  }\n\n  function Data(source, dest) {\n    this.source = source;\n    this.sourceIndex = 0;\n    this.tag = 0;\n    this.bitcount = 0;\n    \n    this.dest = dest;\n    this.destLen = 0;\n    \n    this.ltree = new Tree();  /* dynamic length/symbol tree */\n    this.dtree = new Tree();  /* dynamic distance tree */\n  }\n\n  /* --------------------------------------------------- *\n   * -- uninitialized global data (static structures) -- *\n   * --------------------------------------------------- */\n\n  var sltree = new Tree();\n  var sdtree = new Tree();\n\n  /* extra bits and base tables for length codes */\n  var length_bits = new Uint8Array(30);\n  var length_base = new Uint16Array(30);\n\n  /* extra bits and base tables for distance codes */\n  var dist_bits = new Uint8Array(30);\n  var dist_base = new Uint16Array(30);\n\n  /* special ordering of code length codes */\n  var clcidx = new Uint8Array([\n    16, 17, 18, 0, 8, 7, 9, 6,\n    10, 5, 11, 4, 12, 3, 13, 2,\n    14, 1, 15\n  ]);\n\n  /* used by tinf_decode_trees, avoids allocations every call */\n  var code_tree = new Tree();\n  var lengths = new Uint8Array(288 + 32);\n\n  /* ----------------------- *\n   * -- utility functions -- *\n   * ----------------------- */\n\n  /* build extra bits and base tables */\n  function tinf_build_bits_base(bits, base, delta, first) {\n    var i, sum;\n\n    /* build bits table */\n    for (i = 0; i < delta; ++i) { bits[i] = 0; }\n    for (i = 0; i < 30 - delta; ++i) { bits[i + delta] = i / delta | 0; }\n\n    /* build base table */\n    for (sum = first, i = 0; i < 30; ++i) {\n      base[i] = sum;\n      sum += 1 << bits[i];\n    }\n  }\n\n  /* build the fixed huffman trees */\n  function tinf_build_fixed_trees(lt, dt) {\n    var i;\n\n    /* build fixed length tree */\n    for (i = 0; i < 7; ++i) { lt.table[i] = 0; }\n\n    lt.table[7] = 24;\n    lt.table[8] = 152;\n    lt.table[9] = 112;\n\n    for (i = 0; i < 24; ++i) { lt.trans[i] = 256 + i; }\n    for (i = 0; i < 144; ++i) { lt.trans[24 + i] = i; }\n    for (i = 0; i < 8; ++i) { lt.trans[24 + 144 + i] = 280 + i; }\n    for (i = 0; i < 112; ++i) { lt.trans[24 + 144 + 8 + i] = 144 + i; }\n\n    /* build fixed distance tree */\n    for (i = 0; i < 5; ++i) { dt.table[i] = 0; }\n\n    dt.table[5] = 32;\n\n    for (i = 0; i < 32; ++i) { dt.trans[i] = i; }\n  }\n\n  /* given an array of code lengths, build a tree */\n  var offs = new Uint16Array(16);\n\n  function tinf_build_tree(t, lengths, off, num) {\n    var i, sum;\n\n    /* clear code length count table */\n    for (i = 0; i < 16; ++i) { t.table[i] = 0; }\n\n    /* scan symbol lengths, and sum code length counts */\n    for (i = 0; i < num; ++i) { t.table[lengths[off + i]]++; }\n\n    t.table[0] = 0;\n\n    /* compute offset table for distribution sort */\n    for (sum = 0, i = 0; i < 16; ++i) {\n      offs[i] = sum;\n      sum += t.table[i];\n    }\n\n    /* create code->symbol translation table (symbols sorted by code) */\n    for (i = 0; i < num; ++i) {\n      if (lengths[off + i]) { t.trans[offs[lengths[off + i]]++] = i; }\n    }\n  }\n\n  /* ---------------------- *\n   * -- decode functions -- *\n   * ---------------------- */\n\n  /* get one bit from source stream */\n  function tinf_getbit(d) {\n    /* check if tag is empty */\n    if (!d.bitcount--) {\n      /* load next tag */\n      d.tag = d.source[d.sourceIndex++];\n      d.bitcount = 7;\n    }\n\n    /* shift bit out of tag */\n    var bit = d.tag & 1;\n    d.tag >>>= 1;\n\n    return bit;\n  }\n\n  /* read a num bit value from a stream and add base */\n  function tinf_read_bits(d, num, base) {\n    if (!num)\n      { return base; }\n\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n\n    var val = d.tag & (0xffff >>> (16 - num));\n    d.tag >>>= num;\n    d.bitcount -= num;\n    return val + base;\n  }\n\n  /* given a data stream and a tree, decode a symbol */\n  function tinf_decode_symbol(d, t) {\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n    \n    var sum = 0, cur = 0, len = 0;\n    var tag = d.tag;\n\n    /* get more bits while code value is above sum */\n    do {\n      cur = 2 * cur + (tag & 1);\n      tag >>>= 1;\n      ++len;\n\n      sum += t.table[len];\n      cur -= t.table[len];\n    } while (cur >= 0);\n    \n    d.tag = tag;\n    d.bitcount -= len;\n\n    return t.trans[sum + cur];\n  }\n\n  /* given a data stream, decode dynamic trees from it */\n  function tinf_decode_trees(d, lt, dt) {\n    var hlit, hdist, hclen;\n    var i, num, length;\n\n    /* get 5 bits HLIT (257-286) */\n    hlit = tinf_read_bits(d, 5, 257);\n\n    /* get 5 bits HDIST (1-32) */\n    hdist = tinf_read_bits(d, 5, 1);\n\n    /* get 4 bits HCLEN (4-19) */\n    hclen = tinf_read_bits(d, 4, 4);\n\n    for (i = 0; i < 19; ++i) { lengths[i] = 0; }\n\n    /* read code lengths for code length alphabet */\n    for (i = 0; i < hclen; ++i) {\n      /* get 3 bits code length (0-7) */\n      var clen = tinf_read_bits(d, 3, 0);\n      lengths[clcidx[i]] = clen;\n    }\n\n    /* build code length tree */\n    tinf_build_tree(code_tree, lengths, 0, 19);\n\n    /* decode code lengths for the dynamic trees */\n    for (num = 0; num < hlit + hdist;) {\n      var sym = tinf_decode_symbol(d, code_tree);\n\n      switch (sym) {\n        case 16:\n          /* copy previous code length 3-6 times (read 2 bits) */\n          var prev = lengths[num - 1];\n          for (length = tinf_read_bits(d, 2, 3); length; --length) {\n            lengths[num++] = prev;\n          }\n          break;\n        case 17:\n          /* repeat code length 0 for 3-10 times (read 3 bits) */\n          for (length = tinf_read_bits(d, 3, 3); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        case 18:\n          /* repeat code length 0 for 11-138 times (read 7 bits) */\n          for (length = tinf_read_bits(d, 7, 11); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        default:\n          /* values 0-15 represent the actual code lengths */\n          lengths[num++] = sym;\n          break;\n      }\n    }\n\n    /* build dynamic trees */\n    tinf_build_tree(lt, lengths, 0, hlit);\n    tinf_build_tree(dt, lengths, hlit, hdist);\n  }\n\n  /* ----------------------------- *\n   * -- block inflate functions -- *\n   * ----------------------------- */\n\n  /* given a stream and two trees, inflate a block of data */\n  function tinf_inflate_block_data(d, lt, dt) {\n    while (1) {\n      var sym = tinf_decode_symbol(d, lt);\n\n      /* check for end of block */\n      if (sym === 256) {\n        return TINF_OK;\n      }\n\n      if (sym < 256) {\n        d.dest[d.destLen++] = sym;\n      } else {\n        var length, dist, offs;\n        var i;\n\n        sym -= 257;\n\n        /* possibly get more bits from length code */\n        length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n        dist = tinf_decode_symbol(d, dt);\n\n        /* possibly get more bits from distance code */\n        offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n        /* copy match */\n        for (i = offs; i < offs + length; ++i) {\n          d.dest[d.destLen++] = d.dest[i];\n        }\n      }\n    }\n  }\n\n  /* inflate an uncompressed block of data */\n  function tinf_inflate_uncompressed_block(d) {\n    var length, invlength;\n    var i;\n    \n    /* unread from bitbuffer */\n    while (d.bitcount > 8) {\n      d.sourceIndex--;\n      d.bitcount -= 8;\n    }\n\n    /* get length */\n    length = d.source[d.sourceIndex + 1];\n    length = 256 * length + d.source[d.sourceIndex];\n\n    /* get one's complement of length */\n    invlength = d.source[d.sourceIndex + 3];\n    invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n    /* check length */\n    if (length !== (~invlength & 0x0000ffff))\n      { return TINF_DATA_ERROR; }\n\n    d.sourceIndex += 4;\n\n    /* copy block */\n    for (i = length; i; --i)\n      { d.dest[d.destLen++] = d.source[d.sourceIndex++]; }\n\n    /* make sure we start next block on a byte boundary */\n    d.bitcount = 0;\n\n    return TINF_OK;\n  }\n\n  /* inflate stream from source to dest */\n  function tinf_uncompress(source, dest) {\n    var d = new Data(source, dest);\n    var bfinal, btype, res;\n\n    do {\n      /* read final block flag */\n      bfinal = tinf_getbit(d);\n\n      /* read block type (2 bits) */\n      btype = tinf_read_bits(d, 2, 0);\n\n      /* decompress block */\n      switch (btype) {\n        case 0:\n          /* decompress uncompressed block */\n          res = tinf_inflate_uncompressed_block(d);\n          break;\n        case 1:\n          /* decompress block with fixed huffman trees */\n          res = tinf_inflate_block_data(d, sltree, sdtree);\n          break;\n        case 2:\n          /* decompress block with dynamic huffman trees */\n          tinf_decode_trees(d, d.ltree, d.dtree);\n          res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n          break;\n        default:\n          res = TINF_DATA_ERROR;\n      }\n\n      if (res !== TINF_OK)\n        { throw new Error('Data error'); }\n\n    } while (!bfinal);\n\n    if (d.destLen < d.dest.length) {\n      if (typeof d.dest.slice === 'function')\n        { return d.dest.slice(0, d.destLen); }\n      else\n        { return d.dest.subarray(0, d.destLen); }\n    }\n    \n    return d.dest;\n  }\n\n  /* -------------------- *\n   * -- initialization -- *\n   * -------------------- */\n\n  /* build fixed huffman trees */\n  tinf_build_fixed_trees(sltree, sdtree);\n\n  /* build extra bits and base tables */\n  tinf_build_bits_base(length_bits, length_base, 4, 3);\n  tinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n  /* fix a special case */\n  length_bits[28] = 0;\n  length_base[28] = 258;\n\n  module.exports = tinf_uncompress;\n\n    return module.exports\n  })();\n  // End tinyInflate\n\n  // Begin woff2otf.js\n  /*\n   Copyright 2012, Steffen Hanikel (https://github.com/hanikesn)\n   Modified by Artemy Tregubenko, 2014 (https://github.com/arty-name/woff2otf)\n   Modified by Jason Johnston, 2019 (pako --> tiny-inflate)\n   \n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     See the License for the specific language governing permissions and\n     limitations under the License.\n\n   A tool to convert a WOFF back to a TTF/OTF font file, in pure Javascript\n  */\n\n  function convert_streams(bufferIn, tinyInflate) {\n      var dataViewIn = new DataView(bufferIn);\n      var offsetIn = 0;\n\n      function read2() {\n          var uint16 = dataViewIn.getUint16(offsetIn);\n          offsetIn += 2;\n          return uint16;\n      }\n\n      function read4() {\n          var uint32 = dataViewIn.getUint32(offsetIn);\n          offsetIn += 4;\n          return uint32;\n      }\n\n      function write2(uint16) {\n          dataViewOut.setUint16(offsetOut, uint16);\n          offsetOut += 2;\n      }\n\n      function write4(uint32) {\n          dataViewOut.setUint32(offsetOut, uint32);\n          offsetOut += 4;\n      }\n\n      var WOFFHeader = {\n          signature: read4(),\n          flavor: read4(),\n          length: read4(),\n          numTables: read2(),\n          reserved: read2(),\n          totalSfntSize: read4(),\n          majorVersion: read2(),\n          minorVersion: read2(),\n          metaOffset: read4(),\n          metaLength: read4(),\n          metaOrigLength: read4(),\n          privOffset: read4(),\n          privLength: read4()\n      };\n\n      var entrySelector = 0;\n      while (Math.pow(2, entrySelector) <= WOFFHeader.numTables) {\n          entrySelector++;\n      }\n      entrySelector--;\n\n      var searchRange = Math.pow(2, entrySelector) * 16;\n      var rangeShift = WOFFHeader.numTables * 16 - searchRange;\n\n      var offset = 4 + 2 + 2 + 2 + 2;\n      var TableDirectoryEntries = [];\n      for (var i = 0; i < WOFFHeader.numTables; i++) {\n          TableDirectoryEntries.push({\n              tag: read4(),\n              offset: read4(),\n              compLength: read4(),\n              origLength: read4(),\n              origChecksum: read4()\n          });\n          offset += 4 * 4;\n      }\n\n      var arrayOut = new Uint8Array(\n          4 + 2 + 2 + 2 + 2 +\n          TableDirectoryEntries.length * (4 + 4 + 4 + 4) +\n          TableDirectoryEntries.reduce(function(acc, entry) { return acc + entry.origLength + 4; }, 0)\n      );\n      var bufferOut = arrayOut.buffer;\n      var dataViewOut = new DataView(bufferOut);\n      var offsetOut = 0;\n\n      write4(WOFFHeader.flavor);\n      write2(WOFFHeader.numTables);\n      write2(searchRange);\n      write2(entrySelector);\n      write2(rangeShift);\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          write4(TableDirectoryEntry.tag);\n          write4(TableDirectoryEntry.origChecksum);\n          write4(offset);\n          write4(TableDirectoryEntry.origLength);\n\n          TableDirectoryEntry.outOffset = offset;\n          offset += TableDirectoryEntry.origLength;\n          if ((offset % 4) != 0) {\n              offset += 4 - (offset % 4);\n          }\n      });\n\n      var size;\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          var compressedData = bufferIn.slice(\n              TableDirectoryEntry.offset,\n              TableDirectoryEntry.offset + TableDirectoryEntry.compLength\n          );\n\n          if (TableDirectoryEntry.compLength != TableDirectoryEntry.origLength) {\n              var uncompressedData = new Uint8Array(TableDirectoryEntry.origLength);\n              tinyInflate(\n                new Uint8Array(compressedData, 2), //skip deflate header\n                uncompressedData\n              );\n          } else {\n              uncompressedData = new Uint8Array(compressedData);\n          }\n\n          arrayOut.set(uncompressedData, TableDirectoryEntry.outOffset);\n          offset = TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength;\n\n          var padding = 0;\n          if ((offset % 4) != 0) {\n              padding = 4 - (offset % 4);\n          }\n          arrayOut.set(\n              new Uint8Array(padding).buffer,\n              TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength\n          );\n\n          size = offset + padding;\n      });\n\n      return bufferOut.slice(0, size);\n  }\n\n  // End woff2otf.js\n\n  return function(buffer) {\n    return convert_streams(buffer, tinyInflate)\n  }\n\n  }\n\n  /**\n   * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n   * Also adds support for WOFF files (not WOFF2).\n   */\n\n  function parserFactory(Typr, woff2otf) {\n    var cmdArgLengths = {\n      M: 2,\n      L: 2,\n      Q: 4,\n      C: 6,\n      Z: 0\n    };\n\n    function wrapFontObj(typrFont) {\n      var glyphMap = Object.create(null);\n\n      var fontObj = {\n        unitsPerEm: typrFont.head.unitsPerEm,\n        ascender: typrFont.hhea.ascender,\n        descender: typrFont.hhea.descender,\n        forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n          var glyphX = 0;\n          var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n          var glyphIndices = Typr.U.stringToGlyphs(typrFont, text);\n          var charIndex = 0;\n          glyphIndices.forEach(function (glyphIndex) {\n            // Typr returns a glyph index per string codepoint, with -1s in place of those that\n            // were omitted due to ligature substitution. So we can track original index in the\n            // string via simple increment, and skip everything else when seeing a -1.\n            if (glyphIndex !== -1) {\n              var glyphObj = glyphMap[glyphIndex];\n              if (!glyphObj) {\n                var ref = Typr.U.glyphToPath(typrFont, glyphIndex);\n                var cmds = ref.cmds;\n                var crds = ref.crds;\n\n                // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n                // normalize the two, so it's simplest just to iterate ourselves.\n                var xMin, yMin, xMax, yMax;\n                if (crds.length) {\n                  xMin = yMin = Infinity;\n                  xMax = yMax = -Infinity;\n                  for (var i = 0, len = crds.length; i < len; i += 2) {\n                    var x = crds[i];\n                    var y = crds[i + 1];\n                    if (x < xMin) { xMin = x; }\n                    if (y < yMin) { yMin = y; }\n                    if (x > xMax) { xMax = x; }\n                    if (y > yMax) { yMax = y; }\n                  }\n                } else {\n                  xMin = xMax = yMin = yMax = 0;\n                }\n\n                glyphObj = glyphMap[glyphIndex] = {\n                  index: glyphIndex,\n                  advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                  xMin: xMin,\n                  yMin: yMin,\n                  xMax: xMax,\n                  yMax: yMax,\n                  pathCommandCount: cmds.length,\n                  forEachPathCommand: function forEachPathCommand(callback) {\n                    var argsIndex = 0;\n                    var argsArray = [];\n                    for (var i = 0, len = cmds.length; i < len; i++) {\n                      var numArgs = cmdArgLengths[cmds[i]];\n                      argsArray.length = 1 + numArgs;\n                      argsArray[0] = cmds[i];\n                      for (var j = 1; j <= numArgs; j++) {\n                        argsArray[j] = crds[argsIndex++];\n                      }\n                      callback.apply(null, argsArray);\n                    }\n                  }\n                };\n              }\n\n              callback.call(null, glyphObj, glyphX, charIndex);\n\n              if (glyphObj.advanceWidth) {\n                glyphX += glyphObj.advanceWidth * fontScale;\n              }\n              if (letterSpacing) {\n                glyphX += letterSpacing * fontSize;\n              }\n            }\n            charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n          });\n          return glyphX\n        }\n      };\n\n      return fontObj\n    }\n\n    return function parse(buffer) {\n      // Look to see if we have a WOFF file and convert it if so:\n      var peek = new Uint8Array(buffer, 0, 4);\n      var tag = Typr._bin.readASCII(peek, 0, 4);\n      if (tag === 'wOFF') {\n        buffer = woff2otf(buffer);\n      } else if (tag === 'wOF2') {\n        throw new Error('woff2 fonts not supported')\n      }\n      return wrapFontObj(Typr.parse(buffer)[0])\n    }\n  }\n\n\n  var workerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'Typr Font Parser',\n    dependencies: [typrFactory, woff2otfFactory, parserFactory],\n    init: function init(typrFactory, woff2otfFactory, parserFactory) {\n      var Typr = typrFactory();\n      var woff2otf = woff2otfFactory();\n      return parserFactory(Typr, woff2otf)\n    }\n  });\n\n  //import fontParser from './FontParser_OpenType.js'\n\n\n  var CONFIG = {\n    defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n    sdfGlyphSize: 64,\n    textureWidth: 2048\n  };\n  var tempColor = new three.Color();\n\n  /**\n   * Customizes the text builder configuration. This must be called prior to the first font processing\n   * request, and applies to all fonts.\n   *\n   * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n   *                 requests, in case none is specified or the specifiede font fails to load or parse.\n   *                 Defaults to \"Roboto Regular\" from Google Fonts.\n   * @param {Number} config.sdfGlyphSize - The size of each glyph's SDF (signed distance field) texture\n   *                 that is used for rendering. Must be a power-of-two number, and applies to all fonts.\n   *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n   *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n   *                 to 64 which is generally a good balance of size and quality.\n   * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n   *                 2048 which is a safe maximum texture dimension according to the stats at\n   *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n   *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n   *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n   *                 glyph size and/or have an extraordinary number of glyphs.\n   */\n  function configureTextBuilder(config) {\n    {\n      assign(CONFIG, config);\n    }\n  }\n\n\n  /**\n   * The radial distance from glyph edges over which the SDF alpha will be calculated; if the alpha\n   * at distance:0 is 0.5, then the alpha at this distance will be zero. This is defined as a percentage\n   * of each glyph's maximum dimension in font space units so that it maps to the same minimum number of\n   * SDF texels regardless of the glyph's size. A larger value provides greater alpha gradient resolution\n   * and improves readability/antialiasing quality at small display sizes, but also decreases the number\n   * of texels available for encoding path details.\n   */\n  var SDF_DISTANCE_PERCENT = 1 / 8;\n\n\n  /**\n   * Repository for all font SDF atlas textures\n   *\n   *   {\n   *     [font]: {\n   *       sdfTexture: DataTexture\n   *     }\n   *   }\n   */\n  var atlases = Object.create(null);\n\n  /**\n   * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n   * @property {object} parameters - The normalized input arguments to the render call.\n   * @property {DataTexture} sdfTexture - The SDF atlas texture.\n   * @property {number} sdfGlyphSize - See `configureTextBuilder#config.sdfGlyphSize`\n   * @property {number} sdfMinDistancePercent - See `SDF_DISTANCE_PERCENT`\n   * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n   * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n   * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n   * @property {Float32Array} [caretPositions] - A list of caret positions for all glyphs; this is\n   *           the bottom [x,y] of the cursor position before each char, plus one after the last char.\n   * @property {number} [caretHeight] - An appropriate height for all selection carets.\n   * @property {number} ascender - The font's ascender metric.\n   * @property {number} descender - The font's descender metric.\n   * @property {number} lineHeight - The final computed lineHeight measurement.\n   * @property {number} topBaseline - The y position of the top line's baseline.\n   * @property {Array<number>} totalBounds - The total [minX, minY, maxX, maxY] rect including all glyph\n   *           quad bounds; this will be slightly larger than the actual glyph path edges due to SDF padding.\n   * @property {Array<number>} totalBlockSize - The [width, height] of the text block; this does not include\n   *           extra SDF padding so it is accurate to use for measurement.\n   * @property {Array<number>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n   *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n   * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n   *           generation, layout, etc.\n   * @frozen\n   */\n\n  /**\n   * @callback getTextRenderInfo~callback\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   */\n\n  /**\n   * Main entry point for requesting the data needed to render a text string with given font parameters.\n   * This is an asynchronous call, performing most of the logic in a web worker thread.\n   * @param {object} args\n   * @param {getTextRenderInfo~callback} callback\n   */\n  function getTextRenderInfo(args, callback) {\n    args = assign({}, args);\n\n    // Apply default font here to avoid a 'null' atlas, and convert relative\n    // URLs to absolute so they can be resolved in the worker\n    args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\n\n    // Normalize text to a string\n    args.text = '' + args.text;\n\n    // Normalize colors\n    if (args.colorRanges != null) {\n      var colors = {};\n      for (var key in args.colorRanges) {\n        if (args.colorRanges.hasOwnProperty(key)) {\n          var val = args.colorRanges[key];\n          if (typeof val !== 'number') {\n            val = tempColor.set(val).getHex();\n          }\n          colors[key] = val;\n        }\n      }\n      args.colorRanges = colors;\n    }\n\n    Object.freeze(args);\n\n    // Init the atlas for this font if needed\n    var sdfGlyphSize = CONFIG.sdfGlyphSize;\n    var textureWidth = CONFIG.textureWidth;\n    var atlas = atlases[args.font];\n    if (!atlas) {\n      atlas = atlases[args.font] = {\n        sdfTexture: new three.DataTexture(\n          new Uint8Array(sdfGlyphSize * textureWidth),\n          textureWidth,\n          sdfGlyphSize,\n          three.LuminanceFormat,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          three.LinearFilter,\n          three.LinearFilter\n        )\n      };\n      atlas.sdfTexture.font = args.font;\n    }\n\n    // Issue request to the FontProcessor in the worker\n    processInWorker(args).then(function (result) {\n      // If the response has newGlyphs, copy them into the atlas texture at the specified indices\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (ref) {\n          var textureData = ref.textureData;\n          var atlasIndex = ref.atlasIndex;\n\n          var texImg = atlas.sdfTexture.image;\n\n          // Grow the texture by power of 2 if needed\n          while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n            var biggerArray = new Uint8Array(texImg.data.length * 2);\n            biggerArray.set(texImg.data);\n            texImg.data = biggerArray;\n            texImg.height *= 2;\n          }\n\n          // Insert the new glyph's data into the full texture image at the correct offsets\n          var cols = texImg.width / sdfGlyphSize;\n          for (var y = 0; y < sdfGlyphSize; y++) {\n            var srcStartIndex = y * sdfGlyphSize;\n            var tgtStartIndex = texImg.width * sdfGlyphSize * Math.floor(atlasIndex / cols) //full rows\n              + (atlasIndex % cols) * sdfGlyphSize //partial row\n              + (y * texImg.width); //row within glyph\n            for (var x = 0; x < sdfGlyphSize; x++) {\n              texImg.data[tgtStartIndex + x] = textureData[srcStartIndex + x];\n            }\n          }\n        });\n        atlas.sdfTexture.needsUpdate = true;\n      }\n\n      // Invoke callback with the text layout arrays and updated texture\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture: atlas.sdfTexture,\n        sdfGlyphSize: sdfGlyphSize,\n        sdfMinDistancePercent: SDF_DISTANCE_PERCENT,\n        glyphBounds: result.glyphBounds,\n        glyphAtlasIndices: result.glyphAtlasIndices,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        topBaseline: result.topBaseline,\n        totalBounds: result.totalBounds,\n        totalBlockSize: result.totalBlockSize,\n        timings: result.timings\n      }));\n    });\n  }\n\n\n  /**\n   * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n   * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n   * needed fonts and glyphs up front along with other assets.\n   *\n   * @param {string} font - URL of the font file to preload. If not given, the default font will\n   *        be loaded.\n   * @param {string|string[]} charSequences - One or more character sequences for which to pre-\n   *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n   *        to specify ligature sequences in addition to their individual characters to get all\n   *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n   * @param {function} callback - A function that will be called when the preloading is complete.\n   */\n  function preloadFont(font, charSequences, callback) {\n    var text = Array.isArray(charSequences) ? charSequences.join('\\n') : '' + charSequences;\n    getTextRenderInfo({ font: font, text: text }, callback);\n  }\n\n\n  // Local assign impl so we don't have to import troika-core\n  function assign(toObj, fromObj) {\n    for (var key in fromObj) {\n      if (fromObj.hasOwnProperty(key)) {\n        toObj[key] = fromObj[key];\n      }\n    }\n    return toObj\n  }\n\n  // Utility for making URLs absolute\n  var linkEl;\n  function toAbsoluteURL(path) {\n    if (!linkEl) {\n      linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n    }\n    linkEl.href = path;\n    return linkEl.href\n  }\n\n\n  var fontProcessorWorkerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'FontProcessor',\n    dependencies: [\n      CONFIG,\n      SDF_DISTANCE_PERCENT,\n      workerModule,\n      createGlyphSegmentsQuadtree,\n      createSDFGenerator,\n      createFontProcessor\n    ],\n    init: function init(config, sdfDistancePercent, fontParser, createGlyphSegmentsQuadtree, createSDFGenerator, createFontProcessor) {\n      var sdfGenerator = createSDFGenerator(\n        createGlyphSegmentsQuadtree,\n        {\n          sdfTextureSize: config.sdfGlyphSize,\n          sdfDistancePercent: sdfDistancePercent\n        }\n      );\n      return createFontProcessor(fontParser, sdfGenerator, {\n        defaultFontUrl: config.defaultFontURL\n      })\n    }\n  });\n\n  var processInWorker = troikaWorkerUtils.defineWorkerModule({\n    name: 'TextBuilder',\n    dependencies: [fontProcessorWorkerModule, troikaWorkerUtils.ThenableWorkerModule],\n    init: function init(fontProcessor, Thenable) {\n      return function(args) {\n        var thenable = new Thenable();\n        fontProcessor.process(args, thenable.resolve);\n        return thenable\n      }\n    },\n    getTransferables: function getTransferables(result) {\n      // Mark array buffers as transferable to avoid cloning during postMessage\n      var transferables = [\n        result.glyphBounds.buffer,\n        result.glyphAtlasIndices.buffer\n      ];\n      if (result.caretPositions) {\n        transferables.push(result.caretPositions.buffer);\n      }\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (d) {\n          transferables.push(d.textureData.buffer);\n        });\n      }\n      return transferables\n    }\n  });\n\n  var templateGeometries = {};\n  function getTemplateGeometry(detail) {\n    var geom = templateGeometries[detail];\n    if (!geom) {\n      geom = templateGeometries[detail] = new three.PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\n    }\n    return geom\n  }\n  var tempVec3 = new three.Vector3();\n\n  var glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  var glyphIndexAttrName = 'aTroikaGlyphIndex';\n  var glyphColorAttrName = 'aTroikaGlyphColor';\n\n\n\n  /**\n  @class GlyphsGeometry\n\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n    Where N = number of glyphs...\n\n    Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n\n    Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n\n  */\n  var GlyphsGeometry = /*@__PURE__*/(function (InstancedBufferGeometry) {\n    function GlyphsGeometry() {\n      InstancedBufferGeometry.call(this);\n\n      this.detail = 1;\n\n      // Preallocate zero-radius bounding sphere\n      this.boundingSphere = new three.Sphere();\n    }\n\n    if ( InstancedBufferGeometry ) GlyphsGeometry.__proto__ = InstancedBufferGeometry;\n    GlyphsGeometry.prototype = Object.create( InstancedBufferGeometry && InstancedBufferGeometry.prototype );\n    GlyphsGeometry.prototype.constructor = GlyphsGeometry;\n\n    var prototypeAccessors = { detail: { configurable: true } };\n\n    GlyphsGeometry.prototype.computeBoundingSphere = function computeBoundingSphere () {\n      // No-op; we'll sync the boundingSphere proactively in `updateGlyphs`.\n    };\n\n    prototypeAccessors.detail.set = function (detail) {\n      var this$1 = this;\n\n      if (detail !== this._detail) {\n        this._detail = detail;\n        if (typeof detail !== 'number' || detail < 1) {\n          detail = 1;\n        }\n        var tpl = getTemplateGeometry(detail)\n        ;['position', 'normal', 'uv'].forEach(function (attr) {\n          this$1.attributes[attr] = tpl.attributes[attr];\n        });\n        this.setIndex(tpl.getIndex());\n      }\n    };\n    prototypeAccessors.detail.get = function () {\n      return this._detail\n    };\n\n    /**\n     * Update the geometry for a new set of glyphs.\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n     *        the SDF atlas texture.\n     * @param {Array} totalBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n     */\n    GlyphsGeometry.prototype.updateGlyphs = function updateGlyphs (glyphBounds, glyphAtlasIndices, totalBounds, chunkedBounds, glyphColors) {\n      // Update the instance attributes\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n      this._chunkedBounds = chunkedBounds;\n      setInstanceCount(this, glyphAtlasIndices.length);\n\n      // Update the boundingSphere based on the total bounds\n      var sphere = this.boundingSphere;\n      sphere.center.set(\n        (totalBounds[0] + totalBounds[2]) / 2,\n        (totalBounds[1] + totalBounds[3]) / 2,\n        0\n      );\n      sphere.radius = sphere.center.distanceTo(tempVec3.set(totalBounds[0], totalBounds[1], 0));\n    };\n\n    /**\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n     * be clipped anyway.\n     *\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n     * but at the expense of much larger attribute buffers (see classdoc above.)\n     *\n     * @param {Vector4} clipRect\n     */\n    GlyphsGeometry.prototype.applyClipRect = function applyClipRect (clipRect) {\n      var count = this.getAttribute(glyphIndexAttrName).count;\n      var chunks = this._chunkedBounds;\n      if (chunks) {\n        for (var i = chunks.length; i--;) {\n          count = chunks[i].end;\n          var rect = chunks[i].rect;\n          // note: both rects are l-b-r-t\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n            break\n          }\n        }\n      }\n      setInstanceCount(this, count);\n    };\n\n    Object.defineProperties( GlyphsGeometry.prototype, prototypeAccessors );\n\n    return GlyphsGeometry;\n  }(three.InstancedBufferGeometry));\n\n  // Compat for pre r109:\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\n      this.attributes[ name ] = attribute;\n      return this\n    };\n  }\n\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    var attr = geom.getAttribute(attrName);\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new three.InstancedBufferAttribute(newArray, itemSize));\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  }\n\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  // language=GLSL\n  var VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nuniform vec4 uTroikaClipRect;\\nuniform mat3 uTroikaOrient;\\nuniform bool uTroikaUseGlyphColors;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nattribute vec3 aTroikaGlyphColor;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec3 vTroikaGlyphColor;\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var VERTEX_TRANSFORM = \"\\nvec4 bounds = aTroikaGlyphBounds;\\nvec4 clippedBounds = vec4(\\n  clamp(bounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\\n  clamp(bounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\\n);\\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\\nvTroikaGlyphUV = clippedXY.xy;\\n\\nfloat cols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\\nvTroikaSDFTextureUV = vec2(\\n  mod(aTroikaGlyphIndex, cols) + clippedXY.x,\\n  floor(aTroikaGlyphIndex / cols) + clippedXY.y\\n) * uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\n\\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\\n\\nuv = vec2(\\n  (position.x - uTroikaTotalBounds.x) / (uTroikaTotalBounds.z - uTroikaTotalBounds.x),\\n  (position.y - uTroikaTotalBounds.y) / (uTroikaTotalBounds.w - uTroikaTotalBounds.y)\\n);\\n\\nposition = uTroikaOrient * position;\\nnormal = uTroikaOrient * normal;\\n\";\n\n  // language=GLSL\n  var FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform float uTroikaSDFMinDistancePct;\\nuniform bool uTroikaSDFDebug;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\n\\nfloat troikaGetTextAlpha() {\\n  float troikaSDFValue = texture2D(uTroikaSDFTexture, vTroikaSDFTextureUV).r;\\n  \\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(0.5, troikaSDFValue);\\n  #else\\n  \" + ('') + \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  float aaDist = min(\\n    0.5,\\n    0.5 * min(\\n      fwidth(vTroikaGlyphUV.x),\\n      fwidth(vTroikaGlyphUV.y)\\n    )\\n  ) / uTroikaSDFMinDistancePct;\\n  #else\\n  float aaDist = 0.01;\\n  #endif\\n  \\n  float alpha = uTroikaSDFDebug ? troikaSDFValue : smoothstep(\\n    0.5 - aaDist,\\n    0.5 + aaDist,\\n    troikaSDFValue\\n  );\\n  #endif\\n  \\n  return alpha;\\n}\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var FRAGMENT_TRANSFORM = \"\\nfloat troikaAlphaMult = troikaGetTextAlpha();\\nif (troikaAlphaMult == 0.0) {\\n  discard;\\n} else {\\n  gl_FragColor.a *= troikaAlphaMult;\\n}\\n\";\n\n\n  /**\n   * Create a material for rendering text, derived from a baseMaterial\n   */\n  function createTextDerivedMaterial(baseMaterial) {\n    var textMaterial = troikaThreeUtils.createDerivedMaterial(baseMaterial, {\n      extensions: {derivatives: true},\n      uniforms: {\n        uTroikaSDFTexture: {value: null},\n        uTroikaSDFTextureSize: {value: new three.Vector2()},\n        uTroikaSDFGlyphSize: {value: 0},\n        uTroikaSDFMinDistancePct: {value: 0},\n        uTroikaTotalBounds: {value: new three.Vector4(0,0,0,0)},\n        uTroikaClipRect: {value: new three.Vector4(0,0,0,0)},\n        uTroikaOrient: {value: new three.Matrix3()},\n        uTroikaUseGlyphColors: {value: true},\n        uTroikaSDFDebug: {value: false}\n      },\n      vertexDefs: VERTEX_DEFS,\n      vertexTransform: VERTEX_TRANSFORM,\n      fragmentDefs: FRAGMENT_DEFS,\n      fragmentColorTransform: FRAGMENT_TRANSFORM,\n      customRewriter: function customRewriter(ref) {\n        var vertexShader = ref.vertexShader;\n        var fragmentShader = ref.fragmentShader;\n\n        var uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n        if (uDiffuseRE.test(fragmentShader)) {\n          // Replace all instances of `diffuse` with our varying\n          fragmentShader = fragmentShader\n            .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\n            .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\n          // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n          if (!uDiffuseRE.test(vertexShader)) {\n            vertexShader = vertexShader.replace(\n              troikaThreeUtils.voidMainRegExp,\n              'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\n            );\n          }\n        }\n        return { vertexShader: vertexShader, fragmentShader: fragmentShader }\n      }\n    });\n\n    // Force transparency - TODO is this reasonable?\n    textMaterial.transparent = true;\n\n    Object.defineProperties(textMaterial, {\n      isTroikaTextMaterial: {value: true},\n\n      // WebGLShadowMap reverses the side of the shadow material by default, which fails\n      // for planes, so here we force the `shadowSide` to always match the main side.\n      shadowSide: {\n        get: function get() {\n          return this.side\n        },\n        set: function set() {\n          //no-op\n        }\n      }\n    });\n\n    return textMaterial\n  }\n\n  var defaultMaterial = new three.MeshBasicMaterial({\n    color: 0xffffff,\n    side: three.DoubleSide,\n    transparent: true\n  });\n\n  var tempMat4 = new three.Matrix4();\n  var tempVec3a = new three.Vector3();\n  var tempVec3b = new three.Vector3();\n  var tempArray = [];\n  var origin = new three.Vector3();\n  var defaultOrient = '+x+y';\n\n  var raycastMesh = new three.Mesh(\n    new three.PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0),\n    defaultMaterial\n  );\n\n  var syncStartEvent = {type: 'syncstart'};\n  var syncCompleteEvent = {type: 'synccomplete'};\n\n  var SYNCABLE_PROPS = [\n    'font',\n    'fontSize',\n    'letterSpacing',\n    'lineHeight',\n    'maxWidth',\n    'overflowWrap',\n    'text',\n    'textAlign',\n    'whiteSpace',\n    'anchorX',\n    'anchorY',\n    'colorRanges'\n  ];\n\n  var COPYABLE_PROPS = SYNCABLE_PROPS.concat(\n    'material',\n    'color',\n    'depthOffset',\n    'clipRect',\n    'orientation',\n    'glyphGeometryDetail'\n  );\n\n\n\n  /**\n   * @class TextMesh\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n  var TextMesh = /*@__PURE__*/(function (Mesh) {\n    function TextMesh() {\n      var geometry = new GlyphsGeometry();\n      Mesh.call(this, geometry, null);\n\n      // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n      this.text = '';\n\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n      this.anchorX = 0;\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n      this.anchorY = 0;\n\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be any of the formats supported by\n       * OpenType (see https://github.com/opentypejs/opentype.js).\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n      this.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n      this.fontSize = 0.1;\n\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n      this.letterSpacing = 0;\n\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n      this.lineHeight = 'normal';\n\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n      this.maxWidth = Infinity;\n\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n      this.overflowWrap = 'normal';\n\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n      this.textAlign = 'left';\n\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n      this.whiteSpace = 'normal';\n\n\n      // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n      this.material = null;\n\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`.\n       */\n      this.color = null;\n\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n      this.colorRanges = null;\n\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n      this.depthOffset = 0;\n\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n      this.clipRect = null;\n\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n      this.orientation = defaultOrient;\n\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n      this.glyphGeometryDetail = 1;\n\n      this.debugSDF = false;\n    }\n\n    if ( Mesh ) TextMesh.__proto__ = Mesh;\n    TextMesh.prototype = Object.create( Mesh && Mesh.prototype );\n    TextMesh.prototype.constructor = TextMesh;\n\n    var prototypeAccessors = { textRenderInfo: { configurable: true },material: { configurable: true },glyphGeometryDetail: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n    TextMesh.prototype.sync = function sync (callback) {\n      var this$1 = this;\n\n      if (this._needsSync) {\n        this._needsSync = false;\n\n        // If there's another sync still in progress, queue\n        if (this._isSyncing) {\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n        } else {\n          this._isSyncing = true;\n          this.dispatchEvent(syncStartEvent);\n\n          getTextRenderInfo({\n            text: this.text,\n            font: this.font,\n            fontSize: this.fontSize || 0.1,\n            letterSpacing: this.letterSpacing || 0,\n            lineHeight: this.lineHeight || 'normal',\n            maxWidth: this.maxWidth,\n            textAlign: this.textAlign,\n            whiteSpace: this.whiteSpace,\n            overflowWrap: this.overflowWrap,\n            anchorX: this.anchorX,\n            anchorY: this.anchorY,\n            colorRanges: this.colorRanges,\n            includeCaretPositions: true //TODO parameterize\n          }, function (textRenderInfo) {\n            this$1._isSyncing = false;\n\n            // Save result for later use in onBeforeRender\n            this$1._textRenderInfo = textRenderInfo;\n\n            // Update the geometry attributes\n            this$1.geometry.updateGlyphs(\n              textRenderInfo.glyphBounds,\n              textRenderInfo.glyphAtlasIndices,\n              textRenderInfo.totalBounds,\n              textRenderInfo.chunkedBounds,\n              textRenderInfo.glyphColors\n            );\n\n            // If we had extra sync requests queued up, kick it off\n            var queued = this$1._queuedSyncs;\n            if (queued) {\n              this$1._queuedSyncs = null;\n              this$1._needsSync = true;\n              this$1.sync(function () {\n                queued.forEach(function (fn) { return fn && fn(); });\n              });\n            }\n\n            this$1.dispatchEvent(syncCompleteEvent);\n            if (callback) {\n              callback();\n            }\n          });\n        }\n      }\n    };\n\n    /**\n     * Initiate a sync if needed - note it won't complete until next frame at the\n     * earliest so if possible it's a good idea to call sync() manually as soon as\n     * all the properties have been set.\n     * @override\n     */\n    TextMesh.prototype.onBeforeRender = function onBeforeRender () {\n      this.sync();\n      this._prepareForRender();\n    };\n\n    /**\n     * Shortcut to dispose the geometry specific to this instance.\n     * Note: we don't also dispose the derived material here because if anything else is\n     * sharing the same base material it will result in a pause next frame as the program\n     * is recompiled. Instead users can dispose the base material manually, like normal,\n     * and we'll also dispose the derived material at that time.\n     */\n    TextMesh.prototype.dispose = function dispose () {\n      this.geometry.dispose();\n    };\n\n    /**\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\n     * @readonly\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n     * the asynchrous `sync()` process completes.\n     */\n    prototypeAccessors.textRenderInfo.get = function () {\n      return this._textRenderInfo || null\n    };\n\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n    prototypeAccessors.material.get = function () {\n      var derivedMaterial = this._derivedMaterial;\n      var baseMaterial = this._baseMaterial || defaultMaterial;\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n        // dispose the derived material when its base material is disposed:\n        baseMaterial.addEventListener('dispose', function onDispose() {\n          baseMaterial.removeEventListener('dispose', onDispose);\n          derivedMaterial.dispose();\n        });\n      }\n      return derivedMaterial\n    };\n    prototypeAccessors.material.set = function (baseMaterial) {\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\n        this._derivedMaterial = baseMaterial;\n        this._baseMaterial = baseMaterial.baseMaterial;\n      } else {\n        this._baseMaterial = baseMaterial;\n      }\n    };\n\n    prototypeAccessors.glyphGeometryDetail.get = function () {\n      return this.geometry.detail\n    };\n    prototypeAccessors.glyphGeometryDetail.set = function (detail) {\n      this.geometry.detail = detail;\n    };\n\n    // Create and update material for shadows upon request:\n    prototypeAccessors.customDepthMaterial.get = function () {\n      return this.material.getDepthMaterial()\n    };\n    prototypeAccessors.customDistanceMaterial.get = function () {\n      return this.material.getDistanceMaterial()\n    };\n\n    TextMesh.prototype._prepareForRender = function _prepareForRender () {\n      var material = this._derivedMaterial;\n      var uniforms = material.uniforms;\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var sdfTexture = textInfo.sdfTexture;\n        var totalBounds = textInfo.totalBounds;\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n        uniforms.uTroikaSDFMinDistancePct.value = textInfo.sdfMinDistancePercent;\n        uniforms.uTroikaTotalBounds.value.fromArray(totalBounds);\n        uniforms.uTroikaUseGlyphColors.value = !!textInfo.glyphColors;\n\n        var clipRect = this.clipRect;\n        if (!(clipRect && Array.isArray(clipRect) && clipRect.length === 4)) {\n          uniforms.uTroikaClipRect.value.fromArray(totalBounds);\n        } else {\n          uniforms.uTroikaClipRect.value.set(\n            Math.max(totalBounds[0], clipRect[0]),\n            Math.max(totalBounds[1], clipRect[1]),\n            Math.min(totalBounds[2], clipRect[2]),\n            Math.min(totalBounds[3], clipRect[3])\n          );\n        }\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n      }\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n      material.polygonOffset = !!this.depthOffset;\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n      // shortcut for setting material color via `color` prop on the mesh:\n      var color = this.color;\n      if (color != null && material.color && material.color.isColor && color !== material._troikaColor) {\n        material.color.set(material._troikaColor = color);\n      }\n\n      // base orientation\n      var orient = this.orientation || defaultOrient;\n      if (orient !== material._orientation) {\n        var rotMat = uniforms.uTroikaOrient.value;\n        orient = orient.replace(/[^-+xyz]/g, '');\n        var match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n        if (match) {\n          var hSign = match[1];\n          var hAxis = match[2];\n          var vSign = match[3];\n          var vAxis = match[4];\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n          rotMat.setFromMatrix4(tempMat4);\n        } else {\n          rotMat.identity();\n        }\n        material._orientation = orient;\n      }\n    };\n\n    /**\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n     */\n    TextMesh.prototype.raycast = function raycast (raycaster, intersects) {\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var bounds = textInfo.totalBounds;\n        raycastMesh.matrixWorld.multiplyMatrices(\n          this.matrixWorld,\n          tempMat4.set(\n            bounds[2] - bounds[0], 0, 0, bounds[0],\n            0, bounds[3] - bounds[1], 0, bounds[1],\n            0, 0, 1, 0,\n            0, 0, 0, 1\n          )\n        );\n        tempArray.length = 0;\n        raycastMesh.raycast(raycaster, tempArray);\n        for (var i = 0; i < tempArray.length; i++) {\n          tempArray[i].object = this;\n          intersects.push(tempArray[i]);\n        }\n      }\n    };\n\n    TextMesh.prototype.copy = function copy (source) {\n      var this$1 = this;\n\n      Mesh.prototype.copy.call(this, source);\n      COPYABLE_PROPS.forEach(function (prop) {\n        this$1[prop] = source[prop];\n      });\n      return this\n    };\n\n    TextMesh.prototype.clone = function clone () {\n      return new this.constructor().copy(this)\n    };\n\n    Object.defineProperties( TextMesh.prototype, prototypeAccessors );\n\n    return TextMesh;\n  }(three.Mesh));\n\n\n  // Create setters for properties that affect text layout:\n  SYNCABLE_PROPS.forEach(function (prop) {\n    var privateKey = '_private_' + prop;\n    Object.defineProperty(TextMesh.prototype, prop, {\n      get: function get() {\n        return this[privateKey]\n      },\n      set: function set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  });\n\n\n  // Deprecation handler for `anchor` array:\n  var deprMsgShown = false;\n  Object.defineProperty(TextMesh.prototype, 'anchor', {\n    get: function get() {\n      return this._deprecated_anchor\n    },\n    set: function set(val) {\n      this._deprecated_anchor = val;\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n      if (Array.isArray(val)) {\n        this.anchorX = ((+val[0] || 0) * 100) + \"%\";\n        this.anchorY = ((+val[1] || 0) * 100) + \"%\";\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n\n  //=== Utility functions for dealing with carets and selection ranges ===//\n\n  /**\n   * @typedef {object} TextCaret\n   * @property {number} x - x position of the caret\n   * @property {number} y - y position of the caret's bottom\n   * @property {number} height - height of the caret\n   * @property {number} charIndex - the index in the original input string of this caret's target\n   *   character; the caret will be for the position _before_ that character.\n   */\n\n  /**\n   * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n   * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n   * @param {number} x\n   * @param {number} y\n   * @return {TextCaret | null}\n   */\n  function getCaretAtPoint(textRenderInfo, x, y) {\n    var closestCaret = null;\n    var caretHeight = textRenderInfo.caretHeight;\n    var caretsByRow = groupCaretsByRow(textRenderInfo);\n\n    // Find nearest row by y first\n    var closestRowY = Infinity;\n    caretsByRow.forEach(function (carets, rowY) {\n      if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n        closestRowY = rowY;\n      }\n    });\n\n    // Then find closest caret by x within that row\n    caretsByRow.get(closestRowY).forEach(function (caret) {\n      if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n        closestCaret = caret;\n      }\n    });\n    return closestCaret\n  }\n\n\n  var _rectsCache = new WeakMap();\n\n  /**\n   * Given start and end character indexes, return a list of rectangles covering all the\n   * characters within that selection.\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   * @param {number} start - index of the first char in the selection\n   * @param {number} end - index of the first char after the selection\n   * @return {Array<{left, top, right, bottom}> | null}\n   */\n  function getSelectionRects(textRenderInfo, start, end) {\n    var rects;\n    if (textRenderInfo) {\n      // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n      var prevResult = _rectsCache.get(textRenderInfo);\n      if (prevResult && prevResult.start === start && prevResult.end === end) {\n        return prevResult.rects\n      }\n\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      var totalBounds = textRenderInfo.totalBounds;\n\n      // Normalize\n      if (end < start) {\n        var s = start;\n        start = end;\n        end = s;\n      }\n      start = Math.max(start, 0);\n      end = Math.min(end, caretPositions.length + 1);\n\n      // Collect into one rect per row\n      var rows = new Map();\n      for (var i = start; i < end; i++) {\n        var x1 = caretPositions[i * 3];\n        var x2 = caretPositions[i * 3 + 1];\n        var y = caretPositions[i * 3 + 2];\n        var row = rows.get(y);\n        if (!row) {\n          row = {left: x1, right: x2, bottom: y, top: y + caretHeight};\n          rows.set(y, row);\n        } else {\n          row.left = Math.max(Math.min(row.left, x1), totalBounds[0]);\n          row.right = Math.min(Math.max(row.right, x2), totalBounds[2]);\n        }\n      }\n      rects = [];\n      rows.forEach(function (rect) {\n        rects.push(rect);\n      });\n\n      _rectsCache.set(textRenderInfo, {start: start, end: end, rects: rects});\n    }\n    return rects\n  }\n\n  var _caretsByRowCache = new WeakMap();\n\n  function groupCaretsByRow(textRenderInfo) {\n    // textRenderInfo is frozen so it's safe to cache based on it\n    var caretsByRow = _caretsByRowCache.get(textRenderInfo);\n    if (!caretsByRow) {\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      caretsByRow = new Map();\n      for (var i = 0; i < caretPositions.length; i += 3) {\n        var rowY = caretPositions[i + 2];\n        var rowCarets = caretsByRow.get(rowY);\n        if (!rowCarets) {\n          caretsByRow.set(rowY, rowCarets = []);\n        }\n        rowCarets.push({\n          x: caretPositions[i],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3\n        });\n        // Add one more caret after the final char\n        if (i + 3 >= caretPositions.length) {\n          rowCarets.push({\n            x: caretPositions[i + 1],\n            y: rowY,\n            height: caretHeight,\n            charIndex: i / 3 + 1\n          });\n        }\n      }\n    }\n    _caretsByRowCache.set(textRenderInfo, caretsByRow);\n    return caretsByRow\n  }\n\n  exports.GlyphsGeometry = GlyphsGeometry;\n  exports.TextMesh = TextMesh;\n  exports.configureTextBuilder = configureTextBuilder;\n  exports.fontProcessorWorkerModule = fontProcessorWorkerModule;\n  exports.getCaretAtPoint = getCaretAtPoint;\n  exports.getSelectionRects = getSelectionRects;\n  exports.preloadFont = preloadFont;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"lineCount":5498}},"error":null,"hash":"fb6c4e6ec5859c87ecf1bc5a3ae4f0f9","cacheData":{"env":{}}}