{"id":"node_modules/follow/node_modules/request/oauth.js","dependencies":[{"name":"/Users/ross/Projects/picross-2/package.json","includedInParent":true,"mtime":1594258867440},{"name":"/Users/ross/Projects/picross-2/node_modules/follow/node_modules/request/package.json","includedInParent":true,"mtime":1594258867057},{"name":"crypto","loc":{"line":1,"column":21},"parent":"/Users/ross/Projects/picross-2/node_modules/follow/node_modules/request/oauth.js","resolved":"/Users/ross/Projects/picross-2/node_modules/crypto-browserify/index.js"},{"name":"querystring","loc":{"line":2,"column":17},"parent":"/Users/ross/Projects/picross-2/node_modules/follow/node_modules/request/oauth.js","resolved":"/Users/ross/Projects/picross-2/node_modules/querystring-es3/index.js"}],"generated":{"js":"var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace('!','%21')\n    .replace('*','%2A')\n    .replace('(','%28')\n    .replace(')','%29')\n    .replace(\"'\",'%27')\n    ;\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret, body) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth\n  var base = \n    httpMethod + \"&\" +\n    encodeURIComponent(  base_uri ) + \"&\" +\n    Object.keys(params).sort().map(function (i) {\n      // big WTF here with the escape + encoding but it's what twitter wants\n      return escape(rfc3986(i)) + \"%3D\" + escape(rfc3986(params[i]))\n    }).join(\"%26\")\n  var key = consumer_secret + '&'\n  if (token_secret) key += token_secret\n  return sha1(key, base)\n}\n\nexports.hmacsign = hmacsign\nexports.rfc3986 = rfc3986"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/follow/node_modules/request/oauth.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/follow/node_modules/request/oauth.js":"var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace('!','%21')\n    .replace('*','%2A')\n    .replace('(','%28')\n    .replace(')','%29')\n    .replace(\"'\",'%27')\n    ;\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret, body) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth\n  var base = \n    httpMethod + \"&\" +\n    encodeURIComponent(  base_uri ) + \"&\" +\n    Object.keys(params).sort().map(function (i) {\n      // big WTF here with the escape + encoding but it's what twitter wants\n      return escape(rfc3986(i)) + \"%3D\" + escape(rfc3986(params[i]))\n    }).join(\"%26\")\n  var key = consumer_secret + '&'\n  if (token_secret) key += token_secret\n  return sha1(key, base)\n}\n\nexports.hmacsign = hmacsign\nexports.rfc3986 = rfc3986"},"lineCount":34}},"error":null,"hash":"f12ad9ef37dfbf2d8b1a9bc88d39d287","cacheData":{"env":{}}}