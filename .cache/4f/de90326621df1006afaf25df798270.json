{"id":"node_modules/nano/node_modules/oauth-sign/index.js","dependencies":[{"name":"/Users/ross/Projects/picross-2/package.json","includedInParent":true,"mtime":1594258867440},{"name":"/Users/ross/Projects/picross-2/node_modules/nano/node_modules/oauth-sign/package.json","includedInParent":true,"mtime":1594258867033},{"name":"crypto","loc":{"line":1,"column":21},"parent":"/Users/ross/Projects/picross-2/node_modules/nano/node_modules/oauth-sign/index.js","resolved":"/Users/ross/Projects/picross-2/node_modules/crypto-browserify/index.js"},{"name":"querystring","loc":{"line":2,"column":17},"parent":"/Users/ross/Projects/picross-2/node_modules/nano/node_modules/oauth-sign/index.js","resolved":"/Users/ross/Projects/picross-2/node_modules/querystring-es3/index.js"}],"generated":{"js":"var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n    ;\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  var querystring = Object.keys(params).sort().map(function(key){\n    // big WTF here with the escape + encoding but it's what twitter wants\n    return escape(rfc3986(key)) + \"%3D\" + escape(rfc3986(params[key]))\n  }).join('%26')\n\n  var base = [\n    httpMethod ? httpMethod.toUpperCase() : 'GET',\n    rfc3986(base_uri),\n    querystring\n  ].join('&')\n\n  var key = [\n    consumer_secret,\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha1(key, base)\n}\n\nexports.hmacsign = hmacsign\nexports.rfc3986 = rfc3986\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/nano/node_modules/oauth-sign/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/nano/node_modules/oauth-sign/index.js":"var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n    ;\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  var querystring = Object.keys(params).sort().map(function(key){\n    // big WTF here with the escape + encoding but it's what twitter wants\n    return escape(rfc3986(key)) + \"%3D\" + escape(rfc3986(params[key]))\n  }).join('%26')\n\n  var base = [\n    httpMethod ? httpMethod.toUpperCase() : 'GET',\n    rfc3986(base_uri),\n    querystring\n  ].join('&')\n\n  var key = [\n    consumer_secret,\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha1(key, base)\n}\n\nexports.hmacsign = hmacsign\nexports.rfc3986 = rfc3986\n"},"lineCount":44}},"error":null,"hash":"606ba6b54589b81bf2f5688f08c10fb5","cacheData":{"env":{}}}